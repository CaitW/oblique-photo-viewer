[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/js/app.jsx",
    "content": "/**\n * This file is the primary entry point for the application.\n */\nimport React from \"react\"\nimport { render } from \"react-dom\"\n// layout components\nimport { Grid, Row } from \"react-bootstrap\"\nimport { Provider } from \"react-redux\"\n// containers\nimport NavBar from \"./containers/NavBar\"\nimport Sidebar from \"./containers/Sidebar\"\nimport MobileFeaturePopup from \"./components/FeaturePopups/MobileFeaturePopup\"\nimport MapWrapper from \"./wrappers/MapWrapper\"\nimport MobileLayerList from \"./containers/MobileLayerList\"\nimport PinnedFeaturePopupContainer from \"./containers/PinnedFeaturePopupContainer\"\nimport LeafletMap from \"./containers/LeafletMap\"\n// Redux\nimport store from \"./store\"\nimport { updateWindowDimensions } from \"./ducks/mobile\"\n\nclass App extends React.Component {\n  static updateDimensions() {\n    const height = window.innerHeight\n    const width = window.innerWidth\n    store.dispatch(updateWindowDimensions(height, width))\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      sidebarOpen: true\n    }\n    this.toggleSidebar = this.toggleSidebar.bind(this)\n  }\n\n  componentDidMount() {\n    this.constructor.updateDimensions()\n    window.addEventListener(\"resize\", this.constructor.updateDimensions)\n  }\n\n  toggleSidebar() {\n    this.setState({\n      sidebarOpen: !this.state.sidebarOpen\n    })\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Grid fluid className=\"wiscviewer-grid\">\n          <MobileFeaturePopup />\n          <MobileLayerList />\n          <Row className=\"wiscviewer-nav-container\">\n            <NavBar />\n          </Row>\n          <Row className=\"wiscviewer-content-container\">\n            <Sidebar sidebarOpen={this.state.sidebarOpen} />\n            <MapWrapper\n              sidebarOpen={this.state.sidebarOpen}\n              toggleSidebar={this.toggleSidebar}\n            >\n              <LeafletMap sidebarOpen={this.state.sidebarOpen} />\n            </MapWrapper>\n            <PinnedFeaturePopupContainer />\n          </Row>\n        </Grid>\n      </Provider>\n    )\n  }\n}\nrender(<App />, document.getElementById(\"react-root\"))\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/app.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "App",
    "memberof": "src/js/app.jsx",
    "static": true,
    "longname": "src/js/app.jsx~App",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/app.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ],
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "method",
    "name": "updateDimensions",
    "memberof": "src/js/app.jsx~App",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/app.jsx~App.updateDimensions",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 51,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/js/app.jsx~App",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/app.jsx~App#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "state",
    "memberof": "src/js/app.jsx~App",
    "static": false,
    "longname": "src/js/app.jsx~App#state",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "{\"sidebarOpen\": boolean}"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "src/js/app.jsx~App",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/app.jsx~App#componentDidMount",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "toggleSidebar",
    "memberof": "src/js/app.jsx~App",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/app.jsx~App#toggleSidebar",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "render",
    "memberof": "src/js/app.jsx~App",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/app.jsx~App#render",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "file",
    "name": "src/js/classes/ObliquePhotoMap.js",
    "content": "import axios from \"axios\"\nimport { unmountComponentAtNode } from \"react-dom\"\nimport L from \"leaflet\"\n\n// Leaflet Plugins\nimport AddSVGShapesToLeaflet from \"leaflet-svg-shape-markers\"\nimport AddMousePosition from \"../lib/AddMousePosition\"\n\nimport CONFIG from \"../config.json\"\nimport LAYER_STYLE from \"../layers/layerStyles\"\nimport { onEachFeature } from \"../layers/layerFeatures\"\nimport { mapNewZoomLevel, mapMousedown, doneZooming } from \"../ducks/map\"\nimport { layerPreload, layerLoaded, layerError } from \"../ducks/layers\"\nimport { basemapPreload, basemapLoaded, basemapError } from \"../ducks/basemaps\"\nimport store from \"../store\"\n\n/**\n * The main class that contains the Leaflet-based map component\n */\nexport default class ObliquePhotoMap {\n  /**\n   * Leaflet popups are tied into React, and the react nodes need to be\n   * manually added / removed. The below function removes the React node\n   * when a popup is closed\n   */\n  static onPopupClose(e) {\n    const container = e.popup.getContent()\n    /**\n     * setTimeout hack to get around this current issue with React:\n     * https://github.com/facebook/react/issues/3298\n     */\n    setTimeout(() => {\n      unmountComponentAtNode(container)\n    }, 10)\n  }\n\n  /**\n   * Dispatch a map action every time the user clicks the map\n   */\n  static onMapMousedown() {\n    store.dispatch(mapMousedown())\n  }\n\n  /**\n   * @param {string} map - the string ID of the html element that the map will be added to\n   */\n  constructor(map) {\n    const self = this\n    this.basemapGroup = L.layerGroup()\n    this.layerGroup = L.layerGroup()\n    this.map = L.map(map, {\n      maxBounds: CONFIG.map.maxExtent,\n      layers: [self.basemapGroup, self.layerGroup],\n      inertia: false\n    }).fitBounds(CONFIG.map.wisconsinExtent, {\n      padding: [10, 10]\n    })\n    // shims to add non-es6 plugins\n    AddMousePosition(L)\n    AddSVGShapesToLeaflet(L)\n    L.control.mousePosition().addTo(self.map)\n    L.control.scale().addTo(self.map)\n    this.basemapIndex = {}\n    this.layerIndex = {}\n    this.dispatchZoom = this.dispatchZoom.bind(this)\n    this.updateSize = this.updateSize.bind(this)\n    this.zoomToPopup = this.zoomToPopup.bind(this)\n    this.map.on(\"zoomend\", self.dispatchZoom)\n    this.map.on(\"mousedown\", self.constructor.onMapMousedown)\n    this.map.on(\"popupclose\", self.constructor.onPopupClose)\n    // set some default values\n    this.dispatchZoom()\n  }\n\n  /**\n   * Dispatch a zoom action every time the map is zoomed\n   */\n  dispatchZoom() {\n    const currentZoom = this.map.getZoom()\n    store.dispatch(mapNewZoomLevel(currentZoom))\n  }\n\n  /**\n   * Create a new map layer\n   * @param {string} layerId - a unique identifier for a layer\n   * @param {Object} layer - key/value pairs describing a layer\n   */\n  createLayer(layerId, layer) {\n    const self = this\n    store.dispatch(layerPreload(layerId))\n    switch (layer.type) {\n      case \"tileLayer\":\n        if (typeof layer.url === \"undefined\") {\n          console.error(\"Layer \" + layerId + \" must have a tile URL\")\n        } else {\n          this.layerIndex[layerId] = L.tileLayer(layer.url, {\n            zIndex: 1\n          })\n          this.layerIndex[layerId].once(\"load\", () => {\n            store.dispatch(layerLoaded(layerId))\n          })\n          this.layerIndex[layerId].once(\"tileerror\", () => {\n            store.dispatch(layerError(layerId))\n          })\n        }\n        break\n      case \"geojson\":\n        if (typeof layer.dataLocation === \"undefined\") {\n          console.error(\"Layer \" + layerId + \" must have a data location\")\n        } else {\n          const layerOptions = {\n            pointToLayer(feature, latlng) {\n              let marker\n              switch (layer.displayType) {\n                case \"square\":\n                  marker = new L.ShapeMarker(latlng, {\n                    shape: \"square\",\n                    radius: 4,\n                    layerId\n                  })\n                  break\n                case \"triangle\":\n                  marker = new L.ShapeMarker(latlng, {\n                    shape: \"triangle\",\n                    radius: 4,\n                    layerId\n                  })\n                  break\n                default:\n                  marker = L.circleMarker(latlng, {\n                    layerId\n                  })\n                  break\n              }\n              return marker\n            },\n            layerId\n          }\n          layerOptions.onEachFeature = onEachFeature(layerId, self.map)\n          layerOptions.style = LAYER_STYLE(layerId)\n          this.layerIndex[layerId] = L.geoJson(null, layerOptions)\n          axios\n            .get(layer.dataLocation)\n            .then(response => {\n              self.layerIndex[layerId].addData(response.data)\n              store.dispatch(layerLoaded(layerId))\n            })\n            .catch(error => {\n              console.error(error)\n              store.dispatch(layerError(layerId))\n            })\n        }\n        break\n      default:\n        console.error(\"Unrecognized layer type in config\")\n        store.dispatch(layerError(layerId))\n        break\n    }\n  }\n\n  /**\n   * Toggle a layer on or off\n   * - Create a layer if it doesn't exist\n   * - Toggle it if it already exists and is in the map\n   *\n   * @param {string} layerId - a unique identifier for a layer\n   * @param {Object} layer - key/value pairs describing a layer\n   */\n  toggleLayer(layerId, layer) {\n    if (typeof this.layerIndex[layerId] === \"undefined\") {\n      this.createLayer(layerId, layer)\n    }\n    if (layer.active === true) {\n      this.layerGroup.addLayer(this.layerIndex[layerId])\n    } else {\n      this.layerGroup.removeLayer(this.layerIndex[layerId])\n    }\n  }\n\n  /**\n   * Toggle a basemap on or off\n   * - Create if it doesn't exist\n   * - Toggle it if it already exists\n   *\n   * @param {string} basemapId - a unique identifier for a layer\n   * @param {Object} basemap - key/value pairs describing a layer\n   */\n  toggleBasemap(basemapId, basemap) {\n    const self = this\n    if (typeof basemap.url === \"undefined\") {\n      console.error(\"Basemap \" + basemapId + \" must have a tile URL\")\n    } else {\n      if (typeof this.basemapIndex[basemapId] === \"undefined\") {\n        this.basemapIndex[basemapId] = L.tileLayer(basemap.url, {\n          zIndex: 0\n        })\n      }\n      if (basemap.active === true) {\n        this.basemapGroup.clearLayers()\n        store.dispatch(basemapPreload(basemapId))\n        self.basemapIndex[basemapId].once(\"load\", () => {\n          store.dispatch(basemapLoaded(basemapId))\n        })\n        self.basemapIndex[basemapId].once(\"tileerror\", () => {\n          store.dispatch(basemapError(basemapId))\n        })\n        this.basemapGroup.addLayer(self.basemapIndex[basemapId])\n      }\n    }\n  }\n\n  /**\n   * Zoom to an extent\n   * - wrapper for the Leaflet function map.fitBounds with added padding\n   *\n   * @param {LatLngBounds|Array[]} extent - [[lat, lng],[lat, lng]]\n   */\n  zoomToExtent(extent) {\n    this.map.fitBounds(extent, {\n      padding: [10, 10]\n    })\n    store.dispatch(doneZooming())\n  }\n\n  /**\n   * Pan and Zoom to a location\n   * - wrapper for the Leaflet function map.setView\n   *\n   * @param {number} zoom - zoom level\n   * @param {LatLng} coordinates - [lat, lng]\n   */\n  panAndZoom(zoom, coordinates) {\n    this.map.setView(coordinates, zoom)\n    store.dispatch(doneZooming())\n  }\n\n  /**\n   *\n   * @param {number} zoom - zoom level\n   * @param {LatLng} coordinates - [lat, lng]\n   */\n  zoomToPopup(zoom, coordinates) {\n    this.map.panTo(coordinates, {\n      animate: true\n    })\n    this.map.once(\"moveend\", () => {\n      this.map.setZoom(zoom, {\n        animate: true\n      })\n    })\n  }\n\n  /**\n   * Force leaflet to re-calculate the size of the map within its bounding div\n   * - wrapper for the Leaflet function invalidateSize\n   */\n  updateSize() {\n    this.map.invalidateSize()\n  }\n}\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/classes/ObliquePhotoMap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 58,
    "kind": "class",
    "name": "ObliquePhotoMap",
    "memberof": "src/js/classes/ObliquePhotoMap.js",
    "static": true,
    "longname": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/classes/ObliquePhotoMap.js",
    "importStyle": "ObliquePhotoMap",
    "description": "The main class that contains the Leaflet-based map component",
    "lineNumber": 20,
    "interface": false
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "onPopupClose",
    "memberof": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap.onPopupClose",
    "access": "public",
    "description": "Leaflet popups are tied into React, and the react nodes need to be\nmanually added / removed. The below function removes the React node\nwhen a popup is closed",
    "lineNumber": 26,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "onMapMousedown",
    "memberof": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap.onMapMousedown",
    "access": "public",
    "description": "Dispatch a map action every time the user clicks the map",
    "lineNumber": 40,
    "params": [],
    "return": null
  },
  {
    "__docId__": 61,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": "the string ID of the html element that the map will be added to"
      }
    ]
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "basemapGroup",
    "memberof": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap",
    "static": false,
    "longname": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap#basemapGroup",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "layerGroup",
    "memberof": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap",
    "static": false,
    "longname": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap#layerGroup",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "member",
    "name": "map",
    "memberof": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap",
    "static": false,
    "longname": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap#map",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "member",
    "name": "basemapIndex",
    "memberof": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap",
    "static": false,
    "longname": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap#basemapIndex",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "member",
    "name": "layerIndex",
    "memberof": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap",
    "static": false,
    "longname": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap#layerIndex",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "dispatchZoom",
    "memberof": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap#dispatchZoom",
    "access": "public",
    "description": "Dispatch a zoom action every time the map is zoomed",
    "lineNumber": 78,
    "params": [],
    "return": null
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "createLayer",
    "memberof": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap#createLayer",
    "access": "public",
    "description": "Create a new map layer",
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layerId",
        "description": "a unique identifier for a layer"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": "key/value pairs describing a layer"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "toggleLayer",
    "memberof": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap#toggleLayer",
    "access": "public",
    "description": "Toggle a layer on or off\n- Create a layer if it doesn't exist\n- Toggle it if it already exists and is in the map",
    "lineNumber": 169,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layerId",
        "description": "a unique identifier for a layer"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": "key/value pairs describing a layer"
      }
    ],
    "return": null
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "toggleBasemap",
    "memberof": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap#toggleBasemap",
    "access": "public",
    "description": "Toggle a basemap on or off\n- Create if it doesn't exist\n- Toggle it if it already exists",
    "lineNumber": 188,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "basemapId",
        "description": "a unique identifier for a layer"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "basemap",
        "description": "key/value pairs describing a layer"
      }
    ],
    "return": null
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "zoomToExtent",
    "memberof": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap#zoomToExtent",
    "access": "public",
    "description": "Zoom to an extent\n- wrapper for the Leaflet function map.fitBounds with added padding",
    "lineNumber": 218,
    "params": [
      {
        "nullable": null,
        "types": [
          "LatLngBounds",
          "Array[]"
        ],
        "spread": false,
        "optional": false,
        "name": "extent",
        "description": "[[lat, lng],[lat, lng]]"
      }
    ],
    "return": null
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "panAndZoom",
    "memberof": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap#panAndZoom",
    "access": "public",
    "description": "Pan and Zoom to a location\n- wrapper for the Leaflet function map.setView",
    "lineNumber": 232,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "zoom",
        "description": "zoom level"
      },
      {
        "nullable": null,
        "types": [
          "LatLng"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinates",
        "description": "[lat, lng]"
      }
    ],
    "return": null
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "zoomToPopup",
    "memberof": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap#zoomToPopup",
    "access": "public",
    "description": "",
    "lineNumber": 242,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "zoom",
        "description": "zoom level"
      },
      {
        "nullable": null,
        "types": [
          "LatLng"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinates",
        "description": "[lat, lng]"
      }
    ],
    "return": null
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "updateSize",
    "memberof": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/classes/ObliquePhotoMap.js~ObliquePhotoMap#updateSize",
    "access": "public",
    "description": "Force leaflet to re-calculate the size of the map within its bounding div\n- wrapper for the Leaflet function invalidateSize",
    "lineNumber": 257,
    "params": [],
    "return": null
  },
  {
    "__docId__": 78,
    "kind": "file",
    "name": "src/js/components/AboutButton.jsx",
    "content": "/**\n * AboutButton.jsx\n * Link to the About page\n */\nimport React from \"react\"\n\nconst AboutButton = () => (\n  <li\n    role=\"presentation\"\n    className=\"wiscviewer-nav-tool wiscviewer-nav-tool-about\"\n  >\n    <a href=\"about.html\" rel=\"noopener noreferrer\" target=\"_blank\">\n      <i className=\"fa fa-info-circle wiscviewer-nav-tool-icon\" />\n    </a>\n  </li>\n)\n\nexport default AboutButton\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/components/AboutButton.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 79,
    "kind": "function",
    "name": "AboutButton",
    "memberof": "src/js/components/AboutButton.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/components/AboutButton.jsx~AboutButton",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/components/AboutButton.jsx",
    "importStyle": "AboutButton",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 80,
    "kind": "file",
    "name": "src/js/components/Basemap.jsx",
    "content": "/**\n * Basemap.jsx\n * This builds the list item representing basemaps in the sidebar and mobile layer list\n */\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { ListGroupItem } from \"react-bootstrap\"\n\nconst Basemap = props => {\n  const iconClassNames = [\"fa\", \"wiscviewer-layer-left-icon\"]\n  const layerClassNames = [\"wiscviewer-layer-item\"]\n  if (props.state === \"loading\") {\n    iconClassNames.push(\"fa-circle-o-notch\")\n    iconClassNames.push(\"fa-spin\")\n  } else if (props.state === \"error\") {\n    iconClassNames.push(\"fa-exclamation-triangle\")\n    iconClassNames.push(\"error\")\n  } else {\n    iconClassNames.push(\"fa-map\")\n    if (props.active) {\n      iconClassNames.push(\"active\")\n      layerClassNames.push(\"active\")\n    }\n  }\n  return (\n    <ListGroupItem\n      active={props.active}\n      className={layerClassNames.join(\" \")}\n      onClick={props.onBasemapClick}\n    >\n      <i className={iconClassNames.join(\" \")} />\n      {props.basemapName}\n    </ListGroupItem>\n  )\n}\n\nBasemap.propTypes = {\n  active: PropTypes.bool.isRequired,\n  onBasemapClick: PropTypes.func.isRequired,\n  basemapName: PropTypes.string.isRequired,\n  state: PropTypes.string\n}\n\nBasemap.defaultProps = {\n  state: \"init\"\n}\n\nexport default Basemap\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/components/Basemap.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 81,
    "kind": "function",
    "name": "Basemap",
    "memberof": "src/js/components/Basemap.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/components/Basemap.jsx~Basemap",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/components/Basemap.jsx",
    "importStyle": "Basemap",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "file",
    "name": "src/js/components/BasemapList.jsx",
    "content": "/**\n * BasemapList.jsx\n * This creates the group container that holds each Basemap list item,\n * in the sidebar and mobile layer list\n */\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { ListGroup } from \"react-bootstrap\"\n\nimport Basemap from \"./Basemap\"\n\nconst BasemapList = props => {\n  const basemaps = []\n  for (const basemapId in props.basemaps) {\n    const basemap = props.basemaps[basemapId]\n    const boundOnBasemapClick = props.onBasemapClick.bind(null, basemapId)\n    basemaps.push(\n      <Basemap\n        key={basemapId}\n        basemapName={basemap.name}\n        active={basemap.active}\n        onBasemapClick={boundOnBasemapClick}\n        state={basemap.state}\n      />\n    )\n  }\n\n  const bodyClassNames = [\n    \"panel-body\",\n    \"pullDown\",\n    \"wiscviewer-sidebar-panel-body\"\n  ]\n  const headerClassNames = [\"panel-heading\", \"wiscviewer-sidebar-panel-header\"]\n  if (props.panelVisible === false) {\n    bodyClassNames.push(\"hidden\")\n  } else {\n    headerClassNames.push(\"active\")\n  }\n  return (\n    <div className=\"panel panel-default wiscviewer-sidebar-panel\">\n      <div className={headerClassNames.join(\" \")} role=\"button\" tabIndex={0}>\n        <div className=\"wiscviewer-layer-group-name\">Basemaps</div>\n        <div className=\"wiscviewer-layer-group-info\">\n          <a href=\"about.html#basemaps\" target=\"_blank\">\n            <i className=\"fa fa-question-circle\" />\n          </a>\n        </div>\n      </div>\n      <div className={bodyClassNames.join(\" \")}>\n        <ListGroup className=\"wiscviewer-layer-list-group\">\n          {basemaps}\n        </ListGroup>\n      </div>\n    </div>\n  )\n}\n\nBasemapList.propTypes = {\n  basemaps: PropTypes.object.isRequired,\n  panelVisible: PropTypes.bool.isRequired,\n  onBasemapClick: PropTypes.func.isRequired\n}\n\nexport default BasemapList\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/components/BasemapList.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 83,
    "kind": "function",
    "name": "BasemapList",
    "memberof": "src/js/components/BasemapList.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/components/BasemapList.jsx~BasemapList",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/components/BasemapList.jsx",
    "importStyle": "BasemapList",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "file",
    "name": "src/js/components/FeaturePopups/FeaturePopup.jsx",
    "content": "/**\n * FeatureModal.jsx\n * This creates the modal that's displayed when a user clicks on an object in the map\n */\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport store from \"../../store\"\nimport PopupTabs from \"./components/PopupTabs\"\nimport PopupTitle from \"./components/PopupTitle\"\nimport PopupFooter from \"./components/PopupFooter\"\nimport { newPinnedFeature } from \"../../ducks/pinnedFeatures\"\nimport { LAYERS_BY_ID, LAYER_GROUPS_BY_ID } from \"../../util\"\n\nclass FeaturePopup extends React.Component {\n  constructor(props) {\n    super(props)\n    this.update = this.update.bind(this)\n    this.bringToFront = this.bringToFront.bind(this)\n    this.close = this.close.bind(this)\n    this.pin = this.pin.bind(this)\n    this.popupType = \"leaflet\"\n  }\n\n  /**\n   * When the component mounts, update the size of the Leaflet popup to adjust for the content\n   */\n  componentDidMount() {\n    this.props.updateAfterZoom()\n  }\n\n  /**\n   * Update the size of the Leaflet popup to adjust for the content\n   */\n  update() {\n    this.props.popup.update()\n  }\n\n  /**\n   * When the user clicks on the popup, bring it to the front (z-index)\n   */\n  bringToFront() {\n    this.props.popup.bringToFront()\n  }\n\n  /**\n   * Close the popup\n   */\n  close() {\n    this.props.closePopup()\n  }\n\n  /**\n   * Pin the popup. Adds the popup to the Pinned Popup Container and removes it from the leaflet map.\n   */\n  pin() {\n    const position = this.props.getPosition()\n    store.dispatch(\n      newPinnedFeature(\n        this.props.layerId,\n        this.props.featureProperties,\n        position\n      )\n    )\n    this.close()\n  }\n\n  render() {\n    const { layerGroupId } = LAYERS_BY_ID[this.props.layerId]\n    const layerGroupName = LAYER_GROUPS_BY_ID[layerGroupId].name\n    const layerName = LAYERS_BY_ID[this.props.layerId].name\n    return (\n      <div\n        className=\"wiscviewer-feature-popup\"\n        tabIndex={-1}\n        role=\"button\"\n        onClick={this.bringToFront}\n      >\n        <div className=\"wiscviewer-feature-popup-header\">\n          <div className=\"wiscviewer-feature-popup-controls\">\n            <i\n              className=\"fa fa-thumb-tack feature-popup-pin\"\n              onClick={this.pin}\n              role=\"button\"\n              tabIndex={-1}\n            />\n            <span className=\"wiscviewer-feature-nav-tools\">\n              <i\n                className=\"fa fa-arrow-left feature-popup-previous-button\"\n                onClick={this.props.openPreviousFeature}\n                role=\"button\"\n                tabIndex={-1}\n              />\n              <i\n                className=\"fa fa-arrow-right feature-popup-next-button\"\n                onClick={this.props.openNextFeature}\n                role=\"button\"\n                tabIndex={-1}\n              />\n            </span>\n            <i\n              className=\"fa fa-times feature-popup-close-button\"\n              onClick={this.close}\n              role=\"button\"\n              tabIndex={-1}\n            />\n          </div>\n        </div>\n        <div className=\"wiscviewer-feature-popup-body\">\n          <PopupTabs\n            layerId={this.props.layerId}\n            featureProperties={this.props.featureProperties}\n            update={this.update}\n            popupType={this.popupType}\n          />\n        </div>\n        <div className=\"wiscviewer-feature-popup-footer\">\n          <PopupTitle\n            featureProperties={this.props.featureProperties}\n            layerGroupName={layerGroupName}\n            layerName={layerName}\n          />\n          <PopupFooter\n            layerId={this.props.layerId}\n            featureProperties={this.props.featureProperties}\n          >\n            <div key=\"clearfix\" className=\"clearfix\" />\n          </PopupFooter>\n        </div>\n      </div>\n    )\n  }\n}\n\nFeaturePopup.propTypes = {\n  layerId: PropTypes.string.isRequired,\n  featureProperties: PropTypes.object.isRequired,\n  popup: PropTypes.instanceOf(L.Popup).isRequired,\n  closePopup: PropTypes.func.isRequired,\n  openNextFeature: PropTypes.func.isRequired,\n  openPreviousFeature: PropTypes.func.isRequired,\n  getPosition: PropTypes.func.isRequired,\n  updateAfterZoom: PropTypes.func.isRequired\n}\n\nexport default FeaturePopup\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/components/FeaturePopups/FeaturePopup.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 85,
    "kind": "class",
    "name": "FeaturePopup",
    "memberof": "src/js/components/FeaturePopups/FeaturePopup.jsx",
    "static": true,
    "longname": "src/js/components/FeaturePopups/FeaturePopup.jsx~FeaturePopup",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/components/FeaturePopups/FeaturePopup.jsx",
    "importStyle": "FeaturePopup",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 86,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/js/components/FeaturePopups/FeaturePopup.jsx~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/FeaturePopup.jsx~FeaturePopup#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 91,
    "kind": "member",
    "name": "popupType",
    "memberof": "src/js/components/FeaturePopups/FeaturePopup.jsx~FeaturePopup",
    "static": false,
    "longname": "src/js/components/FeaturePopups/FeaturePopup.jsx~FeaturePopup#popupType",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "src/js/components/FeaturePopups/FeaturePopup.jsx~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/FeaturePopup.jsx~FeaturePopup#componentDidMount",
    "access": "public",
    "description": "When the component mounts, update the size of the Leaflet popup to adjust for the content",
    "lineNumber": 28,
    "params": [],
    "return": null
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "update",
    "memberof": "src/js/components/FeaturePopups/FeaturePopup.jsx~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/FeaturePopup.jsx~FeaturePopup#update",
    "access": "public",
    "description": "Update the size of the Leaflet popup to adjust for the content",
    "lineNumber": 35,
    "params": [],
    "return": null
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "bringToFront",
    "memberof": "src/js/components/FeaturePopups/FeaturePopup.jsx~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/FeaturePopup.jsx~FeaturePopup#bringToFront",
    "access": "public",
    "description": "When the user clicks on the popup, bring it to the front (z-index)",
    "lineNumber": 42,
    "params": [],
    "return": null
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "close",
    "memberof": "src/js/components/FeaturePopups/FeaturePopup.jsx~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/FeaturePopup.jsx~FeaturePopup#close",
    "access": "public",
    "description": "Close the popup",
    "lineNumber": 49,
    "params": [],
    "return": null
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "pin",
    "memberof": "src/js/components/FeaturePopups/FeaturePopup.jsx~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/FeaturePopup.jsx~FeaturePopup#pin",
    "access": "public",
    "description": "Pin the popup. Adds the popup to the Pinned Popup Container and removes it from the leaflet map.",
    "lineNumber": 56,
    "params": [],
    "return": null
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "render",
    "memberof": "src/js/components/FeaturePopups/FeaturePopup.jsx~FeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/FeaturePopup.jsx~FeaturePopup#render",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "file",
    "name": "src/js/components/FeaturePopups/MobileFeaturePopup.jsx",
    "content": "/**\n * FeatureModal.jsx\n * This creates the modal that's displayed when a user clicks on an object in the map\n */\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Modal, Button } from \"react-bootstrap\"\nimport { connect } from \"react-redux\"\nimport store from \"../../store\"\n\nimport { getMobileFeaturePopupProps } from \"../../selectors\"\nimport { closeMobileFeatureModal } from \"../../ducks/mobile\"\nimport { getFeatureLayer } from \"../../layers/layerFeatures\"\n\nimport PopupTabs from \"./components/PopupTabs\"\nimport PopupTitle from \"./components/PopupTitle\"\nimport PopupFooter from \"./components/PopupFooter\"\n\nconst mapStateToProps = state => getMobileFeaturePopupProps(state)\n\nclass MobileFeaturePopup extends React.Component {\n  /**\n   * Closes the mobile feature popup\n   */\n  static close() {\n    store.dispatch(closeMobileFeatureModal())\n  }\n\n  constructor(props) {\n    super(props)\n    this.openPreviousFeature = this.openPreviousFeature.bind(this)\n    this.openNextFeature = this.openNextFeature.bind(this)\n    this.popupType = \"modal\"\n  }\n\n  /**\n   * Opens previous feature in the layer\n   */\n  openPreviousFeature() {\n    getFeatureLayer(\n      this.props.featureIndex,\n      this.props.layerId\n    ).openPreviousFeature()\n  }\n\n  /**\n   * Opens next feature in the layer\n   */\n  openNextFeature() {\n    getFeatureLayer(\n      this.props.featureIndex,\n      this.props.layerId\n    ).openPreviousFeature()\n  }\n\n  render() {\n    const classNames = [\n      \"wiscviewer-modal\",\n      \"wiscviewer-mobile-modal\",\n      \"wiscviewer-mobile-feature-popup\",\n      \"static-modal\"\n    ]\n    if (this.props.visible === false) {\n      classNames.push(\"hidden\")\n    }\n    return (\n      <div className={classNames.join(\" \")}>\n        <Modal.Dialog>\n          <Modal.Header>\n            <PopupTitle\n              featureProperties={this.props.featureProperties}\n              layerGroupName={this.props.layerGroupName}\n              layerName={this.props.layerName}\n            />\n          </Modal.Header>\n          <Modal.Body>\n            <PopupTabs\n              layerId={this.props.layerId}\n              featureProperties={this.props.featureProperties}\n              popupType={this.popupType}\n            />\n          </Modal.Body>\n          <Modal.Footer>\n            <PopupFooter\n              layerId={this.props.layerId}\n              featureProperties={this.props.featureProperties}\n            >\n              <div className=\"wiscviewer-feature-controls\">\n                <i\n                  className=\"fa fa-arrow-left wiscviewer-feature-popup-previous-button\"\n                  onClick={this.openPreviousFeature}\n                  role=\"button\"\n                  tabIndex={-1}\n                />\n                <Button\n                  key=\"close\"\n                  className=\"wiscviewer-mobile-feature-modal-close\"\n                  onClick={this.constructor.close}\n                >\n                  Close\n                </Button>\n                <i\n                  className=\"fa fa-arrow-right wiscviewer-feature-popup-next-button\"\n                  onClick={this.openNextFeature}\n                  role=\"button\"\n                  tabIndex={-1}\n                />\n              </div>\n            </PopupFooter>\n          </Modal.Footer>\n        </Modal.Dialog>\n      </div>\n    )\n  }\n}\n\nMobileFeaturePopup.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  featureProperties: PropTypes.oneOfType([PropTypes.object, PropTypes.bool])\n    .isRequired,\n  layerId: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).isRequired,\n  layerName: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).isRequired,\n  layerGroupName: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n    .isRequired,\n  featureIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.bool])\n    .isRequired\n}\n\nexport default connect(mapStateToProps)(MobileFeaturePopup)\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/components/FeaturePopups/MobileFeaturePopup.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/js/components/FeaturePopups/MobileFeaturePopup.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/components/FeaturePopups/MobileFeaturePopup.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/components/FeaturePopups/MobileFeaturePopup.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 100,
    "kind": "class",
    "name": "MobileFeaturePopup",
    "memberof": "src/js/components/FeaturePopups/MobileFeaturePopup.jsx",
    "static": true,
    "longname": "src/js/components/FeaturePopups/MobileFeaturePopup.jsx~MobileFeaturePopup",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/components/FeaturePopups/MobileFeaturePopup.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ],
    "ignore": true
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "close",
    "memberof": "src/js/components/FeaturePopups/MobileFeaturePopup.jsx~MobileFeaturePopup",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/components/FeaturePopups/MobileFeaturePopup.jsx~MobileFeaturePopup.close",
    "access": "public",
    "description": "Closes the mobile feature popup",
    "lineNumber": 25,
    "params": [],
    "return": null
  },
  {
    "__docId__": 102,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/js/components/FeaturePopups/MobileFeaturePopup.jsx~MobileFeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/MobileFeaturePopup.jsx~MobileFeaturePopup#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 105,
    "kind": "member",
    "name": "popupType",
    "memberof": "src/js/components/FeaturePopups/MobileFeaturePopup.jsx~MobileFeaturePopup",
    "static": false,
    "longname": "src/js/components/FeaturePopups/MobileFeaturePopup.jsx~MobileFeaturePopup#popupType",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "openPreviousFeature",
    "memberof": "src/js/components/FeaturePopups/MobileFeaturePopup.jsx~MobileFeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/MobileFeaturePopup.jsx~MobileFeaturePopup#openPreviousFeature",
    "access": "public",
    "description": "Opens previous feature in the layer",
    "lineNumber": 39,
    "params": [],
    "return": null
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "openNextFeature",
    "memberof": "src/js/components/FeaturePopups/MobileFeaturePopup.jsx~MobileFeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/MobileFeaturePopup.jsx~MobileFeaturePopup#openNextFeature",
    "access": "public",
    "description": "Opens next feature in the layer",
    "lineNumber": 49,
    "params": [],
    "return": null
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "render",
    "memberof": "src/js/components/FeaturePopups/MobileFeaturePopup.jsx~MobileFeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/MobileFeaturePopup.jsx~MobileFeaturePopup#render",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "src/js/components/FeaturePopups/PinnedFeaturePopup.jsx",
    "content": "/**\n * FeatureModal.jsx\n * This creates the modal that's displayed when a user clicks on an object in the map\n */\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Draggable from \"react-draggable\"\n\nimport PopupTabs from \"./components/PopupTabs\"\nimport PopupTitle from \"./components/PopupTitle\"\nimport PopupFooter from \"./components/PopupFooter\"\n\nclass PinnedFeaturePopup extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      height: 300,\n      width: 300\n    }\n    this.popupType = \"pinned\"\n  }\n\n  /**\n   * On component mount, set the width and height of the container\n   */\n  componentDidMount() {\n    const height = this.content.clientHeight\n    const width = this.content.clientWidth\n    // eslint-disable-next-line\n    this.setState({\n      height,\n      width\n    })\n  }\n\n  render() {\n    const initialPositionAdjustedForContent = {\n      x: this.props.initialPosition.x - this.state.width / 2,\n      y: this.props.initialPosition.y - this.state.height\n    }\n    const style = {\n      top: initialPositionAdjustedForContent.y,\n      left: initialPositionAdjustedForContent.x,\n      zIndex: this.props.zIndex\n    }\n    return (\n      <Draggable axis=\"both\" handle=\".handle\" zIndex={1100}>\n        <div\n          className=\"wiscviewer-feature-popup wiscviewer-pinned-feature-popup hidden-xs\"\n          role=\"button\"\n          ref={content => {\n            this.content = content\n          }}\n          style={style}\n          onClick={this.props.onClick}\n          tabIndex={0}\n        >\n          <div className=\"wiscviewer-feature-popup-header handle\">\n            <div className=\"wiscviewer-feature-popup-controls\">\n              <i\n                className=\"fa fa-times feature-popup-close-button\"\n                onClick={this.props.closePopup}\n                role=\"button\"\n                tabIndex={-1}\n              />\n            </div>\n          </div>\n          <div className=\"wiscviewer-feature-popup-body\">\n            <PopupTabs\n              layerId={this.props.layerId}\n              featureProperties={this.props.featureProperties}\n              popupType={this.popupType}\n            />\n          </div>\n          <div className=\"wiscviewer-feature-popup-footer\">\n            <PopupTitle\n              featureProperties={this.props.featureProperties}\n              layerGroupName={this.props.layerGroupName}\n              layerName={this.props.layerName}\n            />\n            <PopupFooter\n              layerId={this.props.layerId}\n              featureProperties={this.props.featureProperties}\n            >\n              <div key=\"clearfix\" className=\"clearfix\" />\n            </PopupFooter>\n          </div>\n        </div>\n      </Draggable>\n    )\n  }\n}\n\nPinnedFeaturePopup.propTypes = {\n  layerId: PropTypes.string.isRequired,\n  featureProperties: PropTypes.object.isRequired,\n  initialPosition: PropTypes.object.isRequired,\n  layerName: PropTypes.string.isRequired,\n  layerGroupName: PropTypes.string.isRequired,\n  closePopup: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  zIndex: PropTypes.number.isRequired\n}\n\nexport default PinnedFeaturePopup\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/components/FeaturePopups/PinnedFeaturePopup.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "class",
    "name": "PinnedFeaturePopup",
    "memberof": "src/js/components/FeaturePopups/PinnedFeaturePopup.jsx",
    "static": true,
    "longname": "src/js/components/FeaturePopups/PinnedFeaturePopup.jsx~PinnedFeaturePopup",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/components/FeaturePopups/PinnedFeaturePopup.jsx",
    "importStyle": "PinnedFeaturePopup",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 111,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/js/components/FeaturePopups/PinnedFeaturePopup.jsx~PinnedFeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/PinnedFeaturePopup.jsx~PinnedFeaturePopup#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 112,
    "kind": "member",
    "name": "state",
    "memberof": "src/js/components/FeaturePopups/PinnedFeaturePopup.jsx~PinnedFeaturePopup",
    "static": false,
    "longname": "src/js/components/FeaturePopups/PinnedFeaturePopup.jsx~PinnedFeaturePopup#state",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "{\"height\": number, \"width\": number}"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "member",
    "name": "popupType",
    "memberof": "src/js/components/FeaturePopups/PinnedFeaturePopup.jsx~PinnedFeaturePopup",
    "static": false,
    "longname": "src/js/components/FeaturePopups/PinnedFeaturePopup.jsx~PinnedFeaturePopup#popupType",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "src/js/components/FeaturePopups/PinnedFeaturePopup.jsx~PinnedFeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/PinnedFeaturePopup.jsx~PinnedFeaturePopup#componentDidMount",
    "access": "public",
    "description": "On component mount, set the width and height of the container",
    "lineNumber": 26,
    "params": [],
    "return": null
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "render",
    "memberof": "src/js/components/FeaturePopups/PinnedFeaturePopup.jsx~PinnedFeaturePopup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/PinnedFeaturePopup.jsx~PinnedFeaturePopup#render",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "member",
    "name": "content",
    "memberof": "src/js/components/FeaturePopups/PinnedFeaturePopup.jsx~PinnedFeaturePopup",
    "static": false,
    "longname": "src/js/components/FeaturePopups/PinnedFeaturePopup.jsx~PinnedFeaturePopup#content",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "file",
    "name": "src/js/components/FeaturePopups/components/PopupFooter.jsx",
    "content": "import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Button } from \"react-bootstrap\"\n\nimport { getPhotoURLs, getProfileURLs } from \"../../../util\"\n\n/**\n * Based on the layer ID and the feature currently being displayed, determine what footer content\n * to display\n *\n * @param {string} layerId - the ID of the layer containing this feature\n * @param {object} featureProperties - the key/value pair properties for the feature\n * @returns {JSX[]} - array of JSX components to be displayed in the footer\n */\nconst getContentByLayerId = (layerId, featureProperties) => {\n  const content = []\n  switch (layerId) {\n    case \"photos_1976\":\n    case \"photos_2007\":\n    case \"photos_2017\":\n    case \"photos_2016\":\n    case \"photos_2012\":\n    case \"photos_2018\":\n    case \"photos_2019\":\n    case \"photos_2020\": {\n      const photoURLs = getPhotoURLs(layerId, featureProperties)\n      content.push(\n        <a\n          href={photoURLs.original}\n          key=\"open-larger-image-button\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Button className=\"open-larger-image-button\">\n            <i className=\"fa fa-image\" /> Full Size\n          </Button>\n        </a>\n      )\n      break\n    }\n    case \"profiles\": {\n      const urls = getProfileURLs(featureProperties)\n      if (urls.bluffXls) {\n        content.push(\n          <a\n            href={urls.bluffXls}\n            key=\"download-bluff-excel-button\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Button className=\"download-excel-button\">\n              <i className=\"fa fa-table\" /> Bluff Profile\n            </Button>\n          </a>\n        )\n      }\n      if (urls.bathyXls) {\n        content.push(\n          <a\n            href={urls.bathyXls}\n            key=\"download-bathy-excel-button\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Button className=\"download-excel-button\">\n              <i className=\"fa fa-table\" /> Bathymetry Profile\n            </Button>\n          </a>\n        )\n      }\n      break\n    }\n    default:\n      break\n  }\n  return content\n}\n\nconst PopupFooter = props => {\n  const footer = getContentByLayerId(props.layerId, props.featureProperties)\n  if (footer.length > 0) {\n    footer.unshift(<i key=\"download\" className=\"fa fa-download\" />)\n  }\n\n  return (\n    <div className=\"wiscviewer-feature-popup-footer-wrapper\">\n      <div className=\"wiscviewer-popup-downloads-row\">{footer}</div>\n      {props.children}\n    </div>\n  )\n}\n\nPopupFooter.propTypes = {\n  layerId: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).isRequired,\n  featureProperties: PropTypes.oneOfType([PropTypes.object, PropTypes.bool])\n    .isRequired,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n}\n\nPopupFooter.defaultProps = {\n  children: {}\n}\n\nexport default PopupFooter\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/components/FeaturePopups/components/PopupFooter.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 118,
    "kind": "function",
    "name": "getContentByLayerId",
    "memberof": "src/js/components/FeaturePopups/components/PopupFooter.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/components/FeaturePopups/components/PopupFooter.jsx~getContentByLayerId",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/components/FeaturePopups/components/PopupFooter.jsx",
    "importStyle": null,
    "description": "Based on the layer ID and the feature currently being displayed, determine what footer content\nto display",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{JSX[]} - array of JSX components to be displayed in the footer"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layerId",
        "description": "the ID of the layer containing this feature"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "featureProperties",
        "description": "the key/value pair properties for the feature"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "JSX[]"
      ],
      "spread": false,
      "description": "array of JSX components to be displayed in the footer"
    },
    "ignore": true
  },
  {
    "__docId__": 119,
    "kind": "function",
    "name": "PopupFooter",
    "memberof": "src/js/components/FeaturePopups/components/PopupFooter.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/components/FeaturePopups/components/PopupFooter.jsx~PopupFooter",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/components/FeaturePopups/components/PopupFooter.jsx",
    "importStyle": "PopupFooter",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "file",
    "name": "src/js/components/FeaturePopups/components/PopupTabs.jsx",
    "content": "import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Tabs } from \"react-bootstrap\"\nimport uuid from \"uuid\"\n\nimport ImageTab from \"./tabs/ImageTab\"\nimport DataTab from \"./tabs/DataTab\"\nimport ProfileTab from \"./tabs/ProfileTab\"\nimport RecessionTab from \"./tabs/RecessionTab\"\n\nimport { getPhotoURLs, getProfileURLs } from \"../../../util\"\n\nclass PopupTabs extends React.Component {\n  constructor(props) {\n    super(props)\n    this.update = this.update.bind(this)\n  }\n\n  /**\n   * Applies to popups within the Leaflet map scope, which need to update their dimensions once\n   *  images have loaded\n   */\n  // eslint-disable-next-line class-methods-use-this\n  update() {\n    if (typeof this.props.update !== \"undefined\") {\n      this.props.update()\n    }\n  }\n\n  render() {\n    const tabs = []\n    const { featureProperties } = this.props\n    const { layerId } = this.props\n\n    switch (layerId) {\n      case \"photos_1976\":\n      case \"photos_2007\":\n      case \"photos_2017\":\n      case \"photos_2016\":\n      case \"photos_2012\":\n      case \"photos_2018\":\n      case \"photos_2019\":\n      case \"photos_2020\": {\n        const photoURLs = getPhotoURLs(layerId, featureProperties)\n        tabs.push(\n          <ImageTab\n            key=\"image\"\n            eventKey={1}\n            title=\"Image\"\n            imgPath={photoURLs.popup}\n            alt=\"Oblique\"\n            update={this.update}\n          />\n        )\n        tabs.push(\n          <DataTab\n            key=\"data\"\n            eventKey={2}\n            title=\"Data\"\n            layerId={layerId}\n            featureProperties={featureProperties}\n            update={this.update}\n          />\n        )\n        break\n      }\n      case \"profiles\": {\n        let eventKeyIndex = 1\n        const urls = getProfileURLs(featureProperties)\n        if (urls.bluffJson) {\n          tabs.push(\n            <ProfileTab\n              key=\"bluff_graph\"\n              eventKey={eventKeyIndex}\n              title=\"Bluff Profile\"\n              jsonLocation={urls.bluffJson}\n              update={this.update}\n              popupType={this.props.popupType}\n            />\n          )\n          eventKeyIndex += 1\n        }\n        if (urls.bathyJson) {\n          tabs.push(\n            <ProfileTab\n              key=\"bathy_graph\"\n              eventKey={eventKeyIndex}\n              title=\"Bathy Profile\"\n              jsonLocation={urls.bathyJson}\n              update={this.update}\n              popupType={this.props.popupType}\n            />\n          )\n          eventKeyIndex += 1\n        }\n        tabs.push(\n          <DataTab\n            key=\"data\"\n            eventKey={eventKeyIndex}\n            title=\"Data\"\n            layerId={layerId}\n            featureProperties={featureProperties}\n            update={this.update}\n          />\n        )\n        break\n      }\n      case \"bluff_toe_rec_long\":\n      case \"bluff_crest_rec_long\":\n      case \"shoreline_rec_long\":\n      case \"bluff_toe_rec_short\":\n      case \"bluff_crest_rec_short\":\n      case \"shoreline_rec_short\": {\n        tabs.push(\n          <RecessionTab\n            key=\"recession\"\n            eventKey={1}\n            title=\"Recession\"\n            layerId={layerId}\n            featureProperties={featureProperties}\n            update={this.update}\n          />\n        )\n        break\n      }\n      default: {\n        tabs.push(\n          <DataTab\n            key=\"data\"\n            eventKey={1}\n            title=\"Data\"\n            layerId={layerId}\n            featureProperties={featureProperties}\n            update={this.update}\n          />\n        )\n        break\n      }\n    }\n    return (\n      <Tabs onSelect={this.update} id={uuid.v4()}>\n        {tabs}\n      </Tabs>\n    )\n  }\n}\n\nPopupTabs.propTypes = {\n  layerId: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).isRequired,\n  featureProperties: PropTypes.oneOfType([PropTypes.object, PropTypes.bool])\n    .isRequired,\n  update: PropTypes.func,\n  popupType: PropTypes.string.isRequired\n}\n\nPopupTabs.defaultProps = {\n  update() {}\n}\n\nexport default PopupTabs\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/components/FeaturePopups/components/PopupTabs.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 121,
    "kind": "class",
    "name": "PopupTabs",
    "memberof": "src/js/components/FeaturePopups/components/PopupTabs.jsx",
    "static": true,
    "longname": "src/js/components/FeaturePopups/components/PopupTabs.jsx~PopupTabs",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/components/FeaturePopups/components/PopupTabs.jsx",
    "importStyle": "PopupTabs",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 122,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/js/components/FeaturePopups/components/PopupTabs.jsx~PopupTabs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/components/PopupTabs.jsx~PopupTabs#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "update",
    "memberof": "src/js/components/FeaturePopups/components/PopupTabs.jsx~PopupTabs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/components/PopupTabs.jsx~PopupTabs#update",
    "access": "public",
    "description": "Applies to popups within the Leaflet map scope, which need to update their dimensions once\n images have loaded",
    "lineNumber": 24,
    "params": [],
    "return": null
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "render",
    "memberof": "src/js/components/FeaturePopups/components/PopupTabs.jsx~PopupTabs",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/components/PopupTabs.jsx~PopupTabs#render",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "file",
    "name": "src/js/components/FeaturePopups/components/PopupTitle.jsx",
    "content": "import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst PopupTitle = props => {\n  let featureName = \"\"\n  if (typeof props.featureProperties.OBJECTID === \"number\") {\n    featureName += \"#\" + props.featureProperties.OBJECTID\n  } else if (typeof props.featureProperties.ProfileNo === \"string\") {\n    featureName += props.featureProperties.ProfileNo\n  } else if (typeof props.featureProperties.imageId === \"string\") {\n    featureName += props.featureProperties.imageId\n  } else if (typeof props.featureProperties.id === \"string\") {\n    featureName += props.featureProperties.id\n  } else if (typeof props.featureProperties.name === \"string\") {\n    featureName += props.featureProperties.name\n  } else {\n    featureName += \"Feature\"\n  }\n  return (\n    <div className=\"wiscviewer-feature-popup-title\">\n      <div className=\"wiscviewer-layer-group-name\">\n        {\" \"}\n        {props.layerGroupName}{\" \"}\n      </div>\n      <div className=\"wiscviewer-layer-name\"> {props.layerName} </div>\n      <div className=\"wiscviewer-feature-name\"> {featureName} </div>\n    </div>\n  )\n}\n\nPopupTitle.propTypes = {\n  layerGroupName: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n    .isRequired,\n  layerName: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).isRequired,\n  featureProperties: PropTypes.oneOfType([PropTypes.object, PropTypes.bool])\n    .isRequired\n}\n\nexport default PopupTitle\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/components/FeaturePopups/components/PopupTitle.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 127,
    "kind": "function",
    "name": "PopupTitle",
    "memberof": "src/js/components/FeaturePopups/components/PopupTitle.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/components/FeaturePopups/components/PopupTitle.jsx~PopupTitle",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/components/FeaturePopups/components/PopupTitle.jsx",
    "importStyle": "PopupTitle",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "file",
    "name": "src/js/components/FeaturePopups/components/tabs/DataTab.jsx",
    "content": "import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Tab, Table } from \"react-bootstrap\"\n\nimport { LAYERS_BY_ID } from \"../../../../util\"\n\nclass DataTab extends React.Component {\n  /**\n   * Given a property and a value, render a table row\n   * @param {string} property - the property name\n   * @param {string} value - the value of the property\n   */\n  static renderRow(property, value) {\n    return (\n      <tr key={property}>\n        <td>\n          <strong>{property}</strong>\n        </td>\n        <td>{value}</td>\n      </tr>\n    )\n  }\n\n  componentDidMount() {\n    this.props.update()\n  }\n\n  render() {\n    const layerData = LAYERS_BY_ID[this.props.layerId]\n    const tabProps = {\n      ...this.props\n    }\n    delete tabProps.layerId\n    delete tabProps.featureProperties\n    delete tabProps.update\n\n    const rows = []\n\n    /**\n     * To decide which properties to show in the data table, we're going to reference config.json\n     *\n     * - In CONFIG.layers[layerGroupId].layers[layerId], there's a property called tableProperties\n     * - This property determines, for each feature in a layer, which of that feature's properties\n     *  will be shown in the data table\n     *\n     * FOR EACH FEATURE'S PROPERTIES: SHOW THE PROPERTY NAME/VALUE IN THE TABLE IF:\n     * - The corresponding property in tableProperties == true\n     * - The corresponding property in tableProperties == a string, also rename the property key to the string\n     * - A property in the feature properties exists but the corresponding property in tableProperties is undefined\n     *\n     * DON'T SHOW IF:\n     * - If the corresponding property in tableProperties == false\n     * - If a feature property is anything other than a string or a number\n     */\n    if (\n      typeof layerData !== \"undefined\" &&\n      typeof layerData.tableProperties !== \"undefined\"\n    ) {\n      const displayProperties = layerData.tableProperties\n      for (let property in this.props.featureProperties) {\n        if (\n          typeof displayProperties[property] === \"undefined\" ||\n          displayProperties[property] === true ||\n          typeof displayProperties[property] === \"string\"\n        ) {\n          const value = this.props.featureProperties[property]\n          if (typeof displayProperties[property] === \"string\") {\n            property = displayProperties[property]\n          }\n          if (typeof value === \"string\" || typeof value === \"number\") {\n            rows.push(this.constructor.renderRow(property, value))\n          }\n        }\n      }\n    } else {\n      for (const property in this.props.featureProperties) {\n        const value = this.props.featureProperties[property]\n        rows.push(this.constructor.renderRow(property, value))\n      }\n    }\n\n    return (\n      <Tab {...tabProps} className=\"wiscviewer-data-tab\">\n        <Table className=\"wiscviewer-data-table\">\n          <tbody>{rows}</tbody>\n        </Table>\n      </Tab>\n    )\n  }\n}\n\nDataTab.propTypes = {\n  layerId: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).isRequired,\n  featureProperties: PropTypes.oneOfType([PropTypes.object, PropTypes.bool])\n    .isRequired,\n  update: PropTypes.func.isRequired\n}\n\nexport default DataTab\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/components/FeaturePopups/components/tabs/DataTab.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 129,
    "kind": "class",
    "name": "DataTab",
    "memberof": "src/js/components/FeaturePopups/components/tabs/DataTab.jsx",
    "static": true,
    "longname": "src/js/components/FeaturePopups/components/tabs/DataTab.jsx~DataTab",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/components/FeaturePopups/components/tabs/DataTab.jsx",
    "importStyle": "DataTab",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "renderRow",
    "memberof": "src/js/components/FeaturePopups/components/tabs/DataTab.jsx~DataTab",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/components/FeaturePopups/components/tabs/DataTab.jsx~DataTab.renderRow",
    "access": "public",
    "description": "Given a property and a value, render a table row",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "property",
        "description": "the property name"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "the value of the property"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "src/js/components/FeaturePopups/components/tabs/DataTab.jsx~DataTab",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/components/tabs/DataTab.jsx~DataTab#componentDidMount",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 132,
    "kind": "method",
    "name": "render",
    "memberof": "src/js/components/FeaturePopups/components/tabs/DataTab.jsx~DataTab",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/components/tabs/DataTab.jsx~DataTab#render",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "file",
    "name": "src/js/components/FeaturePopups/components/tabs/ImageTab.jsx",
    "content": "import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Tab } from \"react-bootstrap\"\n\nconst ImageTab = props => {\n  const tabProps = {\n    ...props\n  }\n  delete tabProps.imgPath\n  delete tabProps.update\n  delete tabProps.alt\n  const style = {\n    minHeight: \"200px\",\n    minWidth: \"300px\",\n    backgroundColor: \"#90a4ae\"\n  }\n  return (\n    <Tab {...tabProps} className=\"wiscviewer-image-tab\">\n      <img\n        src={props.imgPath}\n        onLoad={props.update}\n        alt={props.alt}\n        style={style}\n      />\n    </Tab>\n  )\n}\n\nImageTab.propTypes = {\n  imgPath: PropTypes.string.isRequired,\n  update: PropTypes.func.isRequired,\n  alt: PropTypes.string.isRequired\n}\n\nexport default ImageTab\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/components/FeaturePopups/components/tabs/ImageTab.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 134,
    "kind": "function",
    "name": "ImageTab",
    "memberof": "src/js/components/FeaturePopups/components/tabs/ImageTab.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/components/FeaturePopups/components/tabs/ImageTab.jsx~ImageTab",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/components/FeaturePopups/components/tabs/ImageTab.jsx",
    "importStyle": "ImageTab",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "file",
    "name": "src/js/components/FeaturePopups/components/tabs/ProfileTab.jsx",
    "content": "import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Tab } from \"react-bootstrap\"\n\nimport { scaleLinear } from \"d3-scale\"\nimport { axisBottom, axisLeft } from \"d3-axis\"\nimport { line } from \"d3-shape\"\nimport { json } from \"d3-request\"\nimport { select } from \"d3-selection\"\nimport { extent, descending } from \"d3-array\"\n\nimport CONFIG from \"../../../../config.json\"\n\nclass ProfileTab extends React.Component {\n  constructor(props) {\n    super(props)\n    this.createLineChart = this.createLineChart.bind(this)\n  }\n\n  /**\n   * When the component mounts, create the d3 line chart and then update the popup\n   */\n  componentDidMount() {\n    this.createLineChart()\n    this.props.update()\n  }\n\n  /**\n   * Create the profile's line chart within the given drawing area\n   */\n  createLineChart() {\n    const popupWidth = this.profileDiv.clientWidth\n    const popupHeight = this.profileDiv.clientHeight\n    // Set the dimensions of the canvas / graph\n    const margin = { top: 10, right: 20, bottom: 40, left: 50 }\n    if (this.props.popupType === \"modal\") {\n      margin.left = 70\n      margin.bottom = 60\n    }\n    const width = popupWidth - margin.left - margin.right\n    const height = popupHeight - margin.top - margin.bottom\n    const xAxisLabel = {\n      x: width / 2,\n      y: height + margin.top + 25\n    }\n    if (this.props.popupType === \"modal\") {\n      xAxisLabel.y += 10\n    }\n    const yAxisLabel = {\n      x: 0 - height / 2,\n      y: 0 - margin.left + 5\n    }\n    if (this.props.popupType === \"modal\") {\n      yAxisLabel.y += 5\n    }\n    /**\n     * Scale Functions\n     * - Create the functions that accept a profile's data and scale each value\n     *  according to the size of the popup\n     *\n     * Y scale is normalized across all profiles and therefore the y axis\n     * remains consistent in popups, while x values are stretched according to each profile\n     * and will therefore vary depending on the profile being viewed\n     */\n    const x = scaleLinear().range([width, 0])\n    const y = scaleLinear()\n      .domain([\n        CONFIG.profileSummaryStatistics.yMin,\n        CONFIG.profileSummaryStatistics.yMax\n      ])\n      .range([height, 0])\n    // Define the axes\n    const xAxis = axisBottom(x).ticks(5)\n    const yAxis = axisLeft(y).ticks(5)\n    /**\n     * Define the Lines\n     * - ValueLine is the actual profile line\n     * - michigan_avg, michigan_high, michigan_low are the lines that describe lake michigan avg lake levels\n     */\n    const valueline = line()\n      .x(d => x(d.x))\n      .y(d => y(d.y))\n    const michiganAvg = line()\n      .x(d => x(d.x))\n      .y(() => y(CONFIG.lakeMichiganWaterLevel.avg))\n    // Adds the svg canvas\n    const svg = select(this.profileDiv)\n      .append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    // get the profile's data from it's json file\n    json(this.props.jsonLocation, (error, data) => {\n      const sortedData = data.sort((a, b) => descending(a.x, b.x))\n      x.domain(extent(sortedData, d => d.x))\n      svg\n        .append(\"path\")\n        .attr(\"class\", \"lake-stats michigan-avg\")\n        .attr(\"d\", michiganAvg(sortedData))\n      // Add the valueline path.\n      svg\n        .append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", valueline(sortedData))\n      // Add the X Axis\n      svg\n        .append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis)\n      svg\n        .append(\"text\")\n        .attr(\n          \"transform\",\n          \"translate(\" + xAxisLabel.x + \" ,\" + xAxisLabel.y + \")\"\n        )\n        .style(\"text-anchor\", \"middle\")\n        .attr(\"class\", \"axis-label\")\n        .text(\"Distance (ft)\")\n      // Add the Y Axis\n      svg\n        .append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis)\n      // text label for the y axis\n      svg\n        .append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", yAxisLabel.y)\n        .attr(\"x\", yAxisLabel.x)\n        .attr(\"dy\", \"1em\")\n        .attr(\"class\", \"axis-label\")\n        .style(\"text-anchor\", \"middle\")\n        .text(\"Altitude (ft)\")\n    })\n  }\n\n  render() {\n    const tabProps = {\n      ...this.props\n    }\n    delete tabProps.jsonLocation\n    delete tabProps.update\n    delete tabProps.popupType\n    const style = {\n      height: \"200px\",\n      width: \"350px\"\n    }\n    if (this.props.popupType === \"modal\") {\n      style.width = \"100%\"\n      style.height = \"300px\"\n    }\n    return (\n      <Tab {...tabProps} className=\"wiscviewer-profile-tab\">\n        <div\n          style={style}\n          className=\"wiscviewer-profile-graph\"\n          ref={ref => {\n            this.profileDiv = ref\n          }}\n        />\n      </Tab>\n    )\n  }\n}\n\nProfileTab.propTypes = {\n  jsonLocation: PropTypes.string.isRequired,\n  update: PropTypes.func.isRequired,\n  popupType: PropTypes.string.isRequired\n}\n\nexport default ProfileTab\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/components/FeaturePopups/components/tabs/ProfileTab.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 136,
    "kind": "class",
    "name": "ProfileTab",
    "memberof": "src/js/components/FeaturePopups/components/tabs/ProfileTab.jsx",
    "static": true,
    "longname": "src/js/components/FeaturePopups/components/tabs/ProfileTab.jsx~ProfileTab",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/components/FeaturePopups/components/tabs/ProfileTab.jsx",
    "importStyle": "ProfileTab",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 137,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/js/components/FeaturePopups/components/tabs/ProfileTab.jsx~ProfileTab",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/components/tabs/ProfileTab.jsx~ProfileTab#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "src/js/components/FeaturePopups/components/tabs/ProfileTab.jsx~ProfileTab",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/components/tabs/ProfileTab.jsx~ProfileTab#componentDidMount",
    "access": "public",
    "description": "When the component mounts, create the d3 line chart and then update the popup",
    "lineNumber": 23,
    "params": [],
    "return": null
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "createLineChart",
    "memberof": "src/js/components/FeaturePopups/components/tabs/ProfileTab.jsx~ProfileTab",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/components/tabs/ProfileTab.jsx~ProfileTab#createLineChart",
    "access": "public",
    "description": "Create the profile's line chart within the given drawing area",
    "lineNumber": 31,
    "params": [],
    "return": null
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "render",
    "memberof": "src/js/components/FeaturePopups/components/tabs/ProfileTab.jsx~ProfileTab",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/components/tabs/ProfileTab.jsx~ProfileTab#render",
    "access": "public",
    "description": null,
    "lineNumber": 139,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 142,
    "kind": "member",
    "name": "profileDiv",
    "memberof": "src/js/components/FeaturePopups/components/tabs/ProfileTab.jsx~ProfileTab",
    "static": false,
    "longname": "src/js/components/FeaturePopups/components/tabs/ProfileTab.jsx~ProfileTab#profileDiv",
    "access": "public",
    "description": null,
    "lineNumber": 160,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "file",
    "name": "src/js/components/FeaturePopups/components/tabs/RecessionTab.jsx",
    "content": "import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Tab, Table } from \"react-bootstrap\"\n\nclass RecessionTab extends React.Component {\n  componentDidMount() {\n    this.props.update()\n  }\n\n  render() {\n    const tabProps = {\n      ...this.props\n    }\n    delete tabProps.layerId\n    delete tabProps.featureProperties\n    delete tabProps.update\n    const values = this.props.featureProperties\n\n    return (\n      <Tab {...tabProps} className=\"wiscviewer-recession-tab\">\n        <Table className=\"wiscviewer-recession-table\">\n          <thead>\n            <tr>\n              <th>\n                Transect Id:\n                {values.TransectID}\n              </th>\n              <th>Recession Rate</th>\n              <th>Total Distance</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>20 Year Measurement (1995 - 2015)</td>\n              <td>{Math.round(values.Yr_20_Rate * 10) / 10} ft/yr</td>\n              <td>{Math.round(values.Yr_20_Dist)} ft</td>\n            </tr>\n            <tr>\n              <td>59 Year Measurement (1956 - 2015)</td>\n              <td>{Math.round(values.Yr_59_Rate * 10) / 10} ft/yr</td>\n              <td>{Math.round(values.Yr_59_Dist)} ft</td>\n            </tr>\n          </tbody>\n        </Table>\n        <div className=\"wiscviewer-recession-table-caption\">\n          A positive recession value represents a landward movement. A negative\n          recession value represents a lakeward movement (known as accretion)\n        </div>\n      </Tab>\n    )\n  }\n}\n\nRecessionTab.propTypes = {\n  layerId: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).isRequired,\n  featureProperties: PropTypes.oneOfType([PropTypes.object, PropTypes.bool])\n    .isRequired,\n  update: PropTypes.func.isRequired\n}\n\nexport default RecessionTab\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/components/FeaturePopups/components/tabs/RecessionTab.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 144,
    "kind": "class",
    "name": "RecessionTab",
    "memberof": "src/js/components/FeaturePopups/components/tabs/RecessionTab.jsx",
    "static": true,
    "longname": "src/js/components/FeaturePopups/components/tabs/RecessionTab.jsx~RecessionTab",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/components/FeaturePopups/components/tabs/RecessionTab.jsx",
    "importStyle": "RecessionTab",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "src/js/components/FeaturePopups/components/tabs/RecessionTab.jsx~RecessionTab",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/components/tabs/RecessionTab.jsx~RecessionTab#componentDidMount",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "render",
    "memberof": "src/js/components/FeaturePopups/components/tabs/RecessionTab.jsx~RecessionTab",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/components/FeaturePopups/components/tabs/RecessionTab.jsx~RecessionTab#render",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "file",
    "name": "src/js/components/Layer.jsx",
    "content": "/**\n * Layer.jsx\n * This builds the list item representing a non-basemap layer in the sidebar and mobile layer list\n */\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { ListGroupItem } from \"react-bootstrap\"\n\nconst Layer = props => {\n  const iconClassNames = [\"fa\", \"wiscviewer-layer-left-icon\"]\n  const layerClassNames = [\"wiscviewer-layer-item\"]\n  if (props.state === \"loading\") {\n    iconClassNames.push(\"fa-circle-o-notch\")\n    iconClassNames.push(\"fa-spin\")\n  } else if (props.state === \"error\") {\n    iconClassNames.push(\"fa-exclamation-triangle\")\n    iconClassNames.push(\"error\")\n  } else if (props.state === \"loaded\") {\n    if (props.active) {\n      iconClassNames.push(\"fa-check\")\n      iconClassNames.push(\"active\")\n      layerClassNames.push(\"active\")\n    } else {\n      iconClassNames.push(\"fa-plus\")\n    }\n  }\n\n  return (\n    <ListGroupItem\n      active={props.active}\n      className={layerClassNames.join(\" \")}\n      onClick={props.onLayerClick}\n    >\n      <i className={iconClassNames.join(\" \")} />\n      {props.layerName}\n    </ListGroupItem>\n  )\n}\n\nLayer.propTypes = {\n  active: PropTypes.bool.isRequired,\n  onLayerClick: PropTypes.func.isRequired,\n  layerName: PropTypes.string.isRequired,\n  state: PropTypes.string\n}\n\nLayer.defaultProps = {\n  state: \"init\"\n}\n\nexport default Layer\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/components/Layer.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 148,
    "kind": "function",
    "name": "Layer",
    "memberof": "src/js/components/Layer.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/components/Layer.jsx~Layer",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/components/Layer.jsx",
    "importStyle": "Layer",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 149,
    "kind": "file",
    "name": "src/js/components/LayerGroup.jsx",
    "content": "/**\n * LayerGroup.jsx\n * This creates the group container that holds each non-basemap layer list item,\n * in the sidebar and mobile layer list\n */\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { ListGroup } from \"react-bootstrap\"\n\nimport Layer from \"./Layer\"\n\nconst LayerGroup = props => {\n  const layers = []\n  for (const layerId in props.layers) {\n    const boundOnLayerClick = props.onLayerClick.bind(null, layerId)\n    layers.push(\n      <Layer\n        key={layerId}\n        layerName={props.layers[layerId].name}\n        active={props.layers[layerId].active}\n        onLayerClick={boundOnLayerClick}\n        state={props.layers[layerId].state}\n      />\n    )\n  }\n  const bodyClassNames = [\n    \"panel-body\",\n    \"pullDown\",\n    \"wiscviewer-sidebar-panel-body\"\n  ]\n  const headerClassNames = [\"panel-heading\", \"wiscviewer-sidebar-panel-header\"]\n  return (\n    <div className=\"panel panel-default wiscviewer-sidebar-panel\">\n      <div className={headerClassNames.join(\" \")} role=\"button\" tabIndex={0}>\n        <div className=\"wiscviewer-layer-group-name\">\n          {\" \"}\n          {props.layerGroupName}{\" \"}\n        </div>\n        <div className=\"wiscviewer-layer-group-info\">\n          <a href={\"about.html#\" + props.layerGroupId} target=\"_blank\">\n            <i className=\"fa fa-question-circle\" />\n          </a>\n        </div>\n      </div>\n      <div className={bodyClassNames.join(\" \")}>\n        <ListGroup className=\"wiscviewer-layer-list-group\">{layers}</ListGroup>\n      </div>\n    </div>\n  )\n}\n\nLayerGroup.propTypes = {\n  layerGroupId: PropTypes.string.isRequired,\n  layerGroupName: PropTypes.string.isRequired,\n  layers: PropTypes.object.isRequired,\n  onLayerClick: PropTypes.func.isRequired\n}\n\nexport default LayerGroup\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/components/LayerGroup.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 150,
    "kind": "function",
    "name": "LayerGroup",
    "memberof": "src/js/components/LayerGroup.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/components/LayerGroup.jsx~LayerGroup",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/components/LayerGroup.jsx",
    "importStyle": "LayerGroup",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "file",
    "name": "src/js/components/LegendLayer.jsx",
    "content": "/**\n * LegendLayer\n * Container element for one layer's style(s)\n */\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport LegendStyle from \"./LegendStyle\"\n\nconst LegendLayer = props => {\n  const headerClassNames = [\"panel-heading\", \"wiscviewer-sidebar-panel-header\"]\n  const bodyClassNames = [\n    \"panel-body\",\n    \"pullDown\",\n    \"wiscviewer-sidebar-panel-body\"\n  ]\n  const styles = []\n  for (const style of props.layerStyles) {\n    styles.push(\n      <LegendStyle\n        key={style.styleName}\n        styleName={style.styleName}\n        iconStyle={style.iconStyle}\n        styleIconClassNames={style.styleIconClassNames}\n      />\n    )\n  }\n  return (\n    <div className=\"panel panel-default wiscviewer-sidebar-panel wiscviewer-legend-layer-group\">\n      <div className={headerClassNames.join(\" \")} role=\"button\" tabIndex={0}>\n        <span className=\"wiscviewer-layer-name\"> {props.layerName} </span>\n        <span className=\"wiscviewer-layer-group-name\">\n          {\" \"}\n          {props.layerGroupName}{\" \"}\n        </span>\n      </div>\n      <div className={bodyClassNames.join(\" \")}>\n        <ul className=\"wiscviewer-legend-list\">{styles}</ul>\n      </div>\n    </div>\n  )\n}\n\nLegendLayer.propTypes = {\n  layerGroupName: PropTypes.string.isRequired,\n  layerName: PropTypes.string.isRequired,\n  layerStyles: PropTypes.array.isRequired\n}\n\nexport default LegendLayer\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/components/LegendLayer.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 152,
    "kind": "function",
    "name": "LegendLayer",
    "memberof": "src/js/components/LegendLayer.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/components/LegendLayer.jsx~LegendLayer",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/components/LegendLayer.jsx",
    "importStyle": "LegendLayer",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "file",
    "name": "src/js/components/LegendStyle.jsx",
    "content": "/**\n * LegendStyle\n * The component rendering each line of each layer's legend section\n */\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst LegendStyle = props => (\n  <li key={props.styleName}>\n    <i\n      style={props.iconStyle}\n      className={props.styleIconClassNames.join(\" \")}\n    />\n    {props.styleName}\n  </li>\n)\n\nLegendStyle.propTypes = {\n  styleName: PropTypes.string.isRequired,\n  iconStyle: PropTypes.object,\n  styleIconClassNames: PropTypes.array\n}\n\nLegendStyle.defaultProps = {\n  iconStyle: {},\n  styleIconClassNames: []\n}\n\nexport default LegendStyle\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/components/LegendStyle.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 154,
    "kind": "function",
    "name": "LegendStyle",
    "memberof": "src/js/components/LegendStyle.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/components/LegendStyle.jsx~LegendStyle",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/components/LegendStyle.jsx",
    "importStyle": "LegendStyle",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 155,
    "kind": "file",
    "name": "src/js/components/MobileToggle.jsx",
    "content": "import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst MobileToggle = (props, context) => (\n  <button\n    type=\"button\"\n    onClick={context.$bs_navbar.onToggle}\n    className=\"navbar-toggle collapsed wiscviewer-mobile-toggle\"\n  >\n    <i className=\"fa fa-bars\" />\n  </button>\n)\n\nMobileToggle.contextTypes = {\n  $bs_navbar: PropTypes.shape({\n    bsClass: PropTypes.string,\n    expanded: PropTypes.bool,\n    onToggle: PropTypes.func.isRequired\n  })\n}\n\nexport default MobileToggle\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/components/MobileToggle.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 156,
    "kind": "function",
    "name": "MobileToggle",
    "memberof": "src/js/components/MobileToggle.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/components/MobileToggle.jsx~MobileToggle",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/components/MobileToggle.jsx",
    "importStyle": "MobileToggle",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 157,
    "kind": "file",
    "name": "src/js/components/ResetView.jsx",
    "content": "/**\n * ResetView.jsx\n * This creates the button that resets the map view\n */\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { NavItem } from \"react-bootstrap\"\n\nconst ResetView = props => (\n  <NavItem\n    onClick={props.onResetViewClick}\n    className=\"wiscviewer-nav-tool wiscviewer-nav-tool-reset\"\n  >\n    <i className=\"fa fa-undo wiscviewer-nav-tool-icon\" />\n  </NavItem>\n)\n\nResetView.propTypes = {\n  onResetViewClick: PropTypes.func.isRequired\n}\n\nexport default ResetView\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/components/ResetView.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 158,
    "kind": "function",
    "name": "ResetView",
    "memberof": "src/js/components/ResetView.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/components/ResetView.jsx~ResetView",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/components/ResetView.jsx",
    "importStyle": "ResetView",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 159,
    "kind": "file",
    "name": "src/js/components/ZoomToShoreline.jsx",
    "content": "/**\n * ZoomToCounty.jsx\n * This creates the dropdown that contains each county with a shoreline.\n * Upon clicking that county, the map will zoom to that county's shoreline.\n */\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { MenuItem, NavDropdown } from \"react-bootstrap\"\nimport SVGInline from \"react-svg-inline\"\n\nimport CONFIG from \"../config.json\"\n\nimport superiorMichiganIcon from \"../../img/superior_michigan.svg\"\nimport superiorIcon from \"../../img/superior.svg\"\nimport michiganIcon from \"../../img/michigan.svg\"\n\nconst lakeIcons = {\n  \"Lake Michigan\": michiganIcon,\n  \"Lake Superior\": superiorIcon\n}\n\nconst ZoomToShoreline = props => {\n  const title = (\n    <SVGInline\n      svg={superiorMichiganIcon}\n      className=\"wiscviewer-nav-tool-icon\"\n    />\n  )\n  const shorelines = []\n  for (const lakeName in CONFIG.map.county_shorelines) {\n    const shorelinesForLake = CONFIG.map.county_shorelines[lakeName]\n    shorelines.push(\n      <MenuItem className=\"wiscviewer-dropdown-header\" key={lakeName}>\n        <SVGInline\n          svg={lakeIcons[lakeName]}\n          className={lakeName.replace(\" \", \"-\")}\n        />\n        {lakeName}\n      </MenuItem>\n    )\n    for (const shorelineName in shorelinesForLake) {\n      shorelines.push(\n        <MenuItem\n          className=\"wiscviewer-dropdown-item\"\n          key={shorelineName}\n          onClick={() => props.onZoomShorelineClick(lakeName, shorelineName)}\n        >\n          {shorelineName}\n        </MenuItem>\n      )\n    }\n  }\n  return (\n    <NavDropdown\n      title={title}\n      id=\"zoom-to-shoreline\"\n      className=\"wiscviewer-nav-dropdown wiscviewer-nav-tool wiscviewer-nav-tool-zoom\"\n    >\n      {shorelines}\n    </NavDropdown>\n  )\n}\n\nZoomToShoreline.propTypes = {\n  onZoomShorelineClick: PropTypes.func.isRequired\n}\n\nexport default ZoomToShoreline\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/components/ZoomToShoreline.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 160,
    "kind": "variable",
    "name": "lakeIcons",
    "memberof": "src/js/components/ZoomToShoreline.jsx",
    "static": true,
    "longname": "src/js/components/ZoomToShoreline.jsx~lakeIcons",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/components/ZoomToShoreline.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "{\"Lake Michigan\": *, \"Lake Superior\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 161,
    "kind": "function",
    "name": "ZoomToShoreline",
    "memberof": "src/js/components/ZoomToShoreline.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/components/ZoomToShoreline.jsx~ZoomToShoreline",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/components/ZoomToShoreline.jsx",
    "importStyle": "ZoomToShoreline",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "file",
    "name": "src/js/containers/LayerList.jsx",
    "content": "/**\n * LayerList.jsx\n * This component takes the current layers and basemaps and displays them,\n * grouped by type, in the sidebar and mobile layers list.\n */\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { PanelGroup } from \"react-bootstrap\"\nimport { connect } from \"react-redux\"\n\nimport store from \"../store\"\nimport LayerGroup from \"../components/LayerGroup\"\nimport BasemapList from \"../components/BasemapList\"\nimport { toggleLayer } from \"../ducks/layers\"\nimport { toggleBasemap } from \"../ducks/basemaps\"\nimport { mapLayerGroupsToLayers, getBasemapsByIdWithData } from \"../selectors\"\n\nconst mapStateToProps = state => ({\n  layers: mapLayerGroupsToLayers(state),\n  basemaps: getBasemapsByIdWithData(state)\n})\n\nclass LayerList extends React.Component {\n  /**\n   * When a layer is clicked, dispatch an action to the store\n   * @param {string} layerId - a unique layer id\n   */\n  static onLayerClick(layerId) {\n    store.dispatch(toggleLayer(layerId))\n  }\n\n  /**\n   * When a basemap is clicked, dispatch an action to the store\n   * @param {string} basemapId - a unique basemap id\n   */\n  static onBasemapClick(basemapId) {\n    store.dispatch(toggleBasemap(basemapId))\n  }\n\n  render() {\n    const layerGroups = []\n    let eventKey = 1\n    for (const layerGroupId in this.props.layers) {\n      layerGroups.push(\n        <LayerGroup\n          key={layerGroupId}\n          layerGroupId={layerGroupId}\n          layerGroupName={this.props.layers[layerGroupId].name}\n          layers={this.props.layers[layerGroupId].layers}\n          onLayerClick={this.constructor.onLayerClick}\n          eventKey={eventKey.toString()}\n        />\n      )\n      eventKey += 1\n    }\n    return (\n      <PanelGroup className=\"wiscviewer-layer-list\">\n        {layerGroups}\n        <BasemapList\n          basemaps={this.props.basemaps}\n          panelVisible\n          onBasemapClick={this.constructor.onBasemapClick}\n          eventKey={eventKey.toString()}\n        />\n      </PanelGroup>\n    )\n  }\n}\n\nLayerList.propTypes = {\n  layers: PropTypes.object.isRequired,\n  basemaps: PropTypes.object.isRequired\n}\n\nexport default connect(mapStateToProps)(LayerList)\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/containers/LayerList.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 163,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/js/containers/LayerList.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/containers/LayerList.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/containers/LayerList.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 164,
    "kind": "class",
    "name": "LayerList",
    "memberof": "src/js/containers/LayerList.jsx",
    "static": true,
    "longname": "src/js/containers/LayerList.jsx~LayerList",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/containers/LayerList.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ],
    "ignore": true
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "onLayerClick",
    "memberof": "src/js/containers/LayerList.jsx~LayerList",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/containers/LayerList.jsx~LayerList.onLayerClick",
    "access": "public",
    "description": "When a layer is clicked, dispatch an action to the store",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layerId",
        "description": "a unique layer id"
      }
    ],
    "return": null
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "onBasemapClick",
    "memberof": "src/js/containers/LayerList.jsx~LayerList",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/containers/LayerList.jsx~LayerList.onBasemapClick",
    "access": "public",
    "description": "When a basemap is clicked, dispatch an action to the store",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "basemapId",
        "description": "a unique basemap id"
      }
    ],
    "return": null
  },
  {
    "__docId__": 167,
    "kind": "method",
    "name": "render",
    "memberof": "src/js/containers/LayerList.jsx~LayerList",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/containers/LayerList.jsx~LayerList#render",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 168,
    "kind": "file",
    "name": "src/js/containers/LeafletMap.jsx",
    "content": "/**\n * LeafletMap.jsx\n * Container with Leaflet map. References the primary map object (ObliquePhotoMap),\n * and facilitates communication between the map and interface.\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\n\nimport ObliquePhotoMap from \"../classes/ObliquePhotoMap\"\nimport {\n  getLayersByIdWithData,\n  getBasemapsByIdWithData,\n  getActiveBasemapId\n} from \"../selectors\"\n\nconst mapStateToProps = state => ({\n  layers: getLayersByIdWithData(state),\n  basemaps: getBasemapsByIdWithData(state),\n  map: state.map,\n  activeBasemap: getActiveBasemapId(state)\n})\n\nclass LeafletMap extends React.Component {\n  /**\n   * When the component mounts to the DOM, create a new instance of the Oblique Photo Map, which\n   * initializes a Leaflet map.\n   */\n  componentDidMount() {\n    this.map = new ObliquePhotoMap(this.mapComponent)\n    // order here matters (basemaps, then layers)\n    this.toggleBasemaps(null, this.props.basemaps)\n    this.toggleLayers(null, this.props.layers)\n  }\n\n  /**\n   * When this component recieves new props (via Redux or parent components), it toggles additional\n   * functions to determine whether the props have changed\n   * @param {object} nextProps - next key/value pairs describing props fed from Redux and parent\n   *   components\n   */\n  componentWillReceiveProps(nextProps) {\n    const oldProps = this.props\n    this.toggleBasemaps(oldProps.basemaps, nextProps.basemaps)\n    this.toggleLayers(oldProps.layers, nextProps.layers)\n    this.toggleMapActions(oldProps.map, nextProps.map)\n    this.sidebarToggled(oldProps.sidebarOpen, nextProps.sidebarOpen)\n  }\n\n  /**\n   * Compare old layer props and new layer props.\n   * - If there are new layer selections, toggle them in the map\n   * @param {object} oldLayerProps - next key/value pairs describing current layer props\n   * @param {object} newLayerProps - next key/value pairs describing new layer props\n   */\n  toggleLayers(oldLayerProps, newLayerProps) {\n    for (const layerId in newLayerProps) {\n      const newLayer = newLayerProps[layerId]\n      if (\n        oldLayerProps === null ||\n        newLayer.active !== oldLayerProps[layerId].active\n      ) {\n        this.map.toggleLayer(layerId, newLayer)\n      }\n    }\n  }\n\n  /**\n   * Compare old basemap props and new basemap props.\n   * - If there are new basemap selections, toggle them in the map\n   * @param {object} oldBasemapProps - next key/value pairs describing current basemap props\n   * @param {object} newBasemapProps - next key/value pairs describing new basemap props\n   */\n  toggleBasemaps(oldBasemapProps, newBasemapProps) {\n    for (const basemap in newBasemapProps) {\n      if (\n        oldBasemapProps === null ||\n        newBasemapProps[basemap].active !== oldBasemapProps[basemap].active\n      ) {\n        this.map.toggleBasemap(basemap, newBasemapProps[basemap])\n      }\n    }\n  }\n\n  /**\n   * Compare old map action props and new map action props\n   * - If there are new map actions, execute corresponding functions\n   * @param {object} oldMapProps - next key/value pairs describing current map props\n   * @param {object} newMapProps - next key/value pairs describing new map props\n   */\n  toggleMapActions(oldMapProps, newMapProps) {\n    if (oldMapProps !== null) {\n      if (\n        newMapProps.state.action === \"willZoom\" &&\n        oldMapProps.state.action !== \"willZoom\"\n      ) {\n        this.map.zoomToExtent(newMapProps.state.extent)\n      }\n      if (\n        newMapProps.state.action === \"willPanAndZoom\" &&\n        oldMapProps.state.action !== \"willPanAndZoom\"\n      ) {\n        this.map.panAndZoom(\n          newMapProps.state.zoom,\n          newMapProps.state.coordinates\n        )\n      }\n      if (\n        newMapProps.state.action === \"willZoomToPopup\" &&\n        oldMapProps.state.action !== \"willZoomToPopup\"\n      ) {\n        this.map.zoomToPopup(\n          newMapProps.state.zoom,\n          newMapProps.state.coordinates\n        )\n      }\n    }\n  }\n\n  /**\n   * Compare old sidebar props and new sidebar props\n   * - If the sidebar props have changed, toggle updateSize\n   * @param {object} oldSidebarProps - next key/value pairs describing current sidebar props\n   * @param {object} newSidebarProps - next key/value pairs describing new sidebar props\n   */\n  sidebarToggled(oldSidebarProps, newSidebarProps) {\n    if (oldSidebarProps !== null && oldSidebarProps !== newSidebarProps) {\n      this.map.updateSize()\n    }\n  }\n\n  render() {\n    return (\n      <div\n        ref={map => {\n          this.mapComponent = map\n        }}\n        id=\"map\"\n        className=\"wiscviewer-map\"\n        data-zoom={this.props.map.zoom}\n        data-basemap={this.props.activeBasemap}\n      />\n    )\n  }\n}\n\nLeafletMap.propTypes = {\n  layers: PropTypes.object.isRequired,\n  basemaps: PropTypes.object.isRequired,\n  map: PropTypes.object.isRequired,\n  activeBasemap: PropTypes.string.isRequired,\n  sidebarOpen: PropTypes.bool.isRequired\n}\n\nexport default connect(mapStateToProps)(LeafletMap)\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/containers/LeafletMap.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 169,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/js/containers/LeafletMap.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/containers/LeafletMap.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/containers/LeafletMap.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 170,
    "kind": "class",
    "name": "LeafletMap",
    "memberof": "src/js/containers/LeafletMap.jsx",
    "static": true,
    "longname": "src/js/containers/LeafletMap.jsx~LeafletMap",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/containers/LeafletMap.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ],
    "ignore": true
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "componentDidMount",
    "memberof": "src/js/containers/LeafletMap.jsx~LeafletMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/containers/LeafletMap.jsx~LeafletMap#componentDidMount",
    "access": "public",
    "description": "When the component mounts to the DOM, create a new instance of the Oblique Photo Map, which\ninitializes a Leaflet map.",
    "lineNumber": 30,
    "params": [],
    "return": null
  },
  {
    "__docId__": 172,
    "kind": "member",
    "name": "map",
    "memberof": "src/js/containers/LeafletMap.jsx~LeafletMap",
    "static": false,
    "longname": "src/js/containers/LeafletMap.jsx~LeafletMap#map",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 173,
    "kind": "method",
    "name": "componentWillReceiveProps",
    "memberof": "src/js/containers/LeafletMap.jsx~LeafletMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/containers/LeafletMap.jsx~LeafletMap#componentWillReceiveProps",
    "access": "public",
    "description": "When this component recieves new props (via Redux or parent components), it toggles additional\nfunctions to determine whether the props have changed",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "nextProps",
        "description": "next key/value pairs describing props fed from Redux and parent\n  components"
      }
    ],
    "return": null
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "toggleLayers",
    "memberof": "src/js/containers/LeafletMap.jsx~LeafletMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/containers/LeafletMap.jsx~LeafletMap#toggleLayers",
    "access": "public",
    "description": "Compare old layer props and new layer props.\n- If there are new layer selections, toggle them in the map",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "oldLayerProps",
        "description": "next key/value pairs describing current layer props"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "newLayerProps",
        "description": "next key/value pairs describing new layer props"
      }
    ],
    "return": null
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "toggleBasemaps",
    "memberof": "src/js/containers/LeafletMap.jsx~LeafletMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/containers/LeafletMap.jsx~LeafletMap#toggleBasemaps",
    "access": "public",
    "description": "Compare old basemap props and new basemap props.\n- If there are new basemap selections, toggle them in the map",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "oldBasemapProps",
        "description": "next key/value pairs describing current basemap props"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "newBasemapProps",
        "description": "next key/value pairs describing new basemap props"
      }
    ],
    "return": null
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "toggleMapActions",
    "memberof": "src/js/containers/LeafletMap.jsx~LeafletMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/containers/LeafletMap.jsx~LeafletMap#toggleMapActions",
    "access": "public",
    "description": "Compare old map action props and new map action props\n- If there are new map actions, execute corresponding functions",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "oldMapProps",
        "description": "next key/value pairs describing current map props"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "newMapProps",
        "description": "next key/value pairs describing new map props"
      }
    ],
    "return": null
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "sidebarToggled",
    "memberof": "src/js/containers/LeafletMap.jsx~LeafletMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/containers/LeafletMap.jsx~LeafletMap#sidebarToggled",
    "access": "public",
    "description": "Compare old sidebar props and new sidebar props\n- If the sidebar props have changed, toggle updateSize",
    "lineNumber": 127,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "oldSidebarProps",
        "description": "next key/value pairs describing current sidebar props"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "newSidebarProps",
        "description": "next key/value pairs describing new sidebar props"
      }
    ],
    "return": null
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "render",
    "memberof": "src/js/containers/LeafletMap.jsx~LeafletMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/containers/LeafletMap.jsx~LeafletMap#render",
    "access": "public",
    "description": null,
    "lineNumber": 133,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 179,
    "kind": "member",
    "name": "mapComponent",
    "memberof": "src/js/containers/LeafletMap.jsx~LeafletMap",
    "static": false,
    "longname": "src/js/containers/LeafletMap.jsx~LeafletMap#mapComponent",
    "access": "public",
    "description": null,
    "lineNumber": 137,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "file",
    "name": "src/js/containers/Legend.jsx",
    "content": "/**\n * Legend.jsx\n * This component references the Redux store to determine which layers are currently active.\n * It then renders the legend based on the currently active layers.\n */\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport { PanelGroup } from \"react-bootstrap\"\nimport PropTypes from \"prop-types\"\n\nimport { getActiveLayerStyleTypes } from \"../selectors\"\nimport LegendLayer from \"../components/LegendLayer\"\n\nconst mapStateToProps = state => ({\n  activeLayerStyleTypes: getActiveLayerStyleTypes(state)\n})\n\nconst Legend = props => {\n  const layers = []\n  const { activeLayerStyleTypes } = props\n  for (const layerId in activeLayerStyleTypes) {\n    if (Object.prototype.hasOwnProperty.call(activeLayerStyleTypes, layerId)) {\n      const { styles } = activeLayerStyleTypes[layerId]\n      const { layerName } = activeLayerStyleTypes[layerId]\n      const { layerGroupName } = activeLayerStyleTypes[layerId]\n      layers.push(\n        <LegendLayer\n          key={layerId}\n          layerGroupName={layerGroupName}\n          layerName={layerName}\n          layerStyles={styles}\n        />\n      )\n    }\n  }\n  return <PanelGroup className=\"wiscviewer-legend\">{layers}</PanelGroup>\n}\n\nLegend.propTypes = {\n  activeLayerStyleTypes: PropTypes.object.isRequired\n}\n\nexport default connect(mapStateToProps)(Legend)\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/containers/Legend.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 181,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/js/containers/Legend.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/containers/Legend.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/containers/Legend.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 182,
    "kind": "function",
    "name": "Legend",
    "memberof": "src/js/containers/Legend.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/containers/Legend.jsx~Legend",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/containers/Legend.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 183,
    "kind": "file",
    "name": "src/js/containers/MobileLayerList.jsx",
    "content": "/**\n * MobileLayerList.jsx\n * This component creates the modal that appears on mobile devices and small screens.\n * It is activated when the user clicks on the menu button in the nav bar.\n * It displays the LayerList component\n */\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Modal, Button } from \"react-bootstrap\"\nimport { connect } from \"react-redux\"\n\nimport store from \"../store\"\nimport LayerList from \"./LayerList\"\nimport { closeMobileLayerList } from \"../ducks/mobile\"\n\nconst mapStateToProps = state => ({\n  active: state.mobile.layersPopup.visible\n})\nclass MobileLayerList extends React.Component {\n  /**\n   * Dispatches an action to close the mobile layer list\n   */\n  static closeModal() {\n    store.dispatch(closeMobileLayerList())\n  }\n\n  render() {\n    const classNames = [\n      \"wiscviewer-modal\",\n      \"wiscviewer-mobile-modal\",\n      \"wiscviewer-mobile-layers-list\",\n      \"hidden-sm\",\n      \"hidden-md\",\n      \"hidden-lg\"\n    ]\n    if (this.props.active === false) {\n      classNames.push(\"hidden\")\n    }\n    return (\n      <div className={classNames.join(\" \")}>\n        <Modal.Dialog>\n          <Modal.Header>\n            <Modal.Title>Layers</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <LayerList />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={this.constructor.closeModal}>Close</Button>\n          </Modal.Footer>\n        </Modal.Dialog>\n      </div>\n    )\n  }\n}\n\nMobileLayerList.propTypes = {\n  active: PropTypes.bool.isRequired\n}\n\nexport default connect(mapStateToProps)(MobileLayerList)\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/containers/MobileLayerList.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 184,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/js/containers/MobileLayerList.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/containers/MobileLayerList.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/containers/MobileLayerList.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 185,
    "kind": "class",
    "name": "MobileLayerList",
    "memberof": "src/js/containers/MobileLayerList.jsx",
    "static": true,
    "longname": "src/js/containers/MobileLayerList.jsx~MobileLayerList",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/containers/MobileLayerList.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ],
    "ignore": true
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "closeModal",
    "memberof": "src/js/containers/MobileLayerList.jsx~MobileLayerList",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/containers/MobileLayerList.jsx~MobileLayerList.closeModal",
    "access": "public",
    "description": "Dispatches an action to close the mobile layer list",
    "lineNumber": 23,
    "params": [],
    "return": null
  },
  {
    "__docId__": 187,
    "kind": "method",
    "name": "render",
    "memberof": "src/js/containers/MobileLayerList.jsx~MobileLayerList",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/containers/MobileLayerList.jsx~MobileLayerList#render",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 188,
    "kind": "file",
    "name": "src/js/containers/NavBar.jsx",
    "content": "/**\n * NavBar.jsx\n * This component creates the navigation toolbar that sits at the top of the screen.\n * It contains:\n * - the site brand\n * - the button that activates the MobileLayerList\n * - the button that activates the AboutModal\n */\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\"\nimport { connect } from \"react-redux\"\n\nimport store from \"../store\"\nimport ZoomToShoreline from \"../components/ZoomToShoreline\"\nimport ResetView from \"../components/ResetView\"\nimport AboutButton from \"../components/AboutButton\"\nimport MobileToggle from \"../components/MobileToggle\"\nimport { openMobileLayerList } from \"../ducks/mobile\"\nimport { zoomToShoreline, resetMapView } from \"../ducks/map\"\nimport { setNavExpand } from \"../ducks/nav\"\n\nconst mapStateToProps = state => state.nav\n\nclass NavBar extends React.Component {\n  /**\n   * Dispatches an action to open the mobile layer list. Only available on small screens.\n   */\n  static onMobileLayersClick() {\n    store.dispatch(openMobileLayerList())\n  }\n\n  /**\n   * When a user clicks on a county shoreline, dispatches an action to zoom to a particular shoreline.\n   * Shorelines are organized by Lake, then County. Per config.json\n   *\n   * @param {string} lakeName\n   * @param {string} countyName\n   */\n  static onZoomShorelineClick(lakeName, countyName) {\n    store.dispatch(zoomToShoreline(lakeName, countyName))\n  }\n\n  /**\n   * When a user clicks on the reset button, dispatches an action to reset the map view\n   */\n  static onResetViewClick() {\n    store.dispatch(resetMapView())\n  }\n\n  constructor(props) {\n    super(props)\n    /**\n     * @type {object} state\n     * @property {string} expanded - in mobile mode, whether or not the nav-bar is expanded vertically\n     */\n    this.state = {\n      expanded: false\n    }\n    this.collapse = this.collapse.bind(this)\n    this.toggle = this.toggle.bind(this)\n  }\n\n  /**\n   * When component is about to recieve new props, check to see if the nav should be expanded (mobile only)\n   * @param {object} nextProps - props to be received\n   */\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.expanded !== this.state.expanded) {\n      this.setState({\n        expanded: nextProps.expanded\n      })\n    }\n  }\n\n  /**\n   * Force the nav to close (mobile mode only)\n   */\n  collapse() {\n    this.toggle(false)\n  }\n\n  /**\n   * Toggle the nav open or closed (mobile mode only)\n   */\n  toggle(expanded) {\n    this.setState({\n      expanded\n    })\n    if (expanded !== this.props.expanded) {\n      store.dispatch(setNavExpand(expanded))\n    }\n  }\n\n  render() {\n    return (\n      <Navbar\n        onSelect={this.collapse}\n        onToggle={this.toggle}\n        expanded={this.state.expanded}\n        fluid\n        className=\"wiscviewer-nav\"\n      >\n        <Navbar.Header>\n          <img\n            src=\"img/wisconsin.svg\"\n            alt=\"Wisconsin Logo\"\n            className=\"wiscviewer-logo\"\n          />\n          <Navbar.Brand className=\"wiscviewer-brand\" />\n          <MobileToggle />\n        </Navbar.Header>\n        <Navbar.Collapse className=\"wiscviewer-nav-tools\">\n          <Nav pullRight>\n            <NavItem\n              eventKey={1}\n              className=\"visible-xs-block wiscviewer-nav-tool wiscviewer-nav-tool-layers\"\n              onClick={this.constructor.onMobileLayersClick}\n            >\n              <i className=\"fa fa-map wiscviewer-nav-tool-icon\" />\n              Layers\n            </NavItem>\n            <ZoomToShoreline\n              onZoomShorelineClick={this.constructor.onZoomShorelineClick}\n            />\n            <ResetView onResetViewClick={this.constructor.onResetViewClick} />\n            <AboutButton />\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  }\n}\n\nNavBar.propTypes = {\n  expanded: PropTypes.bool.isRequired\n}\n\nexport default connect(mapStateToProps)(NavBar)\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/containers/NavBar.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 189,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/js/containers/NavBar.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/containers/NavBar.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/containers/NavBar.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 190,
    "kind": "class",
    "name": "NavBar",
    "memberof": "src/js/containers/NavBar.jsx",
    "static": true,
    "longname": "src/js/containers/NavBar.jsx~NavBar",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/containers/NavBar.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ],
    "ignore": true
  },
  {
    "__docId__": 191,
    "kind": "method",
    "name": "onMobileLayersClick",
    "memberof": "src/js/containers/NavBar.jsx~NavBar",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/containers/NavBar.jsx~NavBar.onMobileLayersClick",
    "access": "public",
    "description": "Dispatches an action to open the mobile layer list. Only available on small screens.",
    "lineNumber": 29,
    "params": [],
    "return": null
  },
  {
    "__docId__": 192,
    "kind": "method",
    "name": "onZoomShorelineClick",
    "memberof": "src/js/containers/NavBar.jsx~NavBar",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/containers/NavBar.jsx~NavBar.onZoomShorelineClick",
    "access": "public",
    "description": "When a user clicks on a county shoreline, dispatches an action to zoom to a particular shoreline.\nShorelines are organized by Lake, then County. Per config.json",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "lakeName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "countyName",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 193,
    "kind": "method",
    "name": "onResetViewClick",
    "memberof": "src/js/containers/NavBar.jsx~NavBar",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/containers/NavBar.jsx~NavBar.onResetViewClick",
    "access": "public",
    "description": "When a user clicks on the reset button, dispatches an action to reset the map view",
    "lineNumber": 47,
    "params": [],
    "return": null
  },
  {
    "__docId__": 194,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/js/containers/NavBar.jsx~NavBar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/containers/NavBar.jsx~NavBar#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true
  },
  {
    "__docId__": 195,
    "kind": "member",
    "name": "state",
    "memberof": "src/js/containers/NavBar.jsx~NavBar",
    "static": false,
    "longname": "src/js/containers/NavBar.jsx~NavBar#state",
    "access": "public",
    "description": "",
    "lineNumber": 57,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "expanded",
        "description": "in mobile mode, whether or not the nav-bar is expanded vertically"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 198,
    "kind": "method",
    "name": "componentWillReceiveProps",
    "memberof": "src/js/containers/NavBar.jsx~NavBar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/containers/NavBar.jsx~NavBar#componentWillReceiveProps",
    "access": "public",
    "description": "When component is about to recieve new props, check to see if the nav should be expanded (mobile only)",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "nextProps",
        "description": "props to be received"
      }
    ],
    "return": null
  },
  {
    "__docId__": 199,
    "kind": "method",
    "name": "collapse",
    "memberof": "src/js/containers/NavBar.jsx~NavBar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/containers/NavBar.jsx~NavBar#collapse",
    "access": "public",
    "description": "Force the nav to close (mobile mode only)",
    "lineNumber": 79,
    "params": [],
    "return": null
  },
  {
    "__docId__": 200,
    "kind": "method",
    "name": "toggle",
    "memberof": "src/js/containers/NavBar.jsx~NavBar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/containers/NavBar.jsx~NavBar#toggle",
    "access": "public",
    "description": "Toggle the nav open or closed (mobile mode only)",
    "lineNumber": 86,
    "params": [
      {
        "name": "expanded",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 201,
    "kind": "method",
    "name": "render",
    "memberof": "src/js/containers/NavBar.jsx~NavBar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/containers/NavBar.jsx~NavBar#render",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 202,
    "kind": "file",
    "name": "src/js/containers/PinnedFeaturePopupContainer.jsx",
    "content": "/**\n * PinnedFeatureContainer.jsx\n * This creates the container for pinned feature popups\n */\nimport React from \"react\"\nimport { connect } from \"react-redux\"\nimport PropTypes from \"prop-types\"\n\nimport store from \"../store\"\nimport { closePinnedFeature } from \"../ducks/pinnedFeatures\"\nimport PinnedFeaturePopup from \"../components/FeaturePopups/PinnedFeaturePopup\"\nimport { getLayersByIdWithData } from \"../selectors\"\nimport { LAYER_GROUPS_BY_ID } from \"../util\"\n\nconst mapStateToProps = state => ({\n  pinnedFeatures: state.pinnedFeatures,\n  layers: getLayersByIdWithData(state)\n})\n\nclass PinnedFeaturePopupContainer extends React.Component {\n  /**\n   * Close a particular pinned popup\n   * @param {string} featureId - a unique ID for a feature in a layer\n   */\n  static closePopup(featureId) {\n    store.dispatch(closePinnedFeature(featureId))\n  }\n\n  constructor() {\n    super()\n    /**\n     * @type {object} state\n     * @property {Array} order - the order in which the popups should appear (z-index)\n     */\n    this.state = {\n      order: []\n    }\n    this.bringToFront = this.bringToFront.bind(this)\n  }\n\n  /**\n   * Function to process new props from Redux / its parent container\n   * - If a new popup has been pinned, add that popup to the container and order accordingly\n   * - If a popup has been closed, remove it from the list and reset order accordingly\n   *\n   * @param {object} nextProps\n   */\n  componentWillReceiveProps(nextProps) {\n    const newOrder = [...this.state.order]\n    // if a new popup has been added, add that item to the beginning of the list\n    for (const featureId in nextProps.pinnedFeatures) {\n      if (newOrder.indexOf(featureId) === -1) {\n        newOrder.push(featureId)\n      }\n    }\n    // if a popup has been closed, remove that popup from the order\n    for (const featureId of newOrder) {\n      if (typeof nextProps.pinnedFeatures[featureId] === \"undefined\") {\n        newOrder.splice(newOrder.indexOf(featureId), 1)\n      }\n    }\n    this.setState({\n      order: newOrder\n    })\n  }\n\n  /**\n   * If a user clicks on a popup that isn't in front, bring it in front so that its contents\n   * are visible above all others\n   *\n   * @param {string} featureId - a unique ID for a feature within a layer\n   */\n  bringToFront(featureId) {\n    const newOrder = [...this.state.order]\n    newOrder.splice(newOrder.indexOf(featureId), 1)\n    newOrder.push(featureId)\n    this.setState({\n      order: newOrder\n    })\n  }\n\n  render() {\n    const pinnedFeatures = []\n    for (const featureId in this.props.pinnedFeatures) {\n      const pinnedFeature = this.props.pinnedFeatures[featureId]\n      const { layerId } = pinnedFeature\n      const layerName = this.props.layers[layerId].name\n      const { layerGroupId } = this.props.layers[layerId]\n      const layerGroupName = LAYER_GROUPS_BY_ID[layerGroupId].name\n      const zIndex = this.state.order.indexOf(featureId)\n      pinnedFeatures.push(\n        <PinnedFeaturePopup\n          layerId={layerId}\n          featureProperties={pinnedFeature.featureProperties}\n          initialPosition={pinnedFeature.position}\n          layerName={layerName}\n          layerGroupName={layerGroupName}\n          closePopup={() => {\n            this.constructor.closePopup(featureId)\n          }}\n          key={featureId}\n          onClick={() => {\n            this.bringToFront(featureId)\n          }}\n          zIndex={zIndex}\n        />\n      )\n    }\n    return (\n      <div className=\"wiscviewer-pinned-feature-popup-container\">\n        {pinnedFeatures}\n      </div>\n    )\n  }\n}\n\nPinnedFeaturePopupContainer.propTypes = {\n  pinnedFeatures: PropTypes.object.isRequired,\n  layers: PropTypes.object.isRequired\n}\n\nexport default connect(mapStateToProps)(PinnedFeaturePopupContainer)\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/containers/PinnedFeaturePopupContainer.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 203,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/js/containers/PinnedFeaturePopupContainer.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/containers/PinnedFeaturePopupContainer.jsx~mapStateToProps",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/containers/PinnedFeaturePopupContainer.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 204,
    "kind": "class",
    "name": "PinnedFeaturePopupContainer",
    "memberof": "src/js/containers/PinnedFeaturePopupContainer.jsx",
    "static": true,
    "longname": "src/js/containers/PinnedFeaturePopupContainer.jsx~PinnedFeaturePopupContainer",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/containers/PinnedFeaturePopupContainer.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ],
    "ignore": true
  },
  {
    "__docId__": 205,
    "kind": "method",
    "name": "closePopup",
    "memberof": "src/js/containers/PinnedFeaturePopupContainer.jsx~PinnedFeaturePopupContainer",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/containers/PinnedFeaturePopupContainer.jsx~PinnedFeaturePopupContainer.closePopup",
    "access": "public",
    "description": "Close a particular pinned popup",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "featureId",
        "description": "a unique ID for a feature in a layer"
      }
    ],
    "return": null
  },
  {
    "__docId__": 206,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/js/containers/PinnedFeaturePopupContainer.jsx~PinnedFeaturePopupContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/containers/PinnedFeaturePopupContainer.jsx~PinnedFeaturePopupContainer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 207,
    "kind": "member",
    "name": "state",
    "memberof": "src/js/containers/PinnedFeaturePopupContainer.jsx~PinnedFeaturePopupContainer",
    "static": false,
    "longname": "src/js/containers/PinnedFeaturePopupContainer.jsx~PinnedFeaturePopupContainer#state",
    "access": "public",
    "description": "",
    "lineNumber": 35,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "order",
        "description": "the order in which the popups should appear (z-index)"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "componentWillReceiveProps",
    "memberof": "src/js/containers/PinnedFeaturePopupContainer.jsx~PinnedFeaturePopupContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/containers/PinnedFeaturePopupContainer.jsx~PinnedFeaturePopupContainer#componentWillReceiveProps",
    "access": "public",
    "description": "Function to process new props from Redux / its parent container\n- If a new popup has been pinned, add that popup to the container and order accordingly\n- If a popup has been closed, remove it from the list and reset order accordingly",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "nextProps",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 210,
    "kind": "method",
    "name": "bringToFront",
    "memberof": "src/js/containers/PinnedFeaturePopupContainer.jsx~PinnedFeaturePopupContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/containers/PinnedFeaturePopupContainer.jsx~PinnedFeaturePopupContainer#bringToFront",
    "access": "public",
    "description": "If a user clicks on a popup that isn't in front, bring it in front so that its contents\nare visible above all others",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "featureId",
        "description": "a unique ID for a feature within a layer"
      }
    ],
    "return": null
  },
  {
    "__docId__": 211,
    "kind": "method",
    "name": "render",
    "memberof": "src/js/containers/PinnedFeaturePopupContainer.jsx~PinnedFeaturePopupContainer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/containers/PinnedFeaturePopupContainer.jsx~PinnedFeaturePopupContainer#render",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 212,
    "kind": "file",
    "name": "src/js/containers/Sidebar.jsx",
    "content": "/**\n * Sidebar.jsx\n * This component creates the sidebar, which contains:\n * - Layers List\n * - Legend\n */\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Col } from \"react-bootstrap\"\n\nimport LayerList from \"./LayerList\"\nimport Legend from \"./Legend\"\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props)\n    /**\n     * @type {object} state\n     * @property {string} activeTab - the ID of the active tab\n     *  - \"LayerList\"\n     *  - \"Legend\"\n     */\n    this.state = {\n      activeTab: \"LayerList\"\n    }\n    this.onTabClick = this.onTabClick.bind(this)\n    this.getClassName = this.getClassName.bind(this)\n  }\n\n  /**\n   * Called when a tab is clicked. Sets state to the value of the clicked tab.\n   * @param {SyntheticEvent} e\n   */\n  onTabClick(e) {\n    const clickedTab = e.target.getAttribute(\"value\")\n    if (typeof clickedTab === \"string\") {\n      this.setState({\n        activeTab: clickedTab\n      })\n    }\n  }\n\n  /**\n   * Return a classname for active vs inactive tabs\n   * @param {string} tabValue - check tab value against currently active tab\n   * @returns {string} - returns \"active\" if tab is active, or empty string\n   */\n  getClassName(tabValue) {\n    if (this.state.activeTab === tabValue) {\n      return \"active\"\n    }\n    return \"\"\n  }\n\n  render() {\n    const content = []\n    if (this.state.activeTab === \"LayerList\") {\n      content.push(<LayerList key=\"layers\" />)\n    } else {\n      content.push(<Legend key=\"legend\" />)\n    }\n    let props = {\n      xsHidden: true,\n      sm: 5,\n      md: 4,\n      lg: 3\n    }\n    if (this.props.sidebarOpen === false) {\n      props = {\n        lgHidden: true,\n        mdHidden: true,\n        smHidden: true,\n        xsHidden: true\n      }\n    }\n    return (\n      <Col {...props} className=\"wiscviewer-sidebar\">\n        <div className=\"wiscviewer-sidebar-static-container\">\n          <div className=\"wiscviewer-sidebar-tabs\">\n            <div\n              className={this.getClassName(\"LayerList\")}\n              role=\"button\"\n              tabIndex={-1}\n              onClick={this.onTabClick}\n              value=\"LayerList\"\n            >\n              <i className=\"fa fa-map\" />\n            </div>\n            <div\n              className={this.getClassName(\"Legend\")}\n              onClick={this.onTabClick}\n              role=\"button\"\n              tabIndex={-1}\n              value=\"Legend\"\n            >\n              <i className=\"fa fa-key\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"wiscviewer-sidebar-scrolling-container\">\n          <div className=\"wiscviewer-sidebar-tab-content\">{content}</div>\n        </div>\n      </Col>\n    )\n  }\n}\n\nSidebar.propTypes = {\n  sidebarOpen: PropTypes.bool.isRequired\n}\n\nexport default Sidebar\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/containers/Sidebar.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 213,
    "kind": "class",
    "name": "Sidebar",
    "memberof": "src/js/containers/Sidebar.jsx",
    "static": true,
    "longname": "src/js/containers/Sidebar.jsx~Sidebar",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/containers/Sidebar.jsx",
    "importStyle": "Sidebar",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 214,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/js/containers/Sidebar.jsx~Sidebar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/containers/Sidebar.jsx~Sidebar#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 215,
    "kind": "member",
    "name": "state",
    "memberof": "src/js/containers/Sidebar.jsx~Sidebar",
    "static": false,
    "longname": "src/js/containers/Sidebar.jsx~Sidebar#state",
    "access": "public",
    "description": "",
    "lineNumber": 23,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "activeTab",
        "description": "the ID of the active tab\n - \"LayerList\"\n - \"Legend\""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "onTabClick",
    "memberof": "src/js/containers/Sidebar.jsx~Sidebar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/containers/Sidebar.jsx~Sidebar#onTabClick",
    "access": "public",
    "description": "Called when a tab is clicked. Sets state to the value of the clicked tab.",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "SyntheticEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "e",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "getClassName",
    "memberof": "src/js/containers/Sidebar.jsx~Sidebar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/containers/Sidebar.jsx~Sidebar#getClassName",
    "access": "public",
    "description": "Return a classname for active vs inactive tabs",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - returns \"active\" if tab is active, or empty string"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tabValue",
        "description": "check tab value against currently active tab"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "returns \"active\" if tab is active, or empty string"
    }
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "render",
    "memberof": "src/js/containers/Sidebar.jsx~Sidebar",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/js/containers/Sidebar.jsx~Sidebar#render",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 221,
    "kind": "file",
    "name": "src/js/ducks/basemaps.js",
    "content": "/**\n * basemaps.js Ducks\n *\n * Contains the actions and reducer part that controls basemaps in the map.\n * - Controls adding and removing basemaps\n */\nimport { BASEMAPS_BY_ID } from \"../util\"\n\nconst initialBasemaps = {}\n\nfor (const basemapId in BASEMAPS_BY_ID) {\n  initialBasemaps[basemapId] = {\n    active: BASEMAPS_BY_ID[basemapId].defaultActive,\n    state: \"init\"\n  }\n}\n\n/**\n * Turns a basemap on or off\n * @param {string} basemapId\n */\nexport function toggleBasemap(basemapId) {\n  return {\n    type: \"BASEMAPS:TOGGLE_BASEMAP\",\n    basemapId\n  }\n}\n\n/**\n * Tells the store that the basemap is in a pre-loaded state\n * @param {string} basemapId\n */\nexport function basemapPreload(basemapId) {\n  return {\n    type: \"BASEMAPS:BASEMAP_PRELOAD\",\n    basemapId\n  }\n}\n\n/**\n * Tells the store that the basemap is in a loaded state\n * @param {string} basemapId\n */\nexport function basemapLoaded(basemapId) {\n  return {\n    type: \"BASEMAPS:BASEMAP_LOADED\",\n    basemapId\n  }\n}\n\n/**\n * Tells the store that the basemap failed to load\n * @param {string} basemapId\n */\nexport function basemapError(basemapId) {\n  return {\n    type: \"BASEMAPS:BASEMAP_ERROR\",\n    basemapId\n  }\n}\n\nexport default function basemaps(state = initialBasemaps, action) {\n  const newState = {\n    ...state\n  }\n  switch (action.type) {\n    case \"BASEMAPS:TOGGLE_BASEMAP\": {\n      const basemapIdToToggle = action.basemapId\n      for (const basemapId in newState) {\n        if (basemapId === basemapIdToToggle) {\n          newState[basemapId] = {\n            ...newState[basemapId],\n            active: true\n          }\n        } else {\n          newState[basemapId] = {\n            ...newState[basemapId],\n            active: false\n          }\n        }\n      }\n      break\n    }\n    case \"BASEMAPS:BASEMAP_PRELOAD\": {\n      newState[action.basemapId] = {\n        ...newState[action.basemapId],\n        state: \"loading\"\n      }\n      break\n    }\n    case \"BASEMAPS:BASEMAP_LOADED\": {\n      newState[action.basemapId] = {\n        ...newState[action.basemapId],\n        state: \"loaded\"\n      }\n      break\n    }\n    case \"BASEMAPS:BASEMAP_ERROR\": {\n      newState[action.basemapId] = {\n        ...newState[action.basemapId],\n        state: \"error\"\n      }\n      break\n    }\n    default:\n      break\n  }\n  return newState\n}\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/ducks/basemaps.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 222,
    "kind": "variable",
    "name": "initialBasemaps",
    "memberof": "src/js/ducks/basemaps.js",
    "static": true,
    "longname": "src/js/ducks/basemaps.js~initialBasemaps",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/ducks/basemaps.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 223,
    "kind": "function",
    "name": "toggleBasemap",
    "memberof": "src/js/ducks/basemaps.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/basemaps.js~toggleBasemap",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/basemaps.js",
    "importStyle": "{toggleBasemap}",
    "description": "Turns a basemap on or off",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "basemapId",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": string, \"basemapId\": *}"
      ]
    }
  },
  {
    "__docId__": 224,
    "kind": "function",
    "name": "basemapPreload",
    "memberof": "src/js/ducks/basemaps.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/basemaps.js~basemapPreload",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/basemaps.js",
    "importStyle": "{basemapPreload}",
    "description": "Tells the store that the basemap is in a pre-loaded state",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "basemapId",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": string, \"basemapId\": *}"
      ]
    }
  },
  {
    "__docId__": 225,
    "kind": "function",
    "name": "basemapLoaded",
    "memberof": "src/js/ducks/basemaps.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/basemaps.js~basemapLoaded",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/basemaps.js",
    "importStyle": "{basemapLoaded}",
    "description": "Tells the store that the basemap is in a loaded state",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "basemapId",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": string, \"basemapId\": *}"
      ]
    }
  },
  {
    "__docId__": 226,
    "kind": "function",
    "name": "basemapError",
    "memberof": "src/js/ducks/basemaps.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/basemaps.js~basemapError",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/basemaps.js",
    "importStyle": "{basemapError}",
    "description": "Tells the store that the basemap failed to load",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "basemapId",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": string, \"basemapId\": *}"
      ]
    }
  },
  {
    "__docId__": 227,
    "kind": "function",
    "name": "basemaps",
    "memberof": "src/js/ducks/basemaps.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/basemaps.js~basemaps",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/basemaps.js",
    "importStyle": "basemaps",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "initialBasemaps",
        "defaultValue": "initialBasemaps"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 228,
    "kind": "file",
    "name": "src/js/ducks/layers.js",
    "content": "/**\n * layers.js Ducks\n *\n * Contains the actions and reducer part that controls layers in the map.\n * - Controls adding and removing layers\n * - For each unique layer style present in ech layer, it creates a cache of that style\n *     so it can be presented in the legend.\n */\nimport { LAYERS_BY_ID, LAYER_GROUPS_BY_ID } from \"../util\"\n\n/**\n * Toggles a layer on and off\n * @param {string} layerId\n */\nexport function toggleLayer(layerId) {\n  return {\n    type: \"LAYERS:TOGGLE_LAYER\",\n    layerId\n  }\n}\n\n/**\n * When the app is processing a layer and comes across a new feature style, it dispatches this\n * action to store the style in the store. It's then used by the legend to display an appropriate\n * entry.\n *\n * @param {string} layerId\n * @param {string} propertyName - the name of the property within the feature that's being styled\n *  i.e. in the Structures layer, we're styling different structure types\n * @param {Object} style - the key/value pairs that describe a Leaflet style\n * @param {string} geometryType - usually point or line, allows the legend to determine what shape to show\n *  as an icon next to a legend entry\n */\nexport function legendStyleUpdate(\n  layerId,\n  propertyName,\n  style,\n  geometryType,\n  displayType,\n  sortOrder\n) {\n  return {\n    type: \"LAYER:LEGEND_STYLE_UPDATE\",\n    layerId,\n    propertyName,\n    style,\n    geometryType,\n    displayType,\n    sortOrder\n  }\n}\n\n/**\n * Tells the store that a layer is in a pre-loading state\n * @param {string} layerId\n */\nexport function layerPreload(layerId) {\n  return {\n    type: \"LAYERS:LAYER_PRELOAD\",\n    layerId\n  }\n}\n\n/**\n * Tells the store that a layer has loaded\n * @param {string} layerId\n */\nexport function layerLoaded(layerId) {\n  return {\n    type: \"LAYERS:LAYER_LOADED\",\n    layerId\n  }\n}\n\n/**\n * Tells the store that a layer has errored\n * @param {string} layerId\n */\nexport function layerError(layerId) {\n  return {\n    type: \"LAYERS:LAYER_ERROR\",\n    layerId\n  }\n}\n\nconst layerGroupsById = {}\nconst layersById = {}\n\n// set up our layer group state\nfor (const layerGroupId in LAYER_GROUPS_BY_ID) {\n  layerGroupsById[layerGroupId] = {\n    layers: LAYER_GROUPS_BY_ID[layerGroupId].layers\n  }\n}\n\n// set up our layers state\nfor (const layerId in LAYERS_BY_ID) {\n  const legendStyles = LAYERS_BY_ID[layerId].legendStyles || {}\n  layersById[layerId] = {\n    active: LAYERS_BY_ID[layerId].defaultActive,\n    legendStyles\n  }\n}\n\nconst initialLayers = {\n  layersById,\n  layerGroupsById\n}\n\nexport default function layers(state = initialLayers, action) {\n  const newState = {\n    ...state\n  }\n  switch (action.type) {\n    case \"LAYERS:TOGGLE_LAYER\": {\n      newState.layersById = {\n        ...state.layersById,\n        [action.layerId]: {\n          ...state.layersById[action.layerId],\n          active: !state.layersById[action.layerId].active\n        }\n      }\n      break\n    }\n    case \"LAYER:LEGEND_STYLE_UPDATE\": {\n      const legendStyle = {\n        style: action.style,\n        geometryType: action.geometryType,\n        displayType: action.displayType,\n        sortOrder: action.sortOrder\n      }\n      newState.layersById = {\n        ...state.layersById,\n        [action.layerId]: {\n          ...state.layersById[action.layerId],\n          legendStyles: {\n            ...state.layersById[action.layerId].legendStyles,\n            [action.propertyName]: legendStyle\n          }\n        }\n      }\n      break\n    }\n    case \"LAYERS:LAYER_PRELOAD\": {\n      newState.layersById = {\n        ...state.layersById,\n        [action.layerId]: {\n          ...state.layersById[action.layerId],\n          state: \"loading\"\n        }\n      }\n      break\n    }\n    case \"LAYERS:LAYER_LOADED\": {\n      newState.layersById = {\n        ...state.layersById,\n        [action.layerId]: {\n          ...state.layersById[action.layerId],\n          state: \"loaded\"\n        }\n      }\n      break\n    }\n    case \"LAYERS:LAYER_ERROR\": {\n      newState.layersById = {\n        ...state.layersById,\n        [action.layerId]: {\n          ...state.layersById[action.layerId],\n          state: \"error\"\n        }\n      }\n      break\n    }\n    default:\n      break\n  }\n  return newState\n}\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/ducks/layers.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 229,
    "kind": "function",
    "name": "toggleLayer",
    "memberof": "src/js/ducks/layers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/layers.js~toggleLayer",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/layers.js",
    "importStyle": "{toggleLayer}",
    "description": "Toggles a layer on and off",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layerId",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": string, \"layerId\": *}"
      ]
    }
  },
  {
    "__docId__": 230,
    "kind": "function",
    "name": "legendStyleUpdate",
    "memberof": "src/js/ducks/layers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/layers.js~legendStyleUpdate",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/layers.js",
    "importStyle": "{legendStyleUpdate}",
    "description": "When the app is processing a layer and comes across a new feature style, it dispatches this\naction to store the style in the store. It's then used by the legend to display an appropriate\nentry.",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layerId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "propertyName",
        "description": "the name of the property within the feature that's being styled\n i.e. in the Structures layer, we're styling different structure types"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "style",
        "description": "the key/value pairs that describe a Leaflet style"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "geometryType",
        "description": "usually point or line, allows the legend to determine what shape to show\n as an icon next to a legend entry"
      }
    ],
    "return": {
      "types": [
        "{\"type\": string, \"layerId\": *, \"propertyName\": *, \"style\": *, \"geometryType\": *, \"displayType\": *, \"sortOrder\": *}"
      ]
    }
  },
  {
    "__docId__": 231,
    "kind": "function",
    "name": "layerPreload",
    "memberof": "src/js/ducks/layers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/layers.js~layerPreload",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/layers.js",
    "importStyle": "{layerPreload}",
    "description": "Tells the store that a layer is in a pre-loading state",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layerId",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": string, \"layerId\": *}"
      ]
    }
  },
  {
    "__docId__": 232,
    "kind": "function",
    "name": "layerLoaded",
    "memberof": "src/js/ducks/layers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/layers.js~layerLoaded",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/layers.js",
    "importStyle": "{layerLoaded}",
    "description": "Tells the store that a layer has loaded",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layerId",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": string, \"layerId\": *}"
      ]
    }
  },
  {
    "__docId__": 233,
    "kind": "function",
    "name": "layerError",
    "memberof": "src/js/ducks/layers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/layers.js~layerError",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/layers.js",
    "importStyle": "{layerError}",
    "description": "Tells the store that a layer has errored",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layerId",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": string, \"layerId\": *}"
      ]
    }
  },
  {
    "__docId__": 234,
    "kind": "variable",
    "name": "layerGroupsById",
    "memberof": "src/js/ducks/layers.js",
    "static": true,
    "longname": "src/js/ducks/layers.js~layerGroupsById",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/ducks/layers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 235,
    "kind": "variable",
    "name": "layersById",
    "memberof": "src/js/ducks/layers.js",
    "static": true,
    "longname": "src/js/ducks/layers.js~layersById",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/ducks/layers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 236,
    "kind": "variable",
    "name": "initialLayers",
    "memberof": "src/js/ducks/layers.js",
    "static": true,
    "longname": "src/js/ducks/layers.js~initialLayers",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/ducks/layers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 105,
    "undocument": true,
    "type": {
      "types": [
        "{\"layersById\": *, \"layerGroupsById\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 237,
    "kind": "function",
    "name": "layers",
    "memberof": "src/js/ducks/layers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/layers.js~layers",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/layers.js",
    "importStyle": "layers",
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "initialLayers",
        "defaultValue": "initialLayers"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 238,
    "kind": "file",
    "name": "src/js/ducks/map.js",
    "content": "/**\n * map.js Ducks\n *\n * Contains the actions and reducer part that controls map functionality.\n */\nimport CONFIG from \"../config.json\"\n\n/**\n * Sets the map store to contain a zoom-to-shoreline action\n * @param {string} lakeName\n * @param {string} countyName\n */\nexport function zoomToShoreline(lakeName, countyName) {\n  return {\n    type: \"MAP:ZOOM_TO_SHORELINE\",\n    lakeName,\n    countyName\n  }\n}\n\n/**\n * Sets the map store to done zooming\n */\nexport function doneZooming() {\n  return {\n    type: \"MAP:DONE_ZOOMING\"\n  }\n}\n\n/**\n * Tells the map to reset the view back to the default as specified by the config\n */\nexport function resetMapView() {\n  return {\n    type: \"MAP:RESET_VIEW\"\n  }\n}\n\n/**\n * Dispatched when the map is done zooming to a new level\n */\nexport function mapNewZoomLevel(zoomLevel) {\n  return {\n    type: \"MAP:NEW_ZOOM_LEVEL\",\n    zoomLevel\n  }\n}\n\n/**\n * Dispatched when the user clicks on the map\n */\nexport function mapMousedown() {\n  return {\n    type: \"MAP:MOUSEDOWN\"\n  }\n}\n\n/**\n * Dispatched when a user clicks on a feature. The map will then zoom to that location if the\n * map is sufficiently zoomed out\n *\n * @param {array} coordinates - the coordinates of the location where the popup opened\n */\nexport function leafletPopupOpened(coordinates) {\n  return {\n    type: \"MAP:LEAFLET_POPUP_OPENED\",\n    coordinates\n  }\n}\n\nconst initialMapState = {\n  state: {\n    action: \"none\"\n  },\n  zoom: false\n}\n\nexport default function map(state = initialMapState, action) {\n  let newState = Object.assign({}, state)\n  switch (action.type) {\n    case \"MAP:ZOOM_TO_SHORELINE\": {\n      const shorelineExtent =\n        CONFIG.map.county_shorelines[action.lakeName][action.countyName]\n      newState.state = {\n        action: \"willZoom\",\n        extent: shorelineExtent\n      }\n      break\n    }\n    case \"MAP:DONE_ZOOMING\": {\n      if (state.state.action === \"willZoom\") {\n        newState.state = {\n          action: \"none\"\n        }\n      }\n      break\n    }\n    case \"MAP:RESET_VIEW\": {\n      const { wisconsinExtent } = CONFIG.map\n      newState.state = {\n        action: \"willZoom\",\n        extent: wisconsinExtent\n      }\n      break\n    }\n    case \"MAP:NEW_ZOOM_LEVEL\": {\n      newState.zoom = action.zoomLevel\n      break\n    }\n    case \"MAP:LEAFLET_POPUP_OPENED\": {\n      if (state.zoom < 10) {\n        newState.state = {\n          action: \"willZoomToPopup\",\n          zoom: 10,\n          coordinates: action.coordinates\n        }\n      }\n      break\n    }\n    default: {\n      newState = state\n      break\n    }\n  }\n  return newState\n}\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/ducks/map.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 239,
    "kind": "function",
    "name": "zoomToShoreline",
    "memberof": "src/js/ducks/map.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/map.js~zoomToShoreline",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/map.js",
    "importStyle": "{zoomToShoreline}",
    "description": "Sets the map store to contain a zoom-to-shoreline action",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "lakeName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "countyName",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": string, \"lakeName\": *, \"countyName\": *}"
      ]
    }
  },
  {
    "__docId__": 240,
    "kind": "function",
    "name": "doneZooming",
    "memberof": "src/js/ducks/map.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/map.js~doneZooming",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/map.js",
    "importStyle": "{doneZooming}",
    "description": "Sets the map store to done zooming",
    "lineNumber": 24,
    "params": [],
    "return": {
      "types": [
        "{\"type\": string}"
      ]
    }
  },
  {
    "__docId__": 241,
    "kind": "function",
    "name": "resetMapView",
    "memberof": "src/js/ducks/map.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/map.js~resetMapView",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/map.js",
    "importStyle": "{resetMapView}",
    "description": "Tells the map to reset the view back to the default as specified by the config",
    "lineNumber": 33,
    "params": [],
    "return": {
      "types": [
        "{\"type\": string}"
      ]
    }
  },
  {
    "__docId__": 242,
    "kind": "function",
    "name": "mapNewZoomLevel",
    "memberof": "src/js/ducks/map.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/map.js~mapNewZoomLevel",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/map.js",
    "importStyle": "{mapNewZoomLevel}",
    "description": "Dispatched when the map is done zooming to a new level",
    "lineNumber": 42,
    "params": [
      {
        "name": "zoomLevel",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"type\": string, \"zoomLevel\": *}"
      ]
    }
  },
  {
    "__docId__": 243,
    "kind": "function",
    "name": "mapMousedown",
    "memberof": "src/js/ducks/map.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/map.js~mapMousedown",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/map.js",
    "importStyle": "{mapMousedown}",
    "description": "Dispatched when the user clicks on the map",
    "lineNumber": 52,
    "params": [],
    "return": {
      "types": [
        "{\"type\": string}"
      ]
    }
  },
  {
    "__docId__": 244,
    "kind": "function",
    "name": "leafletPopupOpened",
    "memberof": "src/js/ducks/map.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/map.js~leafletPopupOpened",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/map.js",
    "importStyle": "{leafletPopupOpened}",
    "description": "Dispatched when a user clicks on a feature. The map will then zoom to that location if the\nmap is sufficiently zoomed out",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinates",
        "description": "the coordinates of the location where the popup opened"
      }
    ],
    "return": {
      "types": [
        "{\"type\": string, \"coordinates\": *}"
      ]
    }
  },
  {
    "__docId__": 245,
    "kind": "variable",
    "name": "initialMapState",
    "memberof": "src/js/ducks/map.js",
    "static": true,
    "longname": "src/js/ducks/map.js~initialMapState",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/ducks/map.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "{\"state\": *, \"zoom\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 246,
    "kind": "function",
    "name": "map",
    "memberof": "src/js/ducks/map.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/map.js~map",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/map.js",
    "importStyle": "map",
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "initialMapState",
        "defaultValue": "initialMapState"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 247,
    "kind": "file",
    "name": "src/js/ducks/mobile.js",
    "content": "/**\n * mobile.js Ducks\n *\n * Contains the actions and reducer part that controls mobile functionality.\n * Mobile functionality is present when the window is smaller than 992px.\n * These features include:\n * - Mobile Layer List\n * - Keeping track of window size\n * - When a feature is clicked during mobile mode (<992px)\n * - Mobile Feature Modal\n */\n\n/**\n * Opens the mobile layer list\n */\nexport function openMobileLayerList() {\n  return {\n    type: \"MOBILE:LAYER_POPUP:OPEN\"\n  }\n}\n\n/**\n * Closes the mobile layer list\n */\nexport function closeMobileLayerList() {\n  return {\n    type: \"MOBILE:LAYER_POPUP:CLOSE\"\n  }\n}\n\n/**\n * When the browser window changes sizes, this dispatches the height and width of the window to the store\n *\n * @param {number} height\n * @param {number} width\n */\nexport function updateWindowDimensions(height, width) {\n  return {\n    type: \"WINDOW:UPDATE_DIMENSIONS\",\n    height,\n    width\n  }\n}\n\n/**\n * When the browser is sufficiently small and the user clicks on a feature\n *\n * @param {Object} featureProperties - key/value pairs describing a particular feature\n * @param {string} layerId\n * @param {number} featureIndex - a number indicating the feature's order within the layer\n */\nexport function mobileClickFeature(featureProperties, layerId, featureIndex) {\n  return {\n    type: \"MOBILE:LAYER:CLICK_FEATURE\",\n    featureProperties,\n    layerId,\n    featureIndex\n  }\n}\n\n/**\n * When the user clicks on the \"close\" button in the mobile feature modal\n */\nexport function closeMobileFeatureModal() {\n  return {\n    type: \"MOBILE:FEATURE_MODAL:CLOSE\"\n  }\n}\n\nconst initialState = {\n  window: {\n    height: false,\n    width: false\n  },\n  layersPopup: {\n    visible: false\n  },\n  featureModal: {\n    visible: false,\n    featureProperties: false,\n    layerId: false,\n    featureIndex: false\n  }\n}\n\nexport default function mobile(state = initialState, action) {\n  let newState = Object.assign({}, state)\n  const layersPopupState = Object.assign({}, newState.layersPopup)\n  const windowState = Object.assign({}, newState.window)\n  const featureModalState = Object.assign({}, newState.featureModal)\n  switch (action.type) {\n    case \"MOBILE:LAYER_POPUP:OPEN\":\n      layersPopupState.visible = true\n      newState.layersPopup = layersPopupState\n      break\n    case \"MOBILE:LAYER_POPUP:CLOSE\":\n      layersPopupState.visible = false\n      newState.layersPopup = layersPopupState\n      break\n    case \"WINDOW:UPDATE_DIMENSIONS\":\n      windowState.height = action.height\n      windowState.width = action.width\n      newState.window = windowState\n      break\n    case \"MOBILE:LAYER:CLICK_FEATURE\":\n      featureModalState.visible = true\n      featureModalState.featureProperties = action.featureProperties\n      featureModalState.layerId = action.layerId\n      featureModalState.featureIndex = action.featureIndex\n      newState.featureModal = featureModalState\n      break\n    case \"MOBILE:FEATURE_MODAL:CLOSE\":\n      featureModalState.visible = false\n      featureModalState.featureProperties = false\n      featureModalState.layerId = false\n      featureModalState.featureIndex = false\n      newState.featureModal = featureModalState\n      break\n    default:\n      newState = state\n      break\n  }\n  return newState\n}\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/ducks/mobile.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 248,
    "kind": "function",
    "name": "openMobileLayerList",
    "memberof": "src/js/ducks/mobile.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/mobile.js~openMobileLayerList",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/mobile.js",
    "importStyle": "{openMobileLayerList}",
    "description": "Opens the mobile layer list",
    "lineNumber": 16,
    "params": [],
    "return": {
      "types": [
        "{\"type\": string}"
      ]
    }
  },
  {
    "__docId__": 249,
    "kind": "function",
    "name": "closeMobileLayerList",
    "memberof": "src/js/ducks/mobile.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/mobile.js~closeMobileLayerList",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/mobile.js",
    "importStyle": "{closeMobileLayerList}",
    "description": "Closes the mobile layer list",
    "lineNumber": 25,
    "params": [],
    "return": {
      "types": [
        "{\"type\": string}"
      ]
    }
  },
  {
    "__docId__": 250,
    "kind": "function",
    "name": "updateWindowDimensions",
    "memberof": "src/js/ducks/mobile.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/mobile.js~updateWindowDimensions",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/mobile.js",
    "importStyle": "{updateWindowDimensions}",
    "description": "When the browser window changes sizes, this dispatches the height and width of the window to the store",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "height",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "width",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"type\": string, \"height\": *, \"width\": *}"
      ]
    }
  },
  {
    "__docId__": 251,
    "kind": "function",
    "name": "mobileClickFeature",
    "memberof": "src/js/ducks/mobile.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/mobile.js~mobileClickFeature",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/mobile.js",
    "importStyle": "{mobileClickFeature}",
    "description": "When the browser is sufficiently small and the user clicks on a feature",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "featureProperties",
        "description": "key/value pairs describing a particular feature"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layerId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "featureIndex",
        "description": "a number indicating the feature's order within the layer"
      }
    ],
    "return": {
      "types": [
        "{\"type\": string, \"featureProperties\": *, \"layerId\": *, \"featureIndex\": *}"
      ]
    }
  },
  {
    "__docId__": 252,
    "kind": "function",
    "name": "closeMobileFeatureModal",
    "memberof": "src/js/ducks/mobile.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/mobile.js~closeMobileFeatureModal",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/mobile.js",
    "importStyle": "{closeMobileFeatureModal}",
    "description": "When the user clicks on the \"close\" button in the mobile feature modal",
    "lineNumber": 64,
    "params": [],
    "return": {
      "types": [
        "{\"type\": string}"
      ]
    }
  },
  {
    "__docId__": 253,
    "kind": "variable",
    "name": "initialState",
    "memberof": "src/js/ducks/mobile.js",
    "static": true,
    "longname": "src/js/ducks/mobile.js~initialState",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/ducks/mobile.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "{\"window\": *, \"layersPopup\": *, \"featureModal\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 254,
    "kind": "function",
    "name": "mobile",
    "memberof": "src/js/ducks/mobile.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/mobile.js~mobile",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/mobile.js",
    "importStyle": "mobile",
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "initialState",
        "defaultValue": "initialState"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 255,
    "kind": "file",
    "name": "src/js/ducks/nav.js",
    "content": "const initialState = {\n  expanded: false\n}\n\n/**\n * Sets the expanded state of the mobile version of the nav\n */\nexport function setNavExpand(expanded) {\n  return {\n    type: \"NAV:SET_EXPANDED\",\n    expanded\n  }\n}\n\nexport default function nav(state = initialState, action) {\n  const newState = {\n    ...state\n  }\n  switch (action.type) {\n    case \"MAP:MOUSEDOWN\":\n      newState.expanded = false\n      break\n    case \"NAV:SET_EXPANDED\":\n      newState.expanded = action.expanded\n      break\n    case \"MAP:ZOOM_TO_COUNTY\":\n      newState.expanded = false\n      break\n    default:\n      break\n  }\n  return newState\n}\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/ducks/nav.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 256,
    "kind": "variable",
    "name": "initialState",
    "memberof": "src/js/ducks/nav.js",
    "static": true,
    "longname": "src/js/ducks/nav.js~initialState",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/ducks/nav.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{\"expanded\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 257,
    "kind": "function",
    "name": "setNavExpand",
    "memberof": "src/js/ducks/nav.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/nav.js~setNavExpand",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/nav.js",
    "importStyle": "{setNavExpand}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "expanded",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"type\": string, \"expanded\": *}"
      ]
    }
  },
  {
    "__docId__": 258,
    "kind": "function",
    "name": "nav",
    "memberof": "src/js/ducks/nav.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/nav.js~nav",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/nav.js",
    "importStyle": "nav",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "initialState",
        "defaultValue": "initialState"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 259,
    "kind": "file",
    "name": "src/js/ducks/pinnedFeatures.js",
    "content": "/**\n * pinnedFeatures.js Ducks\n *\n * Contains the actions and reducer part that controls feature popups that have\n * been pinned to the page\n */\nimport uuid from \"uuid\"\n\nconst initialState = {}\n\n/**\n * When a Leaflet-based feature popup is \"pinned\", by clicking on the pin icon\n *\n * @param {string} layerId\n * @param {Object} featureProperties - key/value pairs describing a feature's properties\n * @param {Object} position - pixel coordinates describing the location of the leaflet popup\n *  in the map container.\n * @param {number} position.x - pixel coordinate describing x offset from left of window\n * @param {number} position.y - pixel coordinate describing y offset from top of window\n */\nexport function newPinnedFeature(layerId, featureProperties, position) {\n  return {\n    type: \"PINNED_FEATURES:NEW\",\n    layerId,\n    featureProperties,\n    position\n  }\n}\n\n/**\n * Closes a pinned feature popup\n *\n * @param {string} featureId - the ID of the feature to close\n */\nexport function closePinnedFeature(featureId) {\n  return {\n    type: \"PINNED_FEATURES:CLOSE\",\n    featureId\n  }\n}\n\nexport default function pinnedFeatures(state = initialState, action) {\n  const newState = {\n    ...state\n  }\n  switch (action.type) {\n    case \"PINNED_FEATURES:NEW\": {\n      const newPinnedFeatureId = uuid.v4()\n      newState[newPinnedFeatureId] = {\n        layerId: action.layerId,\n        featureProperties: action.featureProperties,\n        position: action.position\n      }\n      break\n    }\n    case \"PINNED_FEATURES:CLOSE\":\n      delete newState[action.featureId]\n      break\n    default:\n      break\n  }\n  return newState\n}\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/ducks/pinnedFeatures.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 260,
    "kind": "variable",
    "name": "initialState",
    "memberof": "src/js/ducks/pinnedFeatures.js",
    "static": true,
    "longname": "src/js/ducks/pinnedFeatures.js~initialState",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/ducks/pinnedFeatures.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 261,
    "kind": "function",
    "name": "newPinnedFeature",
    "memberof": "src/js/ducks/pinnedFeatures.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/pinnedFeatures.js~newPinnedFeature",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/pinnedFeatures.js",
    "importStyle": "{newPinnedFeature}",
    "description": "When a Leaflet-based feature popup is \"pinned\", by clicking on the pin icon",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layerId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "featureProperties",
        "description": "key/value pairs describing a feature's properties"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "pixel coordinates describing the location of the leaflet popup\n in the map container."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "position.x",
        "description": "pixel coordinate describing x offset from left of window"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "position.y",
        "description": "pixel coordinate describing y offset from top of window"
      }
    ],
    "return": {
      "types": [
        "{\"type\": string, \"layerId\": *, \"featureProperties\": *, \"position\": *}"
      ]
    }
  },
  {
    "__docId__": 262,
    "kind": "function",
    "name": "closePinnedFeature",
    "memberof": "src/js/ducks/pinnedFeatures.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/pinnedFeatures.js~closePinnedFeature",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/pinnedFeatures.js",
    "importStyle": "{closePinnedFeature}",
    "description": "Closes a pinned feature popup",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "featureId",
        "description": "the ID of the feature to close"
      }
    ],
    "return": {
      "types": [
        "{\"type\": string, \"featureId\": *}"
      ]
    }
  },
  {
    "__docId__": 263,
    "kind": "function",
    "name": "pinnedFeatures",
    "memberof": "src/js/ducks/pinnedFeatures.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/ducks/pinnedFeatures.js~pinnedFeatures",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/ducks/pinnedFeatures.js",
    "importStyle": "pinnedFeatures",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "initialState",
        "defaultValue": "initialState"
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 264,
    "kind": "file",
    "name": "src/js/layers/layerFeatures.jsx",
    "content": "/**\n * layerFeatures.jsx\n * This module contains functions that are applied to each layer's features\n *\n * onEachFeature() (below) is applied to a specific layer's features,\n * and Leaflet passes the layer's data to that function on load. It is used here to\n * apply click handling functions to each feature in each layer.\n */\nimport React from \"react\"\nimport L from \"leaflet\"\nimport { render } from \"react-dom\"\nimport { midpoint, point } from \"turf\"\n\nimport store from \"../store\"\nimport { mobileClickFeature } from \"../ducks/mobile\"\nimport { leafletPopupOpened } from \"../ducks/map\"\nimport FeaturePopup from \"../components/FeaturePopups/FeaturePopup\"\n\nconst LAYER_FEATURES = {}\n\n/**\n * When we open a popup, we want to make sure that popup opens at the\n * center of feature that's clicked (rather than the leaflet default,\n * opening the popup wherever the user clicks within the feature)\n * This app includes two types of features:\n * - linestrings\n * - points\n * Points are easy. Center the popup on the coordinate of the point.\n * For linestrings, the popup is centered on the median coordinate.\n *\n * @param {L.Layer} featureLayer - a leaflet layer representing a single feature\n */\nfunction getFeatureMidpoint(featureLayer) {\n  /**\n   * Convert a lat/lng to a geojson point\n   *\n   * @param {L.LatLng} latLng\n   * @returns {GeoJSON Feature}\n   */\n  function toCoordFeature(latLng) {\n    return point([latLng.lng, latLng.lat])\n  }\n\n  /**\n   * Get the midpoint of a line using Turf's `midpoint` function\n   *\n   * @param {L.LatLng[]} latLngs\n   * @returns {coordinates} - [x,y] coordinates describing the middle of a line\n   */\n  function getLineMidpoint(latLngs) {\n    let lowerMiddle = false\n    let upperMiddle = false\n    let middlePoint = false\n    // if there are more than two coordinates\n    if (latLngs.length > 2) {\n      // if the number of coordinates is even, find the\n      // average of the two middle coordinates\n      if (latLngs.length % 2 === 0) {\n        const firstIndex = latLngs.length / 2 - 1\n        const lastIndex = latLngs.length / 2\n        lowerMiddle = toCoordFeature(latLngs[firstIndex])\n        upperMiddle = toCoordFeature(latLngs[lastIndex])\n        middlePoint = midpoint(lowerMiddle, upperMiddle)\n        // if the number of coordinates is odd, get the median value\n      } else {\n        const middleIndex = Math.ceil(latLngs.length / 2)\n        middlePoint = toCoordFeature(latLngs[middleIndex])\n      }\n      // if there are exactly 2 coordinates\n    } else if (latLngs.length === 2) {\n      lowerMiddle = toCoordFeature(latLngs[0])\n      upperMiddle = toCoordFeature(latLngs[1])\n      middlePoint = midpoint(lowerMiddle, upperMiddle)\n      // if there is exactly 1 coordinate\n    } else if (latLngs.length === 1) {\n      middlePoint = toCoordFeature(latLngs[0])\n    }\n    return middlePoint.geometry.coordinates\n  }\n\n  /**\n   * Get the coordinates of a feature\n   */\n  function getPointCoords(latLng) {\n    return toCoordFeature(latLng).geometry.coordinates\n  }\n\n  // if it's a line (getLatLngs isn't undefined)\n  if (typeof featureLayer.getLatLngs !== \"undefined\") {\n    let latLngs = featureLayer.getLatLngs()\n    if (featureLayer.feature.geometry.type === \"MultiLineString\") {\n      latLngs = featureLayer.getLatLngs()[0]\n    }\n    return getLineMidpoint(latLngs)\n    // if it's a point (getLatLng isn't undefined)\n  }\n  if (typeof featureLayer.getLatLng !== \"undefined\") {\n    return getPointCoords(featureLayer.getLatLng())\n  }\n  return false\n}\n\n/**\n * The popup's content is handled by React (<FeaturePopup />),\n * however, Leaflet is not controlled by React.\n * Therefore, the popup's content must mount/unmount the React component\n * manually whenever it is opened/closed.\n *\n * @param {GeoJSON feature} feature - a GeoJSON feature\n * @param {L.Layer} featureLayer - a leaflet feature layer representing the above feature\n *  - i.e. Feature #3464\n * @param {string} layerId - unique layer ID describing the map layer containing this feature\n *  - i.e. 2017 Photos\n * @param {L.Map} map - the Leaflet map containing the feature\n */\nfunction createLeafletPopup(feature, featureLayer, layerId, map) {\n  const featureMiddlePoint = getFeatureMidpoint(featureLayer)\n  const container = document.createElement(\"div\")\n  const popup = L.popup({\n    closeOnClick: false,\n    className: \"feature-popup hidden-xs\",\n    autoClose: true,\n    maxWidth: 500,\n    minWidth: 350,\n    closeButton: false\n  })\n    .setLatLng(L.latLng(featureMiddlePoint[1], featureMiddlePoint[0]))\n    .setContent(container)\n  /**\n   * Gets the pixel position of the popup within the window\n   * @returns {Object} - position with properties x, y\n   */\n  const getPopupPosition = () => {\n    const popupPosition = popup.getLatLng()\n    const positionInMap = map.latLngToContainerPoint(popupPosition)\n    const mapElement = document.getElementById(\"map\")\n    const mapLocation = mapElement.getBoundingClientRect()\n    const positionInDocument = {\n      x: positionInMap.x + mapLocation.left,\n      y: positionInMap.y + mapLocation.top\n    }\n    return positionInDocument\n  }\n  const closePopup = () => {\n    // eslint-disable-next-line\n    popup._close()\n  }\n  const updateAfterZoom = () => {\n    map.once(\"zoomend\", () => {\n      setTimeout(() => {\n        popup.update()\n      }, 500)\n    })\n  }\n  popup.on(\"add\", () => {\n    store.dispatch(\n      leafletPopupOpened([featureMiddlePoint[1], featureMiddlePoint[0]])\n    )\n    render(\n      <FeaturePopup\n        layerId={layerId}\n        featureProperties={feature.properties}\n        popup={popup}\n        updateAfterZoom={updateAfterZoom}\n        closePopup={closePopup}\n        getPosition={getPopupPosition}\n        openNextFeature={featureLayer.openNextFeature}\n        openPreviousFeature={featureLayer.openPreviousFeature}\n      />,\n      container\n    )\n  })\n  popup.openOn(map)\n  return popup\n}\n\n/**\n * When the user has a popup open, they can use forward and back arrows to scroll to the next or\n * previous feature in the layer. This function is bound via `this` to a particular feature, and\n * then opens the next layer in the LAYER_INDEX\n */\nfunction toggleNextFeaturePopup() {\n  const { featureIndex } = this\n  const { layerId } = this\n  const nextFeatureIndex =\n    featureIndex + 1 >= LAYER_FEATURES[layerId].length ? 0 : featureIndex + 1\n  LAYER_FEATURES[layerId][nextFeatureIndex].togglePopup()\n}\n\n/**\n * When the user has a popup open, they can use forward and back arrows to scroll to the next or\n * previous feature in the layer. This function is bound via `this` to a particular feature, and\n * then opens the previous layer in the LAYER_INDEX\n */\nfunction togglePreviousFeaturePopup() {\n  const { featureIndex } = this\n  const { layerId } = this\n  const previousFeatureIndex =\n    featureIndex - 1 < 0 ? LAYER_FEATURES[layerId].length - 1 : featureIndex - 1\n  LAYER_FEATURES[layerId][previousFeatureIndex].togglePopup()\n}\n\n/**\n * Determine whether to:\n *  - show the mobile feature popup\n *  - create a popup for a particular feature layer, and then show it\n *  - toggle an already-created popup\n */\nfunction togglePopup() {\n  const { feature } = this\n  const { featureIndex } = this\n  const { layerId } = this\n  const { map } = this\n  this.openNextFeature = toggleNextFeaturePopup.bind(this)\n  this.openPreviousFeature = togglePreviousFeaturePopup.bind(this)\n  // if the window is sufficiently small, show the mobile feature modal\n  if (store.getState().mobile.window.width < 992) {\n    store.dispatch(\n      mobileClickFeature(feature.properties, layerId, featureIndex)\n    )\n    // else, show a popup\n  } else if (this.popup === false) {\n    this.popup = createLeafletPopup(feature, this, layerId, map, featureIndex)\n  } else {\n    this.popup.openOn(map)\n  }\n}\n\n/**\n * Leaflet creates a \"feature layer\" for each feature (a \"sub-layer\") within a layer\n * - i.e. The 1976 Photos layer will have feature layers for each photo\n * - these layers handle the click events for that feature, which we want to be able to access programatically\n * - this function creates an index of all those feature layers\n * - this function will let us access \"previous\" and \"next\" features for use with previous/next buttons\n *      in the feature popups\n * - returns an index value for each feature layer added\n */\nfunction addFeatureLayerToList(featureLayer, layerId) {\n  LAYER_FEATURES[layerId] = LAYER_FEATURES[layerId] || []\n  LAYER_FEATURES[layerId].push(featureLayer)\n  return LAYER_FEATURES[layerId].length - 1\n}\n\n/**\n * This is the primary exported function from layerFeatures.js\n * It's used to:\n *  - attach click handling to featureLayers (features)\n * Click handlers then:\n *  - create a popup for that feature\n *  - attach the popup to the featureLayer\n */\nexport function onEachFeature(layerId, map) {\n  return (feature, featureLayer) => {\n    const featureIndex = addFeatureLayerToList(featureLayer, layerId)\n    /* eslint-disable no-param-reassign */\n    featureLayer.popup = false\n    featureLayer.featureIndex = featureIndex\n    featureLayer.layerId = layerId\n    featureLayer.map = map\n    featureLayer.feature = feature\n    featureLayer.togglePopup = togglePopup.bind(featureLayer)\n    /* eslint-enable no-param-reassign */\n    featureLayer.on(\"mouseup\", featureLayer.togglePopup)\n  }\n}\n\n/**\n * For the mobile version of the feature popup (MobileFeaturePopup.jsx)\n * we need to access the index of layer features so we can utilize the \"next\"\n * and \"previous\" button functionality\n */\nexport function getFeatureLayer(featureIndex, layerId) {\n  return LAYER_FEATURES[layerId][featureIndex]\n}\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/layers/layerFeatures.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 265,
    "kind": "variable",
    "name": "LAYER_FEATURES",
    "memberof": "src/js/layers/layerFeatures.jsx",
    "static": true,
    "longname": "src/js/layers/layerFeatures.jsx~LAYER_FEATURES",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/layers/layerFeatures.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 266,
    "kind": "function",
    "name": "getFeatureMidpoint",
    "memberof": "src/js/layers/layerFeatures.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/layers/layerFeatures.jsx~getFeatureMidpoint",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/layers/layerFeatures.jsx",
    "importStyle": null,
    "description": "When we open a popup, we want to make sure that popup opens at the\ncenter of feature that's clicked (rather than the leaflet default,\nopening the popup wherever the user clicks within the feature)\nThis app includes two types of features:\n- linestrings\n- points\nPoints are easy. Center the popup on the coordinate of the point.\nFor linestrings, the popup is centered on the median coordinate.",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "L.Layer"
        ],
        "spread": false,
        "optional": false,
        "name": "featureLayer",
        "description": "a leaflet layer representing a single feature"
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 267,
    "kind": "function",
    "name": "createLeafletPopup",
    "memberof": "src/js/layers/layerFeatures.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/layers/layerFeatures.jsx~createLeafletPopup",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/layers/layerFeatures.jsx",
    "importStyle": null,
    "description": "The popup's content is handled by React (<FeaturePopup />),\nhowever, Leaflet is not controlled by React.\nTherefore, the popup's content must mount/unmount the React component\nmanually whenever it is opened/closed.",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "GeoJSON feature"
        ],
        "spread": false,
        "optional": false,
        "name": "feature",
        "description": "a GeoJSON feature"
      },
      {
        "nullable": null,
        "types": [
          "L.Layer"
        ],
        "spread": false,
        "optional": false,
        "name": "featureLayer",
        "description": "a leaflet feature layer representing the above feature\n - i.e. Feature #3464"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layerId",
        "description": "unique layer ID describing the map layer containing this feature\n - i.e. 2017 Photos"
      },
      {
        "nullable": null,
        "types": [
          "L.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": "the Leaflet map containing the feature"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 268,
    "kind": "function",
    "name": "toggleNextFeaturePopup",
    "memberof": "src/js/layers/layerFeatures.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/layers/layerFeatures.jsx~toggleNextFeaturePopup",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/layers/layerFeatures.jsx",
    "importStyle": null,
    "description": "When the user has a popup open, they can use forward and back arrows to scroll to the next or\nprevious feature in the layer. This function is bound via `this` to a particular feature, and\nthen opens the next layer in the LAYER_INDEX",
    "lineNumber": 182,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 269,
    "kind": "function",
    "name": "togglePreviousFeaturePopup",
    "memberof": "src/js/layers/layerFeatures.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/layers/layerFeatures.jsx~togglePreviousFeaturePopup",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/layers/layerFeatures.jsx",
    "importStyle": null,
    "description": "When the user has a popup open, they can use forward and back arrows to scroll to the next or\nprevious feature in the layer. This function is bound via `this` to a particular feature, and\nthen opens the previous layer in the LAYER_INDEX",
    "lineNumber": 195,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 270,
    "kind": "function",
    "name": "togglePopup",
    "memberof": "src/js/layers/layerFeatures.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/layers/layerFeatures.jsx~togglePopup",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/layers/layerFeatures.jsx",
    "importStyle": null,
    "description": "Determine whether to:\n - show the mobile feature popup\n - create a popup for a particular feature layer, and then show it\n - toggle an already-created popup",
    "lineNumber": 209,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 271,
    "kind": "function",
    "name": "addFeatureLayerToList",
    "memberof": "src/js/layers/layerFeatures.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/layers/layerFeatures.jsx~addFeatureLayerToList",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/layers/layerFeatures.jsx",
    "importStyle": null,
    "description": "Leaflet creates a \"feature layer\" for each feature (a \"sub-layer\") within a layer\n- i.e. The 1976 Photos layer will have feature layers for each photo\n- these layers handle the click events for that feature, which we want to be able to access programatically\n- this function creates an index of all those feature layers\n- this function will let us access \"previous\" and \"next\" features for use with previous/next buttons\n     in the feature popups\n- returns an index value for each feature layer added",
    "lineNumber": 238,
    "params": [
      {
        "name": "featureLayer",
        "types": [
          "*"
        ]
      },
      {
        "name": "layerId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 272,
    "kind": "function",
    "name": "onEachFeature",
    "memberof": "src/js/layers/layerFeatures.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/layers/layerFeatures.jsx~onEachFeature",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/layers/layerFeatures.jsx",
    "importStyle": "{onEachFeature}",
    "description": "This is the primary exported function from layerFeatures.js\nIt's used to:\n - attach click handling to featureLayers (features)\nClick handlers then:\n - create a popup for that feature\n - attach the popup to the featureLayer",
    "lineNumber": 252,
    "params": [
      {
        "name": "layerId",
        "types": [
          "*"
        ]
      },
      {
        "name": "map",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 273,
    "kind": "function",
    "name": "getFeatureLayer",
    "memberof": "src/js/layers/layerFeatures.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/layers/layerFeatures.jsx~getFeatureLayer",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/layers/layerFeatures.jsx",
    "importStyle": "{getFeatureLayer}",
    "description": "For the mobile version of the feature popup (MobileFeaturePopup.jsx)\nwe need to access the index of layer features so we can utilize the \"next\"\nand \"previous\" button functionality",
    "lineNumber": 272,
    "params": [
      {
        "name": "featureIndex",
        "types": [
          "*"
        ]
      },
      {
        "name": "layerId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 274,
    "kind": "file",
    "name": "src/js/layers/layerStyles.js",
    "content": "/**\n * layerStyles.js\n * This contains style functions that are applied to each geojson layer when they are loaded.\n * Additionally, this file caches the styles applied by each layer, so that when\n * the user activates them in the map, we save memory and we can keep track of all possible styles\n * for use in the legend\n */\nimport store from \"../store\"\nimport { legendStyleUpdate } from \"../ducks/layers\"\nimport { LAYERS_BY_ID } from \"../util\"\n\n/**\n * String values for recession rates\n */\nexport const NO_RECESSION = \"No recession\"\n// short term rates\nexport const ZERO_TO_TEN = \"0 to 10 feet\"\nexport const TEN_TO_TWENTY = \"10 to 20 feet\"\nexport const GREATER_THAN_TWENTY = \"Greater than 20 feet\"\n// long term rates\nexport const ZERO_TO_TWENTY = \"0 to 20 feet\"\nexport const TWENTY_TO_FORTY = \"20 to 40 feet\"\nexport const FORTY_TO_SIXTY = \"40 to 60 feet\"\nexport const GREATER_THAN_SIXTY = \"Greater than 60 feet\"\n\n/**\n * Colors used in the app\n */\nconst COLORS = {\n  RED: \"#F44336\",\n  GREEN: \"#8BC34A\",\n  YELLOW: \"#FFEB3B\",\n  GRAY: \"#9E9E9E\",\n  BLACK: \"#000000\"\n}\n\nCOLORS.BEACH = [\n  \"#E0E0E0\",\n  \"#a6cee3\",\n  \"#1f78b4\",\n  \"#b2df8a\",\n  \"#33a02c\",\n  \"#fb9a99\",\n  \"#e31a1c\",\n  \"#fdbf6f\",\n  \"#ff7f00\",\n  \"#cab2d6\",\n  \"#6a3d9a\",\n  \"#ffff99\"\n]\n\nCOLORS.PHOTOS = [\n  \"#BB8FCE\",\n  \"#AA7FBD\",\n  \"#9A70AC\",\n  \"#8A609C\",\n  \"#7A518B\",\n  \"#6A417B\",\n  \"#5A326A\",\n  \"#4A235A\"\n]\n\nCOLORS.STRUCTURES = [\"#8a6f66\", \"#6D4C41\", \"#3E2723\"]\n\nCOLORS.PROFILES = {\n  bathy: \"#00838F\",\n  bluff: \"#4E342E\"\n}\n\nCOLORS.SHORT_TERM_RATES = {\n  [NO_RECESSION]: \"#FFFFFF\",\n  [ZERO_TO_TEN]: \"#6d82ff\",\n  [TEN_TO_TWENTY]: \"#0529ff\",\n  [GREATER_THAN_TWENTY]: \"#00148a\"\n}\n\nCOLORS.LONG_TERM_RATES = {\n  [NO_RECESSION]: \"#FFFFFF\",\n  [ZERO_TO_TWENTY]: \"#FFE0E0\",\n  [TWENTY_TO_FORTY]: \"#DB877A\",\n  [FORTY_TO_SIXTY]: \"#BF5542\",\n  [GREATER_THAN_SIXTY]: \"#8E0909\"\n}\n\n// Default styles, if no style is specified for a particular layer\nconst DEFAULT_STYLES = {\n  LineString: {\n    weight: 4,\n    opacity: 0.9,\n    lineCap: \"round\",\n    lineJoin: \"round\",\n    color: COLORS.BLACK\n  },\n  Point: {\n    radius: 1,\n    color: COLORS.BLACK,\n    strokeColor: COLORS.BLACK,\n    weight: 0,\n    opacity: 0.8,\n    fillOpacity: 0\n  },\n  MultiLineString: {\n    weight: 4,\n    opacity: 0.9,\n    lineCap: \"round\",\n    lineJoin: \"round\",\n    color: COLORS.BLACK\n  }\n}\n\nconst SPECIAL_STYLES = {\n  Square: {\n    color: COLORS.BLACK,\n    strokeColor: COLORS.BLACK,\n    weight: 0,\n    opacity: 1,\n    fillOpacity: 1,\n    lineCap: \"square\",\n    lineJoin: \"miter\"\n  },\n  Triangle: {\n    color: COLORS.BLACK,\n    strokeColor: COLORS.BLACK,\n    weight: 0,\n    opacity: 1,\n    fillOpacity: 1,\n    lineCap: \"square\",\n    lineJoin: \"miter\"\n  }\n}\n\n/**\n * Individual layer styles are added below, as referenced by ID in config.json\n *\n * @param {string} subStyleName - if a style has different sub-styles for a particular feature type\n *  this parameter specifies the name of that sub-style, and the function below returns a style\n *  based on that information\n * @returns {object} - style per Leaflet's GeoJSON style spec\n *\n * - the keys of each function in LAYER_STYLES_BY_ID correspond to layers in config.json\n */\nconst LAYER_STYLES_BY_ID = {\n  backshore_1976(subStyleName) {\n    const style = {\n      ...DEFAULT_STYLES.LineString\n    }\n    switch (subStyleName) {\n      case \"Moderately Stable\":\n        style.color = COLORS.GREEN\n        break\n      case \"Moderately Unstable\":\n        style.color = COLORS.YELLOW\n        break\n      case \"No Bluff\":\n        style.color = COLORS.GRAY\n        break\n      case \"Unstable / Failing\":\n        style.color = COLORS.RED\n        break\n      default:\n        style.color = COLORS.BLACK\n        break\n    }\n    return style\n  },\n  backshore_2007(subStyleName) {\n    const style = {\n      ...DEFAULT_STYLES.LineString\n    }\n    switch (subStyleName) {\n      case \"Moderately Stable\":\n        style.color = COLORS.GREEN\n        break\n      case \"Moderately Unstable\":\n        style.color = COLORS.YELLOW\n        break\n      case \"No Bluff\":\n        style.color = COLORS.GRAY\n        break\n      case \"Unstable / Failing\":\n        style.color = COLORS.RED\n        break\n      default:\n        style.color = COLORS.BLACK\n        break\n    }\n    return style\n  },\n  backshore_2018(subStyleName) {\n    const style = {\n      ...DEFAULT_STYLES.LineString\n    }\n    switch (subStyleName) {\n      case \"Moderately Stable\":\n        style.color = COLORS.GREEN\n        break\n      case \"Moderately Unstable\":\n        style.color = COLORS.YELLOW\n        break\n      case \"No Bluff\":\n        style.color = COLORS.GRAY\n        break\n      case \"Unstable / Failing\":\n        style.color = COLORS.RED\n        break\n      default:\n        style.color = COLORS.BLACK\n        break\n    }\n    return style\n  },\n  structure_1976() {\n    return {\n      ...DEFAULT_STYLES.Point,\n      color: COLORS.STRUCTURES[0],\n      fillColor: COLORS.STRUCTURES[0],\n      opacity: 1\n    }\n  },\n  structure_2007() {\n    return {\n      ...DEFAULT_STYLES.Point,\n      color: COLORS.STRUCTURES[1],\n      fillColor: COLORS.STRUCTURES[1],\n      opacity: 1\n    }\n  },\n  structure_2018() {\n    return {\n      ...DEFAULT_STYLES.Point,\n      color: COLORS.STRUCTURES[2],\n      fillColor: COLORS.STRUCTURES[2],\n      opacity: 1\n    }\n  },\n  beachclass_1976(subStyleName) {\n    const style = {\n      ...DEFAULT_STYLES.LineString\n    }\n    switch (subStyleName) {\n      case \"None\":\n        style.color = COLORS.BEACH[0]\n        break\n      case \"Revetment\":\n        style.color = COLORS.BEACH[1]\n        break\n      case \"Poorly Organized Rip-Rap / Rubble\":\n        style.color = COLORS.BEACH[2]\n        break\n      case \"Seawall / Bulkhead\":\n        style.color = COLORS.BEACH[3]\n        break\n      case \"Groin / Jetty / Offshore Breakwater\":\n        style.color = COLORS.BEACH[4]\n        break\n      case \"Small Boat Dock\":\n        style.color = COLORS.BEACH[5]\n        break\n      case \"Public Marina\":\n        style.color = COLORS.BEACH[6]\n        break\n      case \"Commercial / Industrial Dock\":\n        style.color = COLORS.BEACH[7]\n        break\n      case \"Personal Marina\":\n        style.color = COLORS.BEACH[8]\n        break\n      case \"Offshore Breakwater\":\n        style.color = COLORS.BEACH[9]\n        break\n      default:\n        style.opacity = 0\n        break\n    }\n    return style\n  },\n  beachclass_2007(subStyleName) {\n    const style = {\n      ...DEFAULT_STYLES.LineString\n    }\n    switch (subStyleName) {\n      case \"None\":\n        style.color = COLORS.BEACH[0]\n        break\n      case \"Revetment\":\n        style.color = COLORS.BEACH[1]\n        break\n      case \"Poorly Organized Rip-Rap / Rubble\":\n        style.color = COLORS.BEACH[2]\n        break\n      case \"Seawall / Bulkhead\":\n        style.color = COLORS.BEACH[3]\n        break\n      case \"Groin / Jetty / Offshore Breakwater\":\n        style.color = COLORS.BEACH[4]\n        break\n      case \"Small Boat Dock\":\n        style.color = COLORS.BEACH[5]\n        break\n      case \"Public Marina\":\n        style.color = COLORS.BEACH[6]\n        break\n      case \"Commercial / Industrial Dock\":\n        style.color = COLORS.BEACH[7]\n        break\n      case \"Personal Marina\":\n        style.color = COLORS.BEACH[8]\n        break\n      case \"Offshore Breakwater\":\n        style.color = COLORS.BEACH[9]\n        break\n      default:\n        style.opacity = 0\n        break\n    }\n    return style\n  },\n  beachclass_2018(subStyleName) {\n    const style = {\n      ...DEFAULT_STYLES.LineString\n    }\n    switch (subStyleName) {\n      case \"None\":\n        style.color = COLORS.BEACH[0]\n        break\n      case \"Revetment\":\n        style.color = COLORS.BEACH[1]\n        break\n      case \"Poorly Organized Rip-Rap / Rubble\":\n        style.color = COLORS.BEACH[2]\n        break\n      case \"Seawall / Bulkhead\":\n        style.color = COLORS.BEACH[3]\n        break\n      case \"Groin / Jetty / Offshore Breakwater\":\n        style.color = COLORS.BEACH[4]\n        break\n      case \"Small Boat Dock\":\n        style.color = COLORS.BEACH[5]\n        break\n      case \"Public Marina\":\n        style.color = COLORS.BEACH[6]\n        break\n      case \"Commercial / Industrial Dock\":\n        style.color = COLORS.BEACH[7]\n        break\n      case \"Personal Marina\":\n        style.color = COLORS.BEACH[8]\n        break\n      case \"Offshore Breakwater\":\n        style.color = COLORS.BEACH[9]\n        break\n      default:\n        style.opacity = 0\n        break\n    }\n    return style\n  },\n  profiles(subStyleName) {\n    const style = {\n      ...DEFAULT_STYLES.LineString,\n      color: COLORS.PROFILES.bluff\n    }\n    switch (subStyleName) {\n      case \"Bathymetric Profile\":\n        style.color = COLORS.PROFILES.bathy\n        break\n      default:\n        break\n    }\n    return style\n  },\n  photos_1976() {\n    return {\n      ...DEFAULT_STYLES.Point,\n      color: COLORS.PHOTOS[0],\n      strokeColor: COLORS.PHOTOS[0]\n    }\n  },\n  photos_2007() {\n    return {\n      ...DEFAULT_STYLES.Point,\n      color: COLORS.PHOTOS[1],\n      strokeColor: COLORS.PHOTOS[1]\n    }\n  },\n  photos_2012() {\n    return {\n      ...DEFAULT_STYLES.Point,\n      color: COLORS.PHOTOS[2],\n      strokeColor: COLORS.PHOTOS[2]\n    }\n  },\n  photos_2016() {\n    return {\n      ...DEFAULT_STYLES.Point,\n      color: COLORS.PHOTOS[3],\n      strokeColor: COLORS.PHOTOS[3]\n    }\n  },\n  photos_2017() {\n    return {\n      ...DEFAULT_STYLES.Point,\n      color: COLORS.PHOTOS[4],\n      strokeColor: COLORS.PHOTOS[4]\n    }\n  },\n  photos_2018() {\n    return {\n      ...DEFAULT_STYLES.Point,\n      color: COLORS.PHOTOS[5],\n      strokeColor: COLORS.PHOTOS[5]\n    }\n  },\n  photos_2019() {\n    return {\n      ...DEFAULT_STYLES.Point,\n      color: COLORS.PHOTOS[6],\n      strokeColor: COLORS.PHOTOS[6]\n    }\n  },\n  photos_2020() {\n    return {\n      ...DEFAULT_STYLES.Point,\n      color: COLORS.PHOTOS[7],\n      strokeColor: COLORS.PHOTOS[7]\n    }\n  },\n\n  // square, blue\n  bluff_toe_rec_short(subStyleName) {\n    return {\n      ...SPECIAL_STYLES.Square,\n      color: COLORS.SHORT_TERM_RATES[subStyleName],\n      strokeColor: COLORS.SHORT_TERM_RATES[subStyleName]\n    }\n  },\n  // circle, blue\n  bluff_crest_rec_short(subStyleName) {\n    return {\n      ...DEFAULT_STYLES.Point,\n      color: COLORS.SHORT_TERM_RATES[subStyleName],\n      strokeColor: COLORS.SHORT_TERM_RATES[subStyleName]\n    }\n  },\n  // triangle, blue\n  shoreline_rec_short(subStyleName) {\n    return {\n      ...SPECIAL_STYLES.Triangle,\n      color: COLORS.SHORT_TERM_RATES[subStyleName],\n      strokeColor: COLORS.SHORT_TERM_RATES[subStyleName]\n    }\n  },\n  // square, red\n  bluff_toe_rec_long(subStyleName) {\n    return {\n      ...SPECIAL_STYLES.Square,\n      color: COLORS.LONG_TERM_RATES[subStyleName],\n      strokeColor: COLORS.LONG_TERM_RATES[subStyleName]\n    }\n  },\n  // circle, red\n  bluff_crest_rec_long(subStyleName) {\n    return {\n      ...DEFAULT_STYLES.Point,\n      color: COLORS.LONG_TERM_RATES[subStyleName],\n      strokeColor: COLORS.LONG_TERM_RATES[subStyleName]\n    }\n  },\n  // triangle, red\n  shoreline_rec_long(subStyleName) {\n    return {\n      ...SPECIAL_STYLES.Triangle,\n      color: COLORS.LONG_TERM_RATES[subStyleName],\n      strokeColor: COLORS.LONG_TERM_RATES[subStyleName]\n    }\n  },\n  // orange\n  shoreline_position() {\n    return {\n      ...DEFAULT_STYLES.LineString\n    }\n  }\n}\n\n// No recession (distance <= 0)\n// 0 to 10 feet (0 < distance <= 10)\n// 10 to 20 feet (10 < distance <= 20)\n// Greater than 20 feet (20 < distance)\nconst getShortTermClassification = distance => {\n  if (distance > 20) {\n    return GREATER_THAN_TWENTY\n  }\n  if (distance > 10) {\n    return TEN_TO_TWENTY\n  }\n  if (distance > 0) {\n    return ZERO_TO_TEN\n  }\n  return NO_RECESSION\n}\n\n// No recession (distance <= 0)\n// 0 to 20 feet (0 < distance <= 20)\n// 20 to 40 feet (20 < distance <= 40)\n// 40 to 60 feet (40 < distance <= 60)\n// Greater than 60 feet (40 < distance)\nconst getLongTermClassification = distance => {\n  if (distance > 60) {\n    return GREATER_THAN_SIXTY\n  }\n  if (distance > 40) {\n    return FORTY_TO_SIXTY\n  }\n  if (distance > 20) {\n    return TWENTY_TO_FORTY\n  }\n  if (distance > 0) {\n    return ZERO_TO_TWENTY\n  }\n  return NO_RECESSION\n}\n\nconst LEGEND_SORT_OVERRIDES_BY_LAYER_ID = {\n  bluff_toe_rec_long: [\n    NO_RECESSION,\n    ZERO_TO_TWENTY,\n    TWENTY_TO_FORTY,\n    FORTY_TO_SIXTY,\n    GREATER_THAN_SIXTY\n  ],\n  bluff_crest_rec_long: [\n    NO_RECESSION,\n    ZERO_TO_TWENTY,\n    TWENTY_TO_FORTY,\n    FORTY_TO_SIXTY,\n    GREATER_THAN_SIXTY\n  ],\n  shoreline_rec_long: [\n    NO_RECESSION,\n    ZERO_TO_TWENTY,\n    TWENTY_TO_FORTY,\n    FORTY_TO_SIXTY,\n    GREATER_THAN_SIXTY\n  ],\n  bluff_toe_rec_short: [\n    NO_RECESSION,\n    ZERO_TO_TEN,\n    TEN_TO_TWENTY,\n    GREATER_THAN_TWENTY\n  ],\n  bluff_crest_rec_short: [\n    NO_RECESSION,\n    ZERO_TO_TEN,\n    TEN_TO_TWENTY,\n    GREATER_THAN_TWENTY\n  ],\n  shoreline_rec_short: [\n    NO_RECESSION,\n    ZERO_TO_TEN,\n    TEN_TO_TWENTY,\n    GREATER_THAN_TWENTY\n  ]\n}\n\n/**\n * If a layer should have different styles for features based on a particular feature property\n * i.e. For all features in the Profiles layer:\n *  - feature.type = \"bluff\" - should be colored red\n *  - feature.type = \"bathy\" - should be colored blue\n * Return the value of the property that determines the differing style\n * Alternatively, if a layer's style should be the same for all features, just return\n * a string to serve as the label in the legend\n *\n * @param {string} layerId - unique layer identifier\n * @param {GeoJSON Feature} feature - a GeoJSON feature\n */\nfunction getLayerSubStyleName(layerId, feature) {\n  let subStyleName = layerId\n  switch (layerId) {\n    case \"backshore_1976\":\n      subStyleName = feature.properties[\"Bluff Condition Classification\"]\n      break\n    case \"backshore_2007\":\n      subStyleName = feature.properties[\"Bluff Condition Classification\"]\n      break\n    case \"backshore_2018\":\n      subStyleName = feature.properties.BluffCon\n      break\n    case \"photos_1976\":\n      subStyleName = \"1976 Photos\"\n      break\n    case \"photos_2007\":\n      subStyleName = \"2007 Photos\"\n      break\n    case \"structure_1976\":\n      subStyleName = \"Structures\"\n      break\n    case \"structure_2007\":\n      subStyleName = \"Structures\"\n      break\n    case \"structure_2018\":\n      subStyleName = \"Structures\"\n      break\n    case \"beachclass_1976\":\n      subStyleName = feature.properties[\"Shore Protection Classification\"]\n      break\n    case \"beachclass_2007\":\n      subStyleName = feature.properties[\"Shore Protection Classification\"]\n      break\n    case \"beachclass_2018\":\n      subStyleName = feature.properties.ProtectV\n      break\n    case \"profiles\":\n      if (feature.properties.bathy_xls !== false) {\n        subStyleName = \"Bathymetric Profile\"\n      } else {\n        subStyleName = \"Bluff Profile\"\n      }\n      break\n    case \"photos_obl_2016\":\n      subStyleName = \"2016 Photos\"\n      break\n    case \"photos_dm_2016\":\n      subStyleName = \"2016 Photos\"\n      break\n    case \"photos_2017\":\n      subStyleName = \"2017 Photos\"\n      break\n    case \"photos_2012\":\n      subStyleName = \"2012 Photos\"\n      break\n    case \"bluff_toe_rec_long\":\n      subStyleName = getLongTermClassification(feature.properties.Yr_59_Dist)\n      break\n    case \"bluff_crest_rec_long\":\n      subStyleName = getLongTermClassification(feature.properties.Yr_59_Dist)\n      break\n    case \"shoreline_rec_long\":\n      subStyleName = getLongTermClassification(feature.properties.Yr_59_Dist)\n      break\n    case \"bluff_toe_rec_short\":\n      subStyleName = getShortTermClassification(feature.properties.Yr_20_Dist)\n      break\n    case \"bluff_crest_rec_short\":\n      subStyleName = getShortTermClassification(feature.properties.Yr_20_Dist)\n      break\n    case \"shoreline_rec_short\":\n      subStyleName = getShortTermClassification(feature.properties.Yr_20_Dist)\n      break\n    case \"shoreline_position \":\n      subStyleName = \"Shoreline Position\"\n      break\n    default:\n      break\n  }\n  return subStyleName\n}\n\n/**\n * Cache every unique style so that it can be reused for features sharing the same style\n */\nconst CACHE = {}\n\n/**\n * Return a cached style if it exists\n *\n * @param {string} layerId - unique layer identifier\n * @param {GeoJSON Feature} feature - a GeoJSON feature\n * @returns {Object|false} - returns style object if cache exists, false if it doesn't\n */\nfunction getCachedStyle(layerId, feature) {\n  if (typeof CACHE[layerId] !== \"undefined\") {\n    const subStyleName = getLayerSubStyleName(layerId, feature)\n    if (typeof CACHE[layerId][subStyleName] !== \"undefined\") {\n      return CACHE[layerId][subStyleName]\n    }\n  }\n  return false\n}\n\n/**\n * Called when a particular style / sub-style doesn't have an associated cache\n * A new style object is created, and cached for future use\n *\n * @param {string} layerId - unique layer identifier\n * @param {GeoJSON Feature} feature - a GeoJSON feature\n * @return {object} - style\n */\nfunction createNewStyle(layerId, feature) {\n  let style = null\n  const layer = LAYERS_BY_ID[layerId]\n  // Get either the singular name for the layer's style or the name of the sub-style for this feature\n  const subStyleName = getLayerSubStyleName(layerId, feature)\n  // If there's a style set for a particular Layer ID, fetch that style\n  // Otherwise, get the default style for that geometry type\n  if (typeof LAYER_STYLES_BY_ID[layerId] !== \"undefined\") {\n    style = LAYER_STYLES_BY_ID[layerId](subStyleName)\n  } else if (typeof DEFAULT_STYLES[feature.geometry.type] !== \"undefined\") {\n    style = DEFAULT_STYLES[feature.geometry.type]\n  }\n  // assign the classname property of every style\n  const layerIdClass = \"layer-\" + layerId\n  const layerGeometryClass = \"layer-geometry-\" + feature.geometry.type\n  const displayType = layer.displayType\n    ? layer.displayType\n    : feature.geometry.type.toLowerCase()\n  const layerDisplayTypeClass = \"layer-display-type-\" + displayType\n  if (typeof style.className === \"undefined\") {\n    style.className = \"\"\n  }\n  style.className +=\n    \" \" + [layerGeometryClass, layerIdClass, layerDisplayTypeClass].join(\" \")\n  const sortOverride = LEGEND_SORT_OVERRIDES_BY_LAYER_ID[layerId]\n  const sortOrder = sortOverride ? sortOverride.indexOf(subStyleName) : 0\n  // add the style to the legend\n  store.dispatch(\n    legendStyleUpdate(\n      layerId,\n      subStyleName,\n      style,\n      feature.geometry.type,\n      displayType,\n      sortOrder\n    )\n  )\n  // add style to cache\n  CACHE[layerId] = CACHE[layerId] || {}\n  CACHE[layerId][subStyleName] = style\n  return style\n}\n\n/**\n * Imported by ObliquePhotoMap. When passed a layerId, this function returns a function,\n * bound to the LayerId, to get all a style for each feature in a particular layer\n *\n * @param {string} layerId - a unique layer id\n * @returns {function} - a function that gets a unique style based on the feature that's passed to it\n */\nexport default function LAYER_STYLE(layerId) {\n  return function layerStyle(feature) {\n    return getCachedStyle(layerId, feature) || createNewStyle(layerId, feature)\n  }\n}\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/layers/layerStyles.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 275,
    "kind": "variable",
    "name": "NO_RECESSION",
    "memberof": "src/js/layers/layerStyles.js",
    "static": true,
    "longname": "src/js/layers/layerStyles.js~NO_RECESSION",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/layers/layerStyles.js",
    "importStyle": "{NO_RECESSION}",
    "description": "String values for recession rates",
    "lineNumber": 15,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 276,
    "kind": "variable",
    "name": "ZERO_TO_TEN",
    "memberof": "src/js/layers/layerStyles.js",
    "static": true,
    "longname": "src/js/layers/layerStyles.js~ZERO_TO_TEN",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/layers/layerStyles.js",
    "importStyle": "{ZERO_TO_TEN}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 277,
    "kind": "variable",
    "name": "TEN_TO_TWENTY",
    "memberof": "src/js/layers/layerStyles.js",
    "static": true,
    "longname": "src/js/layers/layerStyles.js~TEN_TO_TWENTY",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/layers/layerStyles.js",
    "importStyle": "{TEN_TO_TWENTY}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 278,
    "kind": "variable",
    "name": "GREATER_THAN_TWENTY",
    "memberof": "src/js/layers/layerStyles.js",
    "static": true,
    "longname": "src/js/layers/layerStyles.js~GREATER_THAN_TWENTY",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/layers/layerStyles.js",
    "importStyle": "{GREATER_THAN_TWENTY}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 279,
    "kind": "variable",
    "name": "ZERO_TO_TWENTY",
    "memberof": "src/js/layers/layerStyles.js",
    "static": true,
    "longname": "src/js/layers/layerStyles.js~ZERO_TO_TWENTY",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/layers/layerStyles.js",
    "importStyle": "{ZERO_TO_TWENTY}",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 280,
    "kind": "variable",
    "name": "TWENTY_TO_FORTY",
    "memberof": "src/js/layers/layerStyles.js",
    "static": true,
    "longname": "src/js/layers/layerStyles.js~TWENTY_TO_FORTY",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/layers/layerStyles.js",
    "importStyle": "{TWENTY_TO_FORTY}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 281,
    "kind": "variable",
    "name": "FORTY_TO_SIXTY",
    "memberof": "src/js/layers/layerStyles.js",
    "static": true,
    "longname": "src/js/layers/layerStyles.js~FORTY_TO_SIXTY",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/layers/layerStyles.js",
    "importStyle": "{FORTY_TO_SIXTY}",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 282,
    "kind": "variable",
    "name": "GREATER_THAN_SIXTY",
    "memberof": "src/js/layers/layerStyles.js",
    "static": true,
    "longname": "src/js/layers/layerStyles.js~GREATER_THAN_SIXTY",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/layers/layerStyles.js",
    "importStyle": "{GREATER_THAN_SIXTY}",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 283,
    "kind": "variable",
    "name": "COLORS",
    "memberof": "src/js/layers/layerStyles.js",
    "static": true,
    "longname": "src/js/layers/layerStyles.js~COLORS",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/layers/layerStyles.js",
    "importStyle": null,
    "description": "Colors used in the app",
    "lineNumber": 29,
    "type": {
      "types": [
        "{\"RED\": string, \"GREEN\": string, \"YELLOW\": string, \"GRAY\": string, \"BLACK\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 284,
    "kind": "variable",
    "name": "DEFAULT_STYLES",
    "memberof": "src/js/layers/layerStyles.js",
    "static": true,
    "longname": "src/js/layers/layerStyles.js~DEFAULT_STYLES",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/layers/layerStyles.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "type": {
      "types": [
        "{\"LineString\": *, \"Point\": *, \"MultiLineString\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 285,
    "kind": "variable",
    "name": "SPECIAL_STYLES",
    "memberof": "src/js/layers/layerStyles.js",
    "static": true,
    "longname": "src/js/layers/layerStyles.js~SPECIAL_STYLES",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/layers/layerStyles.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "type": {
      "types": [
        "{\"Square\": *, \"Triangle\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 286,
    "kind": "variable",
    "name": "LAYER_STYLES_BY_ID",
    "memberof": "src/js/layers/layerStyles.js",
    "static": true,
    "longname": "src/js/layers/layerStyles.js~LAYER_STYLES_BY_ID",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/layers/layerStyles.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 142,
    "undocument": true,
    "type": {
      "types": [
        "{\"backshore_1976\": function, \"backshore_2007\": function, \"backshore_2018\": function, \"structure_1976\": function, \"structure_2007\": function, \"structure_2018\": function, \"beachclass_1976\": function, \"beachclass_2007\": function, \"beachclass_2018\": function, \"profiles\": function, \"photos_1976\": function, \"photos_2007\": function, \"photos_2012\": function, \"photos_2016\": function, \"photos_2017\": function, \"photos_2018\": function, \"photos_2019\": function, \"photos_2020\": function, \"bluff_toe_rec_short\": function, \"bluff_crest_rec_short\": function, \"shoreline_rec_short\": function, \"bluff_toe_rec_long\": function, \"bluff_crest_rec_long\": function, \"shoreline_rec_long\": function, \"shoreline_position\": function}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 287,
    "kind": "function",
    "name": "getShortTermClassification",
    "memberof": "src/js/layers/layerStyles.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/layers/layerStyles.js~getShortTermClassification",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/layers/layerStyles.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 490,
    "undocument": true,
    "params": [
      {
        "name": "distance",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 288,
    "kind": "function",
    "name": "getLongTermClassification",
    "memberof": "src/js/layers/layerStyles.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/layers/layerStyles.js~getLongTermClassification",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/layers/layerStyles.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 508,
    "undocument": true,
    "params": [
      {
        "name": "distance",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 289,
    "kind": "variable",
    "name": "LEGEND_SORT_OVERRIDES_BY_LAYER_ID",
    "memberof": "src/js/layers/layerStyles.js",
    "static": true,
    "longname": "src/js/layers/layerStyles.js~LEGEND_SORT_OVERRIDES_BY_LAYER_ID",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/layers/layerStyles.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 524,
    "undocument": true,
    "type": {
      "types": [
        "{\"bluff_toe_rec_long\": *, \"bluff_crest_rec_long\": *, \"shoreline_rec_long\": *, \"bluff_toe_rec_short\": *, \"bluff_crest_rec_short\": *, \"shoreline_rec_short\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 290,
    "kind": "function",
    "name": "getLayerSubStyleName",
    "memberof": "src/js/layers/layerStyles.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/layers/layerStyles.js~getLayerSubStyleName",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/layers/layerStyles.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 578,
    "undocument": true,
    "params": [
      {
        "name": "layerId",
        "types": [
          "*"
        ]
      },
      {
        "name": "feature",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 291,
    "kind": "variable",
    "name": "CACHE",
    "memberof": "src/js/layers/layerStyles.js",
    "static": true,
    "longname": "src/js/layers/layerStyles.js~CACHE",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/layers/layerStyles.js",
    "importStyle": null,
    "description": "Cache every unique style so that it can be reused for features sharing the same style",
    "lineNumber": 663,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 292,
    "kind": "function",
    "name": "getCachedStyle",
    "memberof": "src/js/layers/layerStyles.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/layers/layerStyles.js~getCachedStyle",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/layers/layerStyles.js",
    "importStyle": null,
    "description": "Return a cached style if it exists",
    "lineNumber": 672,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object|false} - returns style object if cache exists, false if it doesn't"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layerId",
        "description": "unique layer identifier"
      },
      {
        "nullable": null,
        "types": [
          "GeoJSON Feature"
        ],
        "spread": false,
        "optional": false,
        "name": "feature",
        "description": "a GeoJSON feature"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "false"
      ],
      "spread": false,
      "description": "returns style object if cache exists, false if it doesn't"
    },
    "ignore": true
  },
  {
    "__docId__": 293,
    "kind": "function",
    "name": "createNewStyle",
    "memberof": "src/js/layers/layerStyles.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/layers/layerStyles.js~createNewStyle",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/layers/layerStyles.js",
    "importStyle": null,
    "description": "Called when a particular style / sub-style doesn't have an associated cache\nA new style object is created, and cached for future use",
    "lineNumber": 690,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layerId",
        "description": "unique layer identifier"
      },
      {
        "nullable": null,
        "types": [
          "GeoJSON Feature"
        ],
        "spread": false,
        "optional": false,
        "name": "feature",
        "description": "a GeoJSON feature"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "style"
    },
    "ignore": true
  },
  {
    "__docId__": 294,
    "kind": "function",
    "name": "LAYER_STYLE",
    "memberof": "src/js/layers/layerStyles.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/layers/layerStyles.js~LAYER_STYLE",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/layers/layerStyles.js",
    "importStyle": "LAYER_STYLE",
    "description": "Imported by ObliquePhotoMap. When passed a layerId, this function returns a function,\nbound to the LayerId, to get all a style for each feature in a particular layer",
    "lineNumber": 740,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} - a function that gets a unique style based on the feature that's passed to it"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layerId",
        "description": "a unique layer id"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "a function that gets a unique style based on the feature that's passed to it"
    }
  },
  {
    "__docId__": 295,
    "kind": "file",
    "name": "src/js/lib/AddMousePosition.js",
    "content": "/**\n * Hand-rolled shim that accepts Leaflet as a parameter and adds the MousePosition plugin\n */\nexport default function AddMousePosition(L) {\n  L.Control.MousePosition = L.Control.extend({\n    options: {\n      position: \"bottomleft\",\n      separator: \" : \",\n      emptyString: \"Unavailable\",\n      lngFirst: false,\n      numDigits: 5,\n      lngFormatter: undefined,\n      latFormatter: undefined,\n      prefix: \"\"\n    },\n\n    onAdd(map) {\n      this._container = L.DomUtil.create(\"div\", \"leaflet-control-mouseposition\")\n      L.DomEvent.disableClickPropagation(this._container)\n      map.on(\"mousemove\", this._onMouseMove, this)\n      this._container.innerHTML = this.options.emptyString\n      return this._container\n    },\n\n    onRemove(map) {\n      map.off(\"mousemove\", this._onMouseMove)\n    },\n\n    _onMouseMove(e) {\n      const lng = this.options.lngFormatter\n        ? this.options.lngFormatter(e.latlng.lng)\n        : L.Util.formatNum(e.latlng.lng, this.options.numDigits)\n      const lat = this.options.latFormatter\n        ? this.options.latFormatter(e.latlng.lat)\n        : L.Util.formatNum(e.latlng.lat, this.options.numDigits)\n      const value = this.options.lngFirst\n        ? lng + this.options.separator + lat\n        : lat + this.options.separator + lng\n      const prefixAndValue = this.options.prefix + \" \" + value\n      this._container.innerHTML = prefixAndValue\n    }\n  })\n\n  L.Map.mergeOptions({\n    positionControl: false\n  })\n\n  L.Map.addInitHook(function() {\n    if (this.options.positionControl) {\n      this.positionControl = new L.Control.MousePosition()\n      this.addControl(this.positionControl)\n    }\n  })\n\n  L.control.mousePosition = function(options) {\n    return new L.Control.MousePosition(options)\n  }\n}\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/lib/AddMousePosition.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 296,
    "kind": "function",
    "name": "AddMousePosition",
    "memberof": "src/js/lib/AddMousePosition.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/lib/AddMousePosition.js~AddMousePosition",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/lib/AddMousePosition.js",
    "importStyle": "AddMousePosition",
    "description": "Hand-rolled shim that accepts Leaflet as a parameter and adds the MousePosition plugin",
    "lineNumber": 4,
    "params": [
      {
        "name": "L",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 297,
    "kind": "file",
    "name": "src/js/selectors.js",
    "content": "import { createSelector } from \"reselect\"\nimport { LAYERS_BY_ID, LAYER_GROUPS_BY_ID, BASEMAPS_BY_ID } from \"./util\"\n\nconst getLayersById = state => state.layers.layersById\nconst getBasemapsById = state => state.basemaps\nconst getLayerGroupsById = state => state.layers.layerGroupsById\nconst getMobileFeatureModal = state => state.mobile.featureModal\n\nexport const getBasemapsByIdWithData = createSelector(\n  [getBasemapsById],\n  basemaps => {\n    const basemapsWithData = {}\n    for (const basemapId in basemaps) {\n      basemapsWithData[basemapId] = {\n        ...BASEMAPS_BY_ID[basemapId],\n        ...basemaps[basemapId]\n      }\n    }\n    return basemapsWithData\n  }\n)\n\nexport const getLayersByIdWithData = createSelector(\n  [getLayersById],\n  layers => {\n    const layersWithData = {}\n    for (const layerId in layers) {\n      layersWithData[layerId] = {\n        ...LAYERS_BY_ID[layerId],\n        ...layers[layerId]\n      }\n    }\n    return layersWithData\n  }\n)\n\nexport const getLayerGroupsByIdWithData = createSelector(\n  [getLayerGroupsById],\n  layerGroups => {\n    const layersGroupsWithData = {}\n    for (const layerGroupId in layerGroups) {\n      layersGroupsWithData[layerGroupId] = {\n        ...LAYER_GROUPS_BY_ID[layerGroupId]\n      }\n    }\n    return layersGroupsWithData\n  }\n)\n\nexport const mapLayerGroupsToLayers = createSelector(\n  [getLayerGroupsByIdWithData, getLayersByIdWithData],\n  (layerGroups, layers) => {\n    const mappedLayerGroups = {}\n    for (const layerGroupId in layerGroups) {\n      mappedLayerGroups[layerGroupId] = {\n        ...layerGroups[layerGroupId],\n        layers: {}\n      }\n      for (const layerId of layerGroups[layerGroupId].layers) {\n        mappedLayerGroups[layerGroupId].layers[layerId] = layers[layerId]\n      }\n    }\n    return mappedLayerGroups\n  }\n)\n\nexport const getActiveBasemapId = createSelector(\n  [getBasemapsById],\n  basemaps => {\n    let activeBasemapId = \"\"\n    for (const basemapId in basemaps) {\n      if (basemaps[basemapId].active === true) {\n        activeBasemapId = basemapId\n      }\n    }\n    return activeBasemapId\n  }\n)\n\nexport const getActiveLayers = createSelector(\n  getLayersById,\n  layers => {\n    const activeLayers = []\n    for (const layerId in layers) {\n      if (layers[layerId].active === true) {\n        activeLayers.push(layerId)\n      }\n    }\n    return activeLayers\n  }\n)\n\nexport const getActiveLayerStyleTypes = createSelector(\n  [getLayersByIdWithData, getLayerGroupsByIdWithData, getActiveLayers],\n  (layers, layerGroups, activeLayers) => {\n    const stylesByLayerId = {}\n    for (const layerId of activeLayers) {\n      const layer = layers[layerId]\n      const layerName = layer.name || layerId\n      const { layerGroupId } = layer\n      let layerGroupName = layerGroupId\n      if (typeof layerGroups[layerGroupId] !== \"undefined\") {\n        layerGroupName = layerGroups[layerGroupId].name || layerGroupId\n      }\n      const { legendStyles } = layer\n      let styles = []\n      for (const styleName in legendStyles) {\n        const styleIconClassNames = [\"fa\"]\n        const iconStyle = {\n          color: \"#000000\"\n        }\n        if (\n          legendStyles[styleName].geometryType === \"LineString\" ||\n          legendStyles[styleName].geometryType === \"MultiLineString\"\n        ) {\n          styleIconClassNames.push(\"fa-minus\")\n          iconStyle.color = legendStyles[styleName].style.color\n        } else if (legendStyles[styleName].geometryType === \"Point\") {\n          if (legendStyles[styleName].displayType === \"square\") {\n            styleIconClassNames.push(\"fa-square\")\n          } else if (legendStyles[styleName].displayType === \"triangle\") {\n            styleIconClassNames.push(\"fa-play fa-rotate-270\")\n          } else {\n            styleIconClassNames.push(\"fa-circle\")\n          }\n          iconStyle.color = legendStyles[styleName].style.strokeColor\n        }\n        const newStyleName = styleName === \"null\" ? \"(No Value)\" : styleName\n        styles.push({\n          styleName: newStyleName,\n          iconStyle,\n          styleIconClassNames,\n          sortOrder: legendStyles[styleName].sortOrder\n        })\n      }\n      styles = styles.sort((a, b) => {\n        if (a.sortOrder === b.sortOrder) {\n          if (a.styleName < b.styleName) {\n            return -1\n          }\n          if (a.styleName > b.styleName) {\n            return 1\n          }\n          return 0\n        }\n        return a.sortOrder - b.sortOrder\n      })\n      stylesByLayerId[layerId] = {\n        layerName,\n        layerGroupName,\n        styles\n      }\n    }\n    return stylesByLayerId\n  }\n)\n\nexport const getMobileFeaturePopupProps = createSelector(\n  [getLayersByIdWithData, getLayerGroupsByIdWithData, getMobileFeatureModal],\n  (layers, layerGroups, featureModal) => {\n    if (\n      typeof featureModal.layerId !== \"undefined\" &&\n      featureModal.layerId !== false\n    ) {\n      const { layerId } = featureModal\n      const layerName = layers[layerId].name\n      const { layerGroupId } = layers[layerId]\n      const layerGroupName = layerGroups[layerGroupId].name\n      return {\n        ...featureModal,\n        layerName,\n        layerGroupName\n      }\n    }\n    return {\n      ...featureModal,\n      layerName: \"\",\n      layerGroupName: \"\"\n    }\n  }\n)\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/selectors.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 298,
    "kind": "function",
    "name": "getLayersById",
    "memberof": "src/js/selectors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/selectors.js~getLayersById",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/selectors.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 299,
    "kind": "function",
    "name": "getBasemapsById",
    "memberof": "src/js/selectors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/selectors.js~getBasemapsById",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/selectors.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 300,
    "kind": "function",
    "name": "getLayerGroupsById",
    "memberof": "src/js/selectors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/selectors.js~getLayerGroupsById",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/selectors.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 301,
    "kind": "function",
    "name": "getMobileFeatureModal",
    "memberof": "src/js/selectors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/selectors.js~getMobileFeatureModal",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/selectors.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 302,
    "kind": "variable",
    "name": "getBasemapsByIdWithData",
    "memberof": "src/js/selectors.js",
    "static": true,
    "longname": "src/js/selectors.js~getBasemapsByIdWithData",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/selectors.js",
    "importStyle": "{getBasemapsByIdWithData}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 303,
    "kind": "variable",
    "name": "getLayersByIdWithData",
    "memberof": "src/js/selectors.js",
    "static": true,
    "longname": "src/js/selectors.js~getLayersByIdWithData",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/selectors.js",
    "importStyle": "{getLayersByIdWithData}",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 304,
    "kind": "variable",
    "name": "getLayerGroupsByIdWithData",
    "memberof": "src/js/selectors.js",
    "static": true,
    "longname": "src/js/selectors.js~getLayerGroupsByIdWithData",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/selectors.js",
    "importStyle": "{getLayerGroupsByIdWithData}",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 305,
    "kind": "variable",
    "name": "mapLayerGroupsToLayers",
    "memberof": "src/js/selectors.js",
    "static": true,
    "longname": "src/js/selectors.js~mapLayerGroupsToLayers",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/selectors.js",
    "importStyle": "{mapLayerGroupsToLayers}",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 306,
    "kind": "variable",
    "name": "getActiveBasemapId",
    "memberof": "src/js/selectors.js",
    "static": true,
    "longname": "src/js/selectors.js~getActiveBasemapId",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/selectors.js",
    "importStyle": "{getActiveBasemapId}",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 307,
    "kind": "variable",
    "name": "getActiveLayers",
    "memberof": "src/js/selectors.js",
    "static": true,
    "longname": "src/js/selectors.js~getActiveLayers",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/selectors.js",
    "importStyle": "{getActiveLayers}",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 308,
    "kind": "variable",
    "name": "getActiveLayerStyleTypes",
    "memberof": "src/js/selectors.js",
    "static": true,
    "longname": "src/js/selectors.js~getActiveLayerStyleTypes",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/selectors.js",
    "importStyle": "{getActiveLayerStyleTypes}",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 309,
    "kind": "variable",
    "name": "getMobileFeaturePopupProps",
    "memberof": "src/js/selectors.js",
    "static": true,
    "longname": "src/js/selectors.js~getMobileFeaturePopupProps",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/selectors.js",
    "importStyle": "{getMobileFeaturePopupProps}",
    "description": null,
    "lineNumber": 158,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 310,
    "kind": "file",
    "name": "src/js/store.js",
    "content": "import { createStore, combineReducers } from \"redux\"\nimport layers from \"./ducks/layers\"\nimport basemaps from \"./ducks/basemaps\"\nimport map from \"./ducks/map\"\nimport mobile from \"./ducks/mobile\"\nimport pinnedFeatures from \"./ducks/pinnedFeatures\"\nimport nav from \"./ducks/nav\"\n\nconst theReducer = combineReducers({\n  layers,\n  basemaps,\n  map,\n  mobile,\n  pinnedFeatures,\n  nav\n})\nconst store = createStore(\n  theReducer,\n  // eslint-disable-next-line no-underscore-dangle\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\nexport default store\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 311,
    "kind": "variable",
    "name": "theReducer",
    "memberof": "src/js/store.js",
    "static": true,
    "longname": "src/js/store.js~theReducer",
    "access": "public",
    "export": false,
    "importPath": "oblique-photo-viewer/src/js/store.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 312,
    "kind": "variable",
    "name": "store",
    "memberof": "src/js/store.js",
    "static": true,
    "longname": "src/js/store.js~store",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/store.js",
    "importStyle": "store",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 313,
    "kind": "file",
    "name": "src/js/util.js",
    "content": "import CONFIG from \"./config.json\"\n\nconst LAYERS_BY_ID = {}\nconst LAYER_GROUPS_BY_ID = {}\nconst BASEMAPS_BY_ID = {}\n\nfor (const basemapId in CONFIG.map.basemaps) {\n  BASEMAPS_BY_ID[basemapId] = {\n    ...CONFIG.map.basemaps[basemapId],\n    state: \"init\"\n  }\n  BASEMAPS_BY_ID[basemapId].name = BASEMAPS_BY_ID[basemapId].name || basemapId\n}\n\n// Set up layer groups, default values\nfor (const layerGroupId in CONFIG.map.layers) {\n  const layerGroupProperties = CONFIG.map.layers[layerGroupId]\n  // reassign some values\n  const name = layerGroupProperties.name || layerGroupId\n  const layers = []\n  LAYER_GROUPS_BY_ID[layerGroupId] = {\n    ...layerGroupProperties,\n    name,\n    layers,\n    state: \"init\"\n  }\n}\n\n// set up layers, default values\nfor (const layerGroupId in LAYER_GROUPS_BY_ID) {\n  const layerGroupLayers = CONFIG.map.layers[layerGroupId].layers\n  for (const layerId in layerGroupLayers) {\n    const layer = layerGroupLayers[layerId]\n    // reassign some values\n    const name = layer.name || layerId\n    const id = layerId\n    // assign new layer\n    LAYERS_BY_ID[layerId] = {\n      ...layer,\n      id,\n      name,\n      layerGroupId\n    }\n    // add layer ID to layer groups\n    LAYER_GROUPS_BY_ID[layerGroupId].layers.push(layerId)\n  }\n}\n\n/**\n * Get URL for photos associated with a particular feature, layerId\n * @param {string} layerId\n * @param {Object} photoProperties\n */\nexport function getPhotoURLs(layerId, photoProperties) {\n  const urlBase = CONFIG.resources.photos[layerId]\n  let urls = {}\n  // for 2019 photos, instead of modifying the JSON to include a \"urls\"\n  // property, we're just going to take the name and generate urls ourselves\n  if (layerId === \"photos_2019\" || layerId === \"photos_2020\") {\n    const popupName = photoProperties.Name.split(\".\")[0] + \"_pop.jpg\"\n    urls.original = urlBase + \"/\" + photoProperties.Name\n    urls.popup = urlBase + \"/popup/\" + popupName\n    return urls\n  }\n  // All the other photo files have a urls parameter\n  urls = {\n    ...photoProperties.urls\n  }\n  if (layerId === \"photos_2018\") {\n    const split = urls.popup.split(\".\")\n    split[0] += \"_pop\"\n    urls.popup = split.join(\".\")\n  }\n  for (const size in urls) {\n    urls[size] = urlBase + \"/\" + urls[size]\n  }\n  return urls\n}\n\n/**\n * Gets URLS of profile documents based on the feature's properties\n * @param {Object} featureProperties\n */\nexport function getProfileURLs(featureProperties) {\n  const bluffXls = CONFIG.resources.profiles.pathToXls.bluff\n  const bathyXls = CONFIG.resources.profiles.pathToXls.bathy\n  const bluffJson = CONFIG.resources.profiles.pathToJson.bluff\n  const bathyJson = CONFIG.resources.profiles.pathToJson.bathy\n  const urls = {\n    bluffXls: false,\n    bathyXls: false,\n    bathyJson: false,\n    bluffJson: false\n  }\n  if (featureProperties.bluff_xls) {\n    urls.bluffXls = bluffXls + featureProperties.bluff_xls\n    urls.bluffJson = bluffJson + featureProperties.bluff_json\n  }\n  if (featureProperties.bathy_xls) {\n    urls.bathyXls = bathyXls + featureProperties.bathy_xls\n    urls.bathyJson = bathyJson + featureProperties.bathy_json\n  }\n  return urls\n}\n\nexport { LAYERS_BY_ID, LAYER_GROUPS_BY_ID, BASEMAPS_BY_ID }\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/util.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 314,
    "kind": "function",
    "name": "getPhotoURLs",
    "memberof": "src/js/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/util.js~getPhotoURLs",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/util.js",
    "importStyle": "{getPhotoURLs}",
    "description": "Get URL for photos associated with a particular feature, layerId",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "layerId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "photoProperties",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 315,
    "kind": "function",
    "name": "getProfileURLs",
    "memberof": "src/js/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/util.js~getProfileURLs",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/util.js",
    "importStyle": "{getProfileURLs}",
    "description": "Gets URLS of profile documents based on the feature's properties",
    "lineNumber": 84,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "featureProperties",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 316,
    "kind": "variable",
    "name": "LAYERS_BY_ID",
    "memberof": "src/js/util.js",
    "static": true,
    "longname": "src/js/util.js~LAYERS_BY_ID",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/util.js",
    "importStyle": "{LAYERS_BY_ID}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 317,
    "kind": "variable",
    "name": "LAYER_GROUPS_BY_ID",
    "memberof": "src/js/util.js",
    "static": true,
    "longname": "src/js/util.js~LAYER_GROUPS_BY_ID",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/util.js",
    "importStyle": "{LAYER_GROUPS_BY_ID}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 318,
    "kind": "variable",
    "name": "BASEMAPS_BY_ID",
    "memberof": "src/js/util.js",
    "static": true,
    "longname": "src/js/util.js~BASEMAPS_BY_ID",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/util.js",
    "importStyle": "{BASEMAPS_BY_ID}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 319,
    "kind": "file",
    "name": "src/js/wrappers/MapWrapper.jsx",
    "content": "/**\n * MapWrapper.jsx\n * This component contains the primary map container (LeafletMap)\n */\nimport React from \"react\"\nimport { Col } from \"react-bootstrap\"\nimport PropTypes from \"prop-types\"\n\nconst MapWrapper = props => {\n  const xs = 12\n  let sm = 7\n  let md = 8\n  let lg = 9\n  if (props.sidebarOpen === false) {\n    sm = 12\n    md = 12\n    lg = 12\n  }\n  const iconClassNames = [\"fa\"]\n  if (props.sidebarOpen) {\n    iconClassNames.push(\"fa-chevron-left\")\n  } else {\n    iconClassNames.push(\"fa-chevron-right\")\n  }\n  return (\n    <Col xs={xs} sm={sm} md={md} lg={lg} className=\"wiscviewer-map-container\">\n      <div\n        className=\"wiscviewer-sidebar-toggle hidden-xs\"\n        onClick={props.toggleSidebar}\n        role=\"button\"\n        tabIndex={0}\n      >\n        <i className={iconClassNames.join(\" \")} />\n      </div>\n      {props.children}\n    </Col>\n  )\n}\n\nMapWrapper.propTypes = {\n  children: PropTypes.object,\n  sidebarOpen: PropTypes.bool.isRequired,\n  toggleSidebar: PropTypes.func.isRequired\n}\n\nMapWrapper.defaultProps = {\n  children: {}\n}\n\nexport default MapWrapper\n",
    "static": true,
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/src/js/wrappers/MapWrapper.jsx",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 320,
    "kind": "function",
    "name": "MapWrapper",
    "memberof": "src/js/wrappers/MapWrapper.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/js/wrappers/MapWrapper.jsx~MapWrapper",
    "access": "public",
    "export": true,
    "importPath": "oblique-photo-viewer/src/js/wrappers/MapWrapper.jsx",
    "importStyle": "MapWrapper",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "index",
    "content": "![Wisconsin Shoreline Inventory and Oblique Viewer](http://floodatlas.org/asfpm/oblique_viewer/img/wiscviewer-banner.png)\n\n# [Wisconsin Shoreline Inventory and Oblique Photo Viewer](http://floodatlas.org/asfpm/oblique_viewer)\nAn interactive map visualization of Wisconsin coastal data. [More info...](http://floodatlas.org/asfpm/oblique_viewer/about.html)\n\n## Front-end Stack:\n * **Framework**\n   * [React](https://facebook.github.io/react/)\n   * [Redux](http://redux.js.org/)\n * **Map**\n   * [Leaflet](http://leafletjs.com/)\n * **Design**\n   * [React-Bootstrap](https://react-bootstrap.github.io/)\n   * [Sass](http://sass-lang.com/)\n   * [Font Awesome](http://fontawesome.io/)\n * **Workflow**\n   * [Webpack](https://webpack.github.io/)\n   * [Gulp](http://gulpjs.com/)\n   * [Babel](https://babeljs.io/)\n * **Other Libraries**\n   * [axios](https://github.com/mzabriskie/axios)\n\n## Overview\nThe Oblique Photo Viewer app is assembled using the collection of tools above. The source files (```src/```) are compiled, using several tools, into the production version of the application (```dist/```).\n\n## Simple Setup\n1. Clone / Download this repository\n2. Copy the contents of ```dist/``` onto your web server\n\n## Deploying\nTo get updates from GitHub and automatically push the built version to the web server (requires that [git](https://git-scm.com/) CLI is installed)\n\nInstall if you already haven't...\n1. Clone / Download this repository\n2. `npm install`\n3. `gulp build`\n\nAlso:\n1. Make a `server_config.json` (or copy `server_config.example.json` and rename) and specify your webserver location\n\nAfter any changes occur to the GitHub, deploy those changes to the server using:\n1. `npm run deploy`\n\n\n## Modifications\n\n### First: Install\nTo make changes, you will need to: fully install all dependencies, alter the source files, and re-compile the application.\n1. Clone the GitHub repository\n1. ```cd``` to the repository directory\n1. ```npm install```\n\nIf you plan to rebuild .zip files, you'll need to install `gdal`:\n1. [Download](http://trac.osgeo.org/gdal/wiki/DownloadingGdalBinaries)\n1. Make sure that GDAL is added to your path. For mac:\n\n```\necho 'export PATH=/Library/Frameworks/GDAL.framework/Programs:$PATH' >> ~/.bash_profile\nsource ~/.bash_profile\n```\n\n### Changes\n1. Make any changes required to ```src/```\n1. ```gulp dev-build``` to compile for testing, `gulp build` to compile for production\n\nResults will appear in the ```dist/``` folder.\n\nThe app doesn't come shipped with a web server, so you'll need to host `/dist` using your own server or view the files using a browser locally.\n\n### config.json Modifications\nThe configuration file is located in ```src/js/config.json```. It contains select options that can be changed quickly.\n\n#### CONFIG.map\n\n```wisconsinExtent``` - the extent the map zooms to on load, and when the user selects \"Reset View\"\n\n```maxExtent``` - the maximum boundaries of the map\n\n```basemaps``` - contains a list of basemaps to display in the map, in the format of:\n\n````Javascript\n\"BASEMAP_ID\": {\n    \"name\": \"BASEMAP_NAME\",\n    \"url\": \"URL_OF_BASEMAP\",\n    \"defaultActive\": /* Boolean: Whether the basemap should be active on map load */\n}\n````\n```layers``` - contains a list of layer groups and layers to display in the map, in the format of:\n````Javascript\n\"LAYER_GROUP_ID\": {\n    \"name\": \"LAYER_GROUP_NAME\",\n    \"layers\": {\n        \"LAYER_ID\": {\n            \"name\": \"LAYER_NAME\",\n            \"type\": /* \"geojson\" OR \"tileLayer\", mapped to Leaflet layer types of same name */,\n            \"displayType\": /* Optional. If this is a point geometry, you can select 'square' or 'triangle' to resymbolize points to those shapes */,\n            \"styleID\": \"STYLE_ID\", /* referring to the style specified in /src/js/layers/layerStyles.js */\n            \"dataLocation\": \"./data/layers/LAYER.json\", /* for geoJson types, refers to location of geoJSON file with layer data */\n            \"defaultActive\": false, /* boolean: active or inactive on map load */\n            /* feature properties in the geojson mapped to either a string,\n              which will modify the display name of the property in that feature's popup,\n              or a boolean value, indicating whether it should be shown or hidden */\n            \"tableProperties\": {\n              \"propertyNameInGeoJson\": \"Property Name to Show in Popup\"\n              \"aHiddenProperty\": false,\n              \"Properly Formatted Property Name In GeoJSON\": true\n            }\n        },\n        \"ANOTHER_LAYER_ID\": {\n          // ...\n        }\n    }\n}\n````\n```countyShorelines``` - contains a list of county shorelines and their extents, for use in \"zoom to shoreline\" button\n\n#### CONFIG.resources\n- Arbitrary storing of URLs for use in app popups, images\n\n#### Basemap Sources\nThe application utilizes Mapbox basemaps.\n\n### Adding a Layer\n1. Add layer spec to config.json (```src/js/config.json```), within the ```map.layers``` property as documented above\n1. If a geojson layer, add that layer's geojson file to ```src/js/data/layers/```\n1. If you want to style the layer (geojson layers only), add a (Leaflet) style function in ```src/js/layers/layerStyles.js```\n1. If the layer should have different styles for different types of features, make sure to add a case to the `getLayerSubStyleName` function\n1. To make custom modifications to a layer's popup, modify ```src/js/components/FeaturePopups/components/PopupTabs```\n    1. If you have to show images in the popup, you'll probably have to modify `src/js/util.js` in the `getPhotoURLs` function. Previously, I amended the photo JSON files themselves, but with the 2019 photos, I just added a separate case for building the appropriate original and popup images URLs. \n    2. Also, if adding a photos file, modify `src/js/components/FeaturePopups/components/PopupFooter.jsx` to include a download button for the full size image\n1. Rebuild the application\n\n### Adding / Modifying / Removing data from downloads\n- Recreating the downloadable .zips / shapefiles requires running a separate gulp task, `make-downloads`\n\n1. Change data in `src/data`\n1. Run `gulp make-downloads`\n1. Rebuild the application (`gulp build` or `gulp dev-build`)\n\n### Pull Requests\n\nWhen making pull requests, please use the gulp task `lint` to lint your files before submitting.\n\n### Releases\n\nOnly issue a release after running the `gulp build` task, so that the /dist folder is built using the production configuration\n",
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"oblique-photo-viewer\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Oblique Photo Viewer\",\n  \"main\": \"dist/app.bundle.js\",\n  \"scripts\": {\n    \"build\": \"npm run format-js && gulp build\",\n    \"deploy\": \"git fetch --all && git checkout origin/master --force && npm install && gulp deploy\",\n    \"gh-pages\": \"gulp build && git subtree push --prefix dist origin gh-pages\",\n    \"lint-js\": \"eslint --ext .js,.jsx src/js/**\",\n    \"format-js\": \"eslint --ext .js,.jsx src/js/** --fix && prettier --write './**/*.{js,jsx}' || prettier --write './**/*.{js,jsx}'\",\n    \"format-css\": \"prettier-stylelint --write 'src/**/*.{css,scss}'\",\n    \"make-docs\": \"./node_modules/.bin/esdoc\",\n    \"make-downloads\": \"gulp make-downloads\",\n    \"start\": \"gulp build && http-server ./dist -o & gulp watch-files\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/CaitW/oblique-photo-viewer.git\"\n  },\n  \"keywords\": [\n    \"Oblique\",\n    \"Photo\",\n    \"Viewer\",\n    \"Shoreline\",\n    \"Inventory\"\n  ],\n  \"author\": \"Caitlin Wolters, ASFPM\",\n  \"license\": \"ISC\",\n  \"devDependencies\": {\n    \"@babel/plugin-proposal-object-rest-spread\": \"^7.12.1\",\n    \"@babel/preset-env\": \"^7.12.7\",\n    \"@babel/preset-react\": \"^7.12.7\",\n    \"babel-core\": \"^6.22.1\",\n    \"babel-eslint\": \"10.0.1\",\n    \"babel-loader\": \"8.0.5\",\n    \"del\": \"4.1.0\",\n    \"esdoc\": \"^1.0.2\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-jsx-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^5.16.0\",\n    \"eslint-config-airbnb\": \"^17.1.1\",\n    \"eslint-config-prettier\": \"^4.3.0\",\n    \"eslint-plugin-import\": \"^2.22.1\",\n    \"eslint-plugin-jsx-a11y\": \"^6.4.1\",\n    \"eslint-plugin-prettier\": \"^3.1.4\",\n    \"eslint-plugin-react\": \"^7.21.5\",\n    \"gdal\": \"^0.9.9\",\n    \"gulp\": \"^4.0.2\",\n    \"gulp-concat\": \"^2.6.1\",\n    \"gulp-debug\": \"4.0.0\",\n    \"gulp-esdoc\": \"^0.4.1\",\n    \"gulp-eslint\": \"5.0.0\",\n    \"gulp-jsonminify\": \"^1.0.0\",\n    \"gulp-livereload\": \"4.0.1\",\n    \"gulp-sass\": \"4.0.2\",\n    \"gulp-shell\": \"0.7.0\",\n    \"gulp-stylelint\": \"8.0.0\",\n    \"gulp-uglifycss\": \"^1.0.8\",\n    \"gulp-util\": \"^3.0.8\",\n    \"gulp-watch\": \"5.0.1\",\n    \"gulp-zip\": \"^4.0.0\",\n    \"http-server\": \"^0.11.1\",\n    \"json-loader\": \"^0.5.4\",\n    \"ogr2ogr\": \"^1.5.0\",\n    \"prettier\": \"1.16.4\",\n    \"prettier-stylelint\": \"^0.4.2\",\n    \"raw-loader\": \"2.0.0\",\n    \"stylelint-config-standard\": \"18.2.0\",\n    \"stylelint-scss\": \"3.5.4\",\n    \"stylelint-selector-bem-pattern\": \"2.1.0\",\n    \"webpack\": \"4.29.6\",\n    \"webpack-cli\": \"^3.3.12\",\n    \"webpack-stream\": \"^5.2.1\"\n  },\n  \"dependencies\": {\n    \"axios\": \"0.18.0\",\n    \"d3\": \"5.9.2\",\n    \"d3-array\": \"2.0.3\",\n    \"d3-axis\": \"^1.0.8\",\n    \"d3-request\": \"^1.0.5\",\n    \"d3-scale\": \"3.0.0\",\n    \"d3-selection\": \"^1.4.2\",\n    \"d3-shape\": \"^1.3.7\",\n    \"leaflet\": \"^1.7.1\",\n    \"leaflet-svg-shape-markers\": \"git+https://github.com/CaitW/Leaflet.SvgShapeMarkers.git#1d7d24b1fd886c66fbde58616ffe43c9fe9014af\",\n    \"prop-types\": \"^15.7.2\",\n    \"react\": \"16.8.6\",\n    \"react-bootstrap\": \"^0.31.3\",\n    \"react-dom\": \"16.8.6\",\n    \"react-draggable\": \"^3.3.2\",\n    \"react-redux\": \"7.0.1\",\n    \"react-svg-inline\": \"^2.0.0\",\n    \"redux\": \"4.0.1\",\n    \"reselect\": \"4.0.0\",\n    \"turf\": \"^3.0.14\",\n    \"uuid\": \"^3.4.0\"\n  }\n}\n",
    "longname": "/Users/omnisciemployee/Documents/repos/oblique-photo-viewer/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]